<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Aml.Editor.Plugin.Contracts Namespace</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Aml.Editor.Plugin.Contracts namespace" /><meta name="Microsoft.Help.F1" content="Aml.Editor.Plugin.Contracts" /><meta name="Microsoft.Help.Id" content="N:Aml.Editor.Plugin.Contracts" /><meta name="Description" content="The Aml.Editor.Plugin.Contracts Namespace contains Classes and Interfaces for AutomationML Editor Plugin Developers." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Aml.Editor.Plugin.Contracts" /><meta name="file" content="N_Aml_Editor_Plugin_Contracts" /><meta name="guid" content="N_Aml_Editor_Plugin_Contracts" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">The AutomationML Editor PlugIn Implementation Guide<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html\3888aca7-dd3a-4d0f-b73b-c6701e9d8d8c.htm" title="The AutomationML Editor PlugIn Implementation Guide" tocid="roottoc">The AutomationML Editor PlugIn Implementation Guide</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_AMLEditorPluginDocumentation.htm" title="AutomationML Editor Plugin Development" tocid="R_Project_AMLEditorPluginDocumentation">AutomationML Editor Plugin Development</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Aml_Editor_Plugin_Contracts.htm" title="Aml.Editor.Plugin.Contracts" tocid="N_Aml_Editor_Plugin_Contracts">Aml.Editor.Plugin.Contracts</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_Aml_Editor_Plugin_Contracts_DockPositionEnum.htm" title="DockPositionEnum Enumeration" tocid="T_Aml_Editor_Plugin_Contracts_DockPositionEnum">DockPositionEnum Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Aml_Editor_Plugin_Contracts_IAMLEditorExternalsPlugin.htm" title="IAMLEditorExternalsPlugin Interface" tocid="T_Aml_Editor_Plugin_Contracts_IAMLEditorExternalsPlugin">IAMLEditorExternalsPlugin Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Aml_Editor_Plugin_Contracts_IAMLEditorPlugin.htm" title="IAMLEditorPlugin Interface" tocid="T_Aml_Editor_Plugin_Contracts_IAMLEditorPlugin">IAMLEditorPlugin Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Aml_Editor_Plugin_Contracts_IAMLEditorView.htm" title="IAMLEditorView Interface" tocid="T_Aml_Editor_Plugin_Contracts_IAMLEditorView">IAMLEditorView Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Aml_Editor_Plugin_Contracts_IAMLEditorViewCollection.htm" title="IAMLEditorViewCollection Interface" tocid="T_Aml_Editor_Plugin_Contracts_IAMLEditorViewCollection">IAMLEditorViewCollection Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Aml_Editor_Plugin_Contracts_INotifyAMLDocumentLoad.htm" title="INotifyAMLDocumentLoad Interface" tocid="T_Aml_Editor_Plugin_Contracts_INotifyAMLDocumentLoad">INotifyAMLDocumentLoad Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Aml_Editor_Plugin_Contracts_INotifyViewActivation.htm" title="INotifyViewActivation Interface" tocid="T_Aml_Editor_Plugin_Contracts_INotifyViewActivation">INotifyViewActivation Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Aml_Editor_Plugin_Contracts_ISupportsSelection.htm" title="ISupportsSelection Interface" tocid="T_Aml_Editor_Plugin_Contracts_ISupportsSelection">ISupportsSelection Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Aml_Editor_Plugin_Contracts_IToolBarIntegration.htm" title="IToolBarIntegration Interface" tocid="T_Aml_Editor_Plugin_Contracts_IToolBarIntegration">IToolBarIntegration Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Aml_Editor_Plugin_Contracts_PluginCommand.htm" title="PluginCommand Class" tocid="T_Aml_Editor_Plugin_Contracts_PluginCommand">PluginCommand Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_Aml_Editor_Plugin_Contracts_PluginCommandsEnum.htm" title="PluginCommandsEnum Enumeration" tocid="T_Aml_Editor_Plugin_Contracts_PluginCommandsEnum">PluginCommandsEnum Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Aml_Editor_Plugin_Contracts_RelayCommand_1.htm" title="RelayCommand(T) Class" tocid="T_Aml_Editor_Plugin_Contracts_RelayCommand_1">RelayCommand(T) Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Aml_Editor_Plugin_Contracts_SelectionEventArgs.htm" title="SelectionEventArgs Class" tocid="T_Aml_Editor_Plugin_Contracts_SelectionEventArgs">SelectionEventArgs Class</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img alt="AutomationML" src="../icons/logoShade.png" /></td><td class="titleColumn"><h1>Aml.Editor.Plugin.Contracts Namespace</h1></td></tr></table><span class="introStyle">AutomationML Editor</span> <div class="summary">
            The Aml.Editor.Plugin.Contracts Namespace contains Classes and Interfaces for AutomationML
            Editor Plugin Developers. The Interface Classes should be used as MEF Contracts, that
            matches Import and Export components, defined by Import and Export Attributes, at runtime.
            An AutomationML Editor Plugin will export the components, implementing the Interfaces in the
            Contract DLL and the AutomationML Editor imports those components. The Contracts DLL is
            managed on <a href="https://www.nuget.org/packages/AML.Editor.PluginContract/">nuget.</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Classes</span></div><div id="ID0RBSection" class="collapsibleSection"><table class="members" id="classList"><tr><th class="iconColumn">
					 
				</th><th>Class</th><th>Description</th></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Aml_Editor_Plugin_Contracts_PluginCommand.htm">PluginCommand</a></td><td><div class="summary">
            Class PluginCommand is used to publish Commands from a PlugIn to the AutomationML Editor.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Aml_Editor_Plugin_Contracts_RelayCommand_1.htm">RelayCommand<span id="LST26F29B31_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST26F29B31_0?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST26F29B31_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST26F29B31_1?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
            Class RelayCommand as it was defined in an MSDN Article <a href="http://msdn.microsoft.com/en-us/magazine/dd419663.aspx#id0090030">by Josh Smith.</a>
            This class is an implementation pattern for a plugin command, which the AutomationML Editor
            can bind to a plugin Menu. This Implementation provides the UI with the state information, to enabled or disable a command, and with the 
            invocation Method.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Aml_Editor_Plugin_Contracts_SelectionEventArgs.htm">SelectionEventArgs</a></td><td><div class="summary">
            The event arguments for the selection event <a href="E_Aml_Editor_Plugin_Contracts_ISupportsSelection_Selected.htm">Selected</a>.
            </div></td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Interfaces</span></div><div id="ID1RBSection" class="collapsibleSection"><table class="members" id="interfaceList"><tr><th class="iconColumn">
					 
				</th><th>Interface</th><th>Description</th></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Aml_Editor_Plugin_Contracts_IAMLEditorExternalsPlugin.htm">IAMLEditorExternalsPlugin</a></td><td><div class="summary">
            This interface can be implemented by plugIns, which are used to view external data, referenced by external data connectors in an AutomationML file or stream.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="T_Aml_Editor_Plugin_Contracts_IAMLEditorPlugin.htm">IAMLEditorPlugin</a></td><td><div class="summary">
             InterfaceClass for any AutomationML Editor PlugIn.
             The AutomationML Editor is the Host Application for any PlugIn, which implements this interface.
             The PlugIn implementing this interface will typically run it's own user interface thread. For an
             integrated UI-PlugIn, which will be controlled by the AutomationML Editors Main UI-Thread the
             <a href="T_Aml_Editor_Plugin_Contracts_IAMLEditorView.htm">IAMLEditorView</a>-Interface Contract has to be used.
             </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="T_Aml_Editor_Plugin_Contracts_IAMLEditorView.htm">IAMLEditorView</a></td><td><div class="summary">
             The Interface IAMLEditorView is used for a PlugIn, which can be embedded in
             the AutomationML Editor's Window- and Docking-Manager. The PlugIn must implement the
             IFrameworkInputElement Interface (as an example, a WPF UserControl) and
             the <a href="T_Aml_Editor_Plugin_Contracts_IAMLEditorPlugin.htm">IAMLEditorPlugin</a> Interface. For windows, based on <span class="nolink">System.Windows.Forms</span> ,
             the view must have a <span class="nolink">WindowsFormsHost</span> wrapper.
             </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="T_Aml_Editor_Plugin_Contracts_IAMLEditorViewCollection.htm">IAMLEditorViewCollection</a></td><td><div class="summary">
             The Interface IAMLEditorViewCollection is used for a PlugIn, which can be embedded in
             the AutomationML Editor's Window- and Docking-Manager. This PlugIn can provide
             multiple independent views, to be embedded at different positions in the AML Editor where
             each of the views shall implement the <a href="T_Aml_Editor_Plugin_Contracts_IAMLEditorView.htm">IAMLEditorView</a> interface.    /// 
             It is possible to dynamically add and remove views from the collection while the PlugIn is
             active.
             </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Aml_Editor_Plugin_Contracts_INotifyAMLDocumentLoad.htm">INotifyAMLDocumentLoad</a></td><td><div class="summary">
            This PlugIn interface can be implemented to get notifications when an AML document
            is loaded or unloaded by the AutomationML editor.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Aml_Editor_Plugin_Contracts_INotifyViewActivation.htm">INotifyViewActivation</a></td><td><div class="summary">
            This interfaces is used to implement a PlugIn which will receive a notification, when the AMLEditor activates a view.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Aml_Editor_Plugin_Contracts_ISupportsSelection.htm">ISupportsSelection</a></td><td><div class="summary">
            This interface can be implemented by a PlugIn to get the AutomationML editor to select a
            CAEX element in a tree view. 
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Aml_Editor_Plugin_Contracts_IToolBarIntegration.htm">IToolBarIntegration</a></td><td><div class="summary">
            This interface can be implemented by PlugIns which provide commands, integrated into the AMLEditors tool bar.
            </div></td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Enumerations</span></div><div id="ID2RBSection" class="collapsibleSection"><table class="members" id="enumerationList"><tr><th class="iconColumn">
					 
				</th><th>Enumeration</th><th>Description</th></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_Aml_Editor_Plugin_Contracts_DockPositionEnum.htm">DockPositionEnum</a></td><td><div class="summary">
            This enum defines the possible docking positions for a plugIn window, when it is layouted by the Editors
            Docking manager.
            </div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_Aml_Editor_Plugin_Contracts_PluginCommandsEnum.htm">PluginCommandsEnum</a></td><td><div class="summary">
            Enumeration Constants for Plugin Commands. This Constants are used in the Host AutomationML Editor Application 
            to Execute a Plugin internal command. The Plugin should at least publish these commands to the Host via its command list.
            </div></td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID3RBSection" class="collapsibleSection">
            All Plugins which export an interface are loaded into the AutomationML Editor at startup
            only. If the AutomationML Editor restarts after a crash, no Plugins are loaded, because the
            crash may be caused by a Plugin. To get a Plugin loaded, the DLLs have to be in the Plugins
            Folder in the Execution Directory of the Editor. Only the AutomationML Editor Version 4 and
            higher supports 3d Party Plugins.
            </div></div></div><div id="pageFooter" class="pageFooter"><p><a href="https://www.automationml.org" target="_blank">Copyright © AutomationML e.V. 2018</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:office%40AutomationML.org?Subject=The AutomationML Editor PlugIn Implementation Guide">AutomationML office</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div></body></html>