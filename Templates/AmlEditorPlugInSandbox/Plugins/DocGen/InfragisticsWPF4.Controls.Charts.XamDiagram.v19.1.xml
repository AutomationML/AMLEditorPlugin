<?xml version="1.0"?>
<doc>
    <assembly>
        <name>InfragisticsWPF4.Controls.Charts.XamDiagram.v19.1</name>
    </assembly>
    <members>
        <member name="M:LocalizedCategoryAttribute.GetLocalizedString(System.String)">
            <summary>
            Returns the localized category name
            </summary>
            <param name="value">Name of the category to retreive</param>
            <returns>The localized string value</returns>
        </member>
        <member name="M:InternalDynamicResourceString.#ctor(Infragistics.Shared.ResourceCustomizer,System.Globalization.CultureInfo,System.String,System.Object[])">
            <summary>
            This constructor is for internal use only.
            </summary>
        </member>
        <member name="M:InternalDynamicResourceString.GetStringFromResource(System.String,System.Globalization.CultureInfo)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:Infragistics.AutomationPeers.DiagramConnectionAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Controls.Charts.DiagramConnection"/> types to UI Automation.
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.DiagramConnectionAutomationPeer.#ctor(Infragistics.Controls.Charts.DiagramConnection)">
            <summary>
            Initializes a new <see cref="T:Infragistics.AutomationPeers.DiagramConnectionAutomationPeer"/>.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:Infragistics.AutomationPeers.DiagramConnectionAutomationPeer.GetClassNameCore">
            <summary>
            Gets the class name of the <see cref="T:Infragistics.Controls.Charts.DiagramConnection"/>. 
            </summary>
        </member>
        <member name="T:Infragistics.AutomationPeers.DiagramNodeAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Controls.Charts.DiagramNode"/> types to UI Automation.
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.DiagramNodeAutomationPeer.#ctor(Infragistics.Controls.Charts.DiagramNode)">
            <summary>
            Initializes a new <see cref="T:Infragistics.AutomationPeers.DiagramNodeAutomationPeer"/>.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:Infragistics.AutomationPeers.DiagramNodeAutomationPeer.GetClassNameCore">
            <summary>
            Gets the class name of the <see cref="T:Infragistics.Controls.Charts.DiagramNode"/>. 
            </summary>
        </member>
        <member name="T:Infragistics.AutomationPeers.DiagramItemAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Controls.Charts.DiagramItem"/> types to UI Automation.
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.DiagramItemAutomationPeer.#ctor(Infragistics.Controls.Charts.DiagramItem)">
            <summary>
            Initializes a new <see cref="T:Infragistics.AutomationPeers.DiagramItemAutomationPeer"/>.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:Infragistics.AutomationPeers.DiagramItemAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type of the <see cref="T:Infragistics.Controls.Charts.DiagramItem"/>.
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.DiagramItemAutomationPeer.GetClassNameCore">
            <summary>
            Gets the class name of the <see cref="T:Infragistics.Controls.Charts.DiagramItem"/>. 
            </summary>
        </member>
        <member name="T:Infragistics.AutomationPeers.DiagramToolboxCategoryItemAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.AutomationPeers.DiagramToolboxCategoryItemAutomationPeer"/> types to UI Automation.
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.DiagramToolboxCategoryItemAutomationPeer.#ctor(Infragistics.Controls.Charts.Primitives.DiagramToolboxCategoryItem)">
            <summary>
            Initializes a new <see cref="T:Infragistics.AutomationPeers.DiagramToolboxCategoryItemAutomationPeer"/>.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:Infragistics.AutomationPeers.DiagramToolboxCategoryItemAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type of the <see cref="T:Infragistics.Controls.Charts.Primitives.DiagramToolboxCategoryItem"/>.
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.DiagramToolboxCategoryItemAutomationPeer.GetClassNameCore">
            <summary>
            Gets the class name of the <see cref="T:Infragistics.Controls.Charts.Primitives.DiagramToolboxCategoryItem"/>. 
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.DiagramToolboxCategoryItemAutomationPeer.GetNameCore">
            <summary>
            Gets the name of the <see cref="T:Infragistics.Controls.Charts.Primitives.DiagramToolboxCategoryItem"/>.
            </summary>
        </member>
        <member name="T:Infragistics.AutomationPeers.DiagramOptionsPaneAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.AutomationPeers.DiagramOptionsPaneAutomationPeer"/> types to UI Automation.
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.DiagramOptionsPaneAutomationPeer.#ctor(Infragistics.Controls.Charts.Primitives.DiagramOptionsPane)">
            <summary>
            Initializes a new <see cref="T:Infragistics.AutomationPeers.DiagramOptionsPaneAutomationPeer"/>.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:Infragistics.AutomationPeers.DiagramOptionsPaneAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type of the <see cref="T:Infragistics.Controls.Charts.Primitives.DiagramOptionsPane"/>.
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.DiagramOptionsPaneAutomationPeer.GetClassNameCore">
            <summary>
            Gets the class name of the <see cref="T:Infragistics.Controls.Charts.Primitives.DiagramOptionsPane"/>. 
            </summary>
        </member>
        <member name="T:Infragistics.AutomationPeers.XamDiagramToolboxAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.AutomationPeers.XamDiagramToolboxAutomationPeer"/> types to UI Automation.
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamDiagramToolboxAutomationPeer.#ctor(Infragistics.Controls.Charts.XamDiagramToolbox)">
            <summary>
            Initializes a new <see cref="T:Infragistics.AutomationPeers.XamDiagramToolboxAutomationPeer"/>.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamDiagramToolboxAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type of the <see cref="T:Infragistics.Controls.Charts.XamDiagramToolbox"/>.
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamDiagramToolboxAutomationPeer.GetClassNameCore">
            <summary>
            Gets the class name of the <see cref="T:Infragistics.Controls.Charts.XamDiagramToolbox"/>. 
            </summary>
        </member>
        <member name="T:Infragistics.AutomationPeers.XamDiagramAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.AutomationPeers.XamDiagramAutomationPeer"/> types to UI Automation.
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamDiagramAutomationPeer.#ctor(Infragistics.Controls.Charts.XamDiagram)">
            <summary>
            Initializes a new <see cref="T:Infragistics.AutomationPeers.XamDiagramAutomationPeer"/>.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamDiagramAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type of the <see cref="T:Infragistics.Controls.Charts.XamDiagram"/>.
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamDiagramAutomationPeer.GetClassNameCore">
            <summary>
            Gets the class name of the <see cref="T:Infragistics.Controls.Charts.XamDiagram"/>. 
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramCommands">
            <summary>
            Provides a set of <see cref="T:Infragistics.Controls.Charts.XamDiagram"/> related commands.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramCommands.EnterEditMode">
            <summary>
            Gets the value that represents the EnterEditMode command.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramCommands.ExitEditMode">
            <summary>
            Gets the value that represents the ExitEditMode command.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramCommands.ToggleEditMode">
            <summary>
            Gets the value that represents the ToggleEditMode command.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramCommands.ShowOptionsPane">
            <summary>
            Gets the value that represents the ShowOptionsPane command.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramCommands.CloseOptionsPane">
            <summary>
            Gets the value that represents the CloseOptionsPane command.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramCommands.BringForward">
            <summary>
            Gets the value that represents the BringForward command.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramCommands.SendBackward">
            <summary>
            Gets the value that represents the SendBackward command.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramCommands.BringToFront">
            <summary>
            Gets the value that represents the BringToFront command.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramCommands.SendToBack">
            <summary>
            Gets the value that represents the SendToBack command.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramConnection">
            <summary>
            Represents a connection visualized in the <see cref="T:Infragistics.Controls.Charts.XamDiagram"/> control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.DiagramConnection"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnection.StartNode">
            <summary>
            Gets or sets the start node.
            </summary>
            <remarks>
            Setting this property will set the <see cref="P:Infragistics.Controls.Charts.DiagramConnection.StartNodeKey"/> property 
            to value of the <see cref="P:DiagramNode.Key"/> property of the new node.
            </remarks>        
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnection.StartNodeProperty">
            <summary>
            Identifies the StartNode dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnection.OnStartNodeChanged(Infragistics.Controls.Charts.DiagramNode,Infragistics.Controls.Charts.DiagramNode)">
            <summary>
            StartNode property changed handler.
            </summary>
            <param name="oldNode">The old node.</param>
            <param name="newNode">The new node.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnection.EndNode">
            <summary>
            Gets or sets the end node.
            </summary>
            <remarks>
            Setting this property will set the <see cref="P:Infragistics.Controls.Charts.DiagramConnection.EndNodeKey"/> property 
            to value of the <see cref="P:DiagramNode.Key"/> property of the new node.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnection.EndNodeProperty">
            <summary>
            Identifies the EndNode dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnection.OnEndNodeChanged(Infragistics.Controls.Charts.DiagramNode,Infragistics.Controls.Charts.DiagramNode)">
            <summary>
            StartNode property changed handler.
            </summary>
            <param name="oldNode">The old node.</param>
            <param name="newNode">The new node.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnection.EndNodeKey">
            <summary>
            Gets or sets the <see cref="P:DiagramNode.Key"/> of the end node.
            </summary>
            <remarks>
            Setting this property to an object different than the key of the current
            <see cref="P:Infragistics.Controls.Charts.DiagramConnection.EndNode"/>, if there is such, will disconnect the current 
            end node and the node that matches the new key will be set as the <see cref="P:Infragistics.Controls.Charts.DiagramConnection.EndNode"/>.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnection.EndNodeKeyProperty">
            <summary>
            Identifies the EndNodeKey dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnection.OnEndNodeKeyChanged(System.Object,System.Object)">
            <summary>
            EndNodeKey property changed handler.
            </summary>
            <param name="oldKey">The old key.</param>
            <param name="newKey">The new key.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnection.StartNodeKey">
            <summary>
            Gets or sets the <see cref="P:DiagramNode.Key"/> of the start node.
            </summary>
            <remarks>
            Setting this property to an object different than the key of the current
            <see cref="P:Infragistics.Controls.Charts.DiagramConnection.StartNode"/>, if there is such, will disconnect the current 
            start node and the node that matches the new key will be set as the <see cref="P:Infragistics.Controls.Charts.DiagramConnection.StartNode"/>.
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnection.StartNodeKeyProperty">
            <summary>
            Identifies the StartNodeKey dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnection.OnStartNodeKeyChanged(System.Object,System.Object)">
            <summary>
            StartNodeKey property changed handler.<br/>
            </summary>
            <param name="oldId">The old identifier.</param>
            <param name="newId">The new identifier.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnection.StartPosition">
            <summary>
            Gets or sets the start point. Setting this property
            will disconnect the current <see cref="P:Infragistics.Controls.Charts.DiagramConnection.StartNode"/> if there is such.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnection.StartPositionProperty">
            <summary>
            Identifies the StartPosition dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnection.OnStartPositionChanged(System.Windows.Point,System.Windows.Point)">
            <summary>
            StartPosition property changed handler.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnection.EndPosition">
            <summary>
            Gets or sets the end point. Setting this property
            will disconnect the current <see cref="P:Infragistics.Controls.Charts.DiagramConnection.EndNode"/> if there is such.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnection.EndPositionProperty">
            <summary>
            Identifies the EndPosition dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnection.OnEndPositionChanged(System.Windows.Point,System.Windows.Point)">
            <summary>
            EndPosition property changed handler.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnection.StartNodeConnectionPointName">
            <summary>
            Gets or sets the name of a point on the start node to connect to.
            If a match is found, the connection will start exactly at that point.
            </summary>
            <value>
            A string equal to the value of the <see cref="M:ConnectionPoint.Name"/> of the targeted connection point.
            </value>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnection.StartNodeConnectionPointNameProperty">
            <summary>
            Identifies the StartNodeConnectionPointName dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnection.OnStartNodeConnectionPointNameChanged(System.String,System.String)">
            <summary>
            StartNodeConnectionPointName property changed handler.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnection.EndNodeConnectionPointName">
            <summary>
            Gets or sets the name of a point on the end node to connect to.
            If a match is found, the connection will end exactly at that point.
            </summary>
            <value>
            A string equal to the value of the <see cref="M:ConnectionPoint.Name"/> of the targeted connection point.
            </value>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnection.EndNodeConnectionPointNameProperty">
            <summary>
            Identifies the EndNodeConnectionPointName dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnection.OnEndNodeConnectionPointNameChanged(System.String,System.String)">
            <summary>
            EndNodeConnectionPointName property changed handler.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnection.StartCapType">
            <summary>
            Gets or sets the type of the start cap.
            </summary>
            <value>
            A value of the <see cref="T:Infragistics.Controls.Charts.DiagramConnectionCapType"/> enumeration.
            </value>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnection.StartCapTypeProperty">
            <summary>
            Identifies the StartCapType dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnection.OnStartCapTypeChanged(Infragistics.Controls.Charts.DiagramConnectionCapType,Infragistics.Controls.Charts.DiagramConnectionCapType)">
            <summary>
            StartCapType property changed handler.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnection.EndCapType">
            <summary>
            Gets or sets the type of the end cap.
            </summary>
            <value>
            A value of the <see cref="T:Infragistics.Controls.Charts.DiagramConnectionCapType"/> enumeration.
            </value>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnection.EndCapTypeProperty">
            <summary>
            Identifies the EndCapType dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnection.OnEndCapTypeChanged(Infragistics.Controls.Charts.DiagramConnectionCapType,Infragistics.Controls.Charts.DiagramConnectionCapType)">
            <summary>
            EndCapType property changed handler.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnection.StartCapSize">
            <summary>
            Gets or sets the size of the start cap.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnection.StartCapSizeProperty">
            <summary>
            Identifies the StartCapSize dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnection.OnStartCapSizeChanged(System.Windows.Size,System.Windows.Size)">
            <summary>
            StartCapSize property changed handler.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnection.EndCapSize">
            <summary>
            Gets or sets the size of the end cap.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnection.EndCapSizeProperty">
            <summary>
            Identifies the EndCapSize dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnection.OnEndCapSizeChanged(System.Windows.Size,System.Windows.Size)">
            <summary>
            EndCapSize property changed handler.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnection.StartCapStyle">
            <summary>
            Gets or sets a style for the start cap. When this property is set,
            a <see cref="T:Infragistics.Controls.Charts.DiagramConnectionCapPresenter"/> is created and used as the start cap. <br/>
            When this property is set, the <see cref="P:Infragistics.Controls.Charts.DiagramConnection.StartCapType"/>
            and <see cref="P:Infragistics.Controls.Charts.DiagramConnection.StartCapSize"/> properties have no effect.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnection.StartCapStyleProperty">
            <summary>
            Identifies the StartCapStyle dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnection.OnStartCapStyleChanged(System.Windows.Style,System.Windows.Style)">
            <summary>
            StartCapStyle property changed handler.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnection.EndCapStyle">
            <summary>
            Gets or sets a style for the end cap. When this property is set,
            a <see cref="T:Infragistics.Controls.Charts.DiagramConnectionCapPresenter"/> is created and used as the end cap. <br/>
            When this property is set, the <see cref="P:Infragistics.Controls.Charts.DiagramConnection.EndCapType"/>
            and <see cref="P:Infragistics.Controls.Charts.DiagramConnection.EndCapSize"/> properties have no effect.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnection.EndCapStyleProperty">
            <summary>
            Identifies the EndCapStyle dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnection.OnEndCapStyleChanged(System.Windows.Style,System.Windows.Style)">
            <summary>
            EndCapStyle property changed handler.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnection.ConnectionType">
            <summary>
            Gets or sets the type of the connection.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnection.ConnectionTypeProperty">
            <summary>
            Identifies the ConnectionType dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnection.OnConnectionTypeChanged(Infragistics.Controls.Charts.DiagramConnectionType,Infragistics.Controls.Charts.DiagramConnectionType)">
            <summary>
            ConnectionType property changed handler.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnection.ContentPositionProperty">
            <summary>
            Identifies the ContentPosition dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnection.ContentPosition">
            <summary>
            Gets the value of the ContentPosition property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnection.ConnectionDefinition">
            <summary>
            Gets the assigned connection definition.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnection.Clone">
            <summary>
            Clones this instance copying all the relevant properties to the clone instance.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnection.Clone(System.Boolean)">
            <summary>
            Clones this instance copying all the relevant properties to the clone instance.
            </summary>
            <param name="cloneContent">Include/Exclude cloning the Content</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnection.Move(System.Double,System.Double)">
            <summary>
            Moves the connection by the specified offset.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnection.ExportViewShapes">
            <summary>
            Exports the view shapes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnection.GetDrawingVisual">
            <summary>
            Gets a <see cref="T:System.Windows.Media.DrawingVisual"/> instance representing the connection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnection.CloneDiagramConnectionProperties(Infragistics.Controls.Charts.DiagramConnection,Infragistics.Controls.Charts.DiagramConnection)">
            <summary>
            Clones the diagram connection properties from the original to the clone.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnection.CloneDiagramConnectionProperties(Infragistics.Controls.Charts.DiagramConnection,Infragistics.Controls.Charts.DiagramConnection,System.Boolean)">
            <summary>
            Clones the diagram connection properties from the original to the clone.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnection.OnContentChanged(System.Object,System.Object)">
            <summary>
            Content property changed handler.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnection.OnDiagramChanged(Infragistics.Controls.Charts.XamDiagram,Infragistics.Controls.Charts.XamDiagram)">
            <summary>
            Called when the <see cref="P:Infragistics.Controls.Charts.DiagramItem.Diagram"/> property has changed.
            </summary>
            <remarks>Overriding this method without calling the base implementation will have undesired results.</remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnection.OnBoundsChanged(System.Windows.Rect,System.Windows.Rect)">
            <summary>
            Called when the <see cref="P:DiagramItem.Bounds" /> property value has changed.
            </summary>
            <param name="oldValue">The old bounds rectangle.</param>
            <param name="newValue">The new bounds rectangle.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnection.OnApplyTemplate">
            <summary>
            Called when <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> is called.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnection.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:MouseMove"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnection.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="T:Infragistics.Controls.Charts.DiagramConnection"/> to UI Automation.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnection.OnZIndexChanged(System.Int32,System.Int32)">
            <summary>
            ZIndexProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramConnectionCapPresenter">
            <summary>
            Represents a cap for <see cref="T:Infragistics.Controls.Charts.DiagramConnection"/> within <see cref="T:Infragistics.Controls.Charts.XamDiagram"/> control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnectionCapPresenter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.DiagramConnectionCapPresenter"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnectionCapPresenter.LineOffset">
            <summary>
            Moves the actual end point of the connection, along the connection line, by the specified value.
            This property could be used to make sure the connection line is not drawn under a partially transparent cap.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionCapPresenter.LineOffsetProperty">
            <summary>
            Identifies the LineOffset dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnectionCapPresenter.UseRotation">
            <summary>
            Gets or sets a value indicating whether to rotate the cap at the angle the connection is going into the node.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionCapPresenter.UseRotationProperty">
            <summary>
            Identifies the UseRotation dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnectionCapPresenter.PlacementOffset">
            <summary>
            By default custom caps are centered at the connection point on the node. 
            This property allows moving the cap along the connection line.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionCapPresenter.PlacementOffsetProperty">
            <summary>
            Identifies the PlacementOffset dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnectionCapPresenter.Connection">
            <summary>
            Gets the connection this cap belongs to.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramConnectionPoint">
            <summary>
            An object representing a point on a <see cref="T:Infragistics.Controls.Charts.DiagramNode"/>
            where connections start and end.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnectionPoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.DiagramConnectionPoint"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnectionPoint.#ctor(System.String,System.Windows.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.DiagramConnectionPoint"/> class.
            </summary>
            <param name="name">The name for the point. All names for a node should be unique.</param>
            <param name="position">The position specified in the relative coordinates
            from top-left of the node (0,0) to bottom-right (1,1).</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnectionPoint.Position">
            <summary>
            Gets or sets the point.
            </summary>
            <value>
            The point.
            </value>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnectionPoint.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <remarks>
            All names for the connection points in the <see cref="P:Infragistics.Controls.Charts.DiagramNode.ConnectionPoints"/> for a node should be unique.
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnectionPoint.ConnectionPointDefinition">
            <summary>
            Gets the connection point definition used to create this connection point.
            The value of this property will be Null if the connection point is not
            a product of a <see cref="P:Infragistics.Controls.Charts.DiagramConnectionPoint.ConnectionPointDefinition"/>.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.DiagramConnectionPoint.PropertyChanged">
            <summary>
            An event raised when a property of this class has changed.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramConnectionPointCollection">
            <summary>
            A collection of <see cref="T:Infragistics.Controls.Charts.DiagramConnectionPoint"/> objects.
            </summary>
            <seealso cref="P:XamDiagram.ConnectionPointsDisplayMode"/>
            <seealso cref="P:DiagramNode.ConnectionPoints"/>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnectionPointCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.DiagramConnectionPointCollection"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnectionPointCollection.#ctor(System.Collections.Generic.IEnumerable{Infragistics.Controls.Charts.DiagramConnectionPoint})">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.DiagramConnectionPointCollection"/>
            class that contains elements copied from the specified collection.
            </summary>
            <param name="collection">The collection from which the elements are copied.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnectionPointCollection.InsertItem(System.Int32,Infragistics.Controls.Charts.DiagramConnectionPoint)">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The object to insert.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnectionPointCollection.SetItem(System.Int32,Infragistics.Controls.Charts.DiagramConnectionPoint)">
            <summary>
            Replaces the item into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be replaced.</param>
            <param name="item">The new item added to the collection</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnectionPointCollection.RemoveItem(System.Int32)">
            <summary>
            Removes an item at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be removed.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.IntersectionHelper.AddIntersectionToConnection(Infragistics.Controls.Charts.IntersectionData)">
            <summary>
            Adds an intersection to the connection, by splitting the segment (or the figure) in two, adding a square/gap/arc at the intersection point.
            </summary>
            <param name="intersectionData">Struct containing the necessary information in order to add the intersection.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.IntersectionHelper.CheckForIntersection(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point@)">
            <summary>
            Determines if the two line defined by the four points intersect with each other and returns the intersection point.
            </summary>
            <param name="point1">The first point of the first line</param>
            <param name="point2">The second point of the first line</param>
            <param name="point3">The first point of the second line</param>
            <param name="point4">The second point of the second line</param>
            <param name="intersectionPoint">The point where the two lines intersect (if it exists)</param>
            <returns>True if the lines intersect. Otherwise false.</returns>
            <remarks>I use the algorithm described here - http://stackoverflow.com/a/1968345 </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.IntersectionHelper.GetLineLength(System.Windows.Point,System.Windows.Point)">
            <summary>
            Gets the length of the line defined by the two points.
            </summary>
            <param name="firstPoint">The first point of the line</param>
            <param name="secondPoint">The second point of the line</param>
            <returns>The length of the line</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.IntersectionHelper.LineCanFitIntersection(System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <summary>
            Checks if the line defined by the two points can fit the intersection at the specified location.
            </summary>
            <param name="firstPoint">The first point of the line</param>
            <param name="secondPoint">The second point of the line</param>
            <param name="intersectionPoint">The place where the intersection is</param>
            <returns>True if the intersection point isn't at one of the ends of the line. Otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.IntersectionHelper.GeneratePolyLine">
            <summary>
            Factory method for generating polylines.
            </summary>
            <returns>Returns a polyline with its default properties set</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.IntersectionHelper.GenerateArc(System.Windows.Point)">
            <summary>
            Factory method for generating arcs.
            </summary>
            <param name="point">The arc point.</param>
            <returns>Returns an arc with its default properties set</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.IntersectionHelper.GetSineAndCosineForLine(System.Windows.Point,System.Windows.Point,System.Double@,System.Double@)">
            <summary>
            Calculates the sine and cosine of the angle between the line defined by the two points and the horizontal axis (y = 0).
            </summary>
            <param name="firstPoint">The first point of the line</param>
            <param name="secondPoint">The second point of the line</param>
            <param name="sine">[out] The sine of the angle</param>
            <param name="cosine">[out] The cosine of the angle</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.IntersectionHelper.GetPointOutsideCaps(Infragistics.Controls.Charts.DiagramConnection,System.Windows.Point@,System.Windows.Point@)">
            <summary>
            Makes sure that both of the points in the line are outside the connection start and end cap.
            </summary>
            <param name="connection">The connection.</param>
            <param name="firstPoint">The first point of the line</param>
            <param name="secondPoint">The second point of the line</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.ReadOnlyDiagramConnectionCollection">
            <summary>
            Read-only collection class for diagram connections.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ReadOnlyDiagramConnectionCollection.#ctor(System.Collections.ObjectModel.ObservableCollection{Infragistics.Controls.Charts.DiagramConnection})">
            <summary>
            Initializes a new instance of <see cref="T:Infragistics.Controls.Charts.ReadOnlyDiagramConnectionCollection"/> class.
            </summary>
            <param name="list">The <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> with which to create this instance of the <see cref="T:Infragistics.Controls.Charts.ReadOnlyDiagramConnectionCollection"/> class.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.Primitives.AdvancedFocusTextBox">
            <summary>
            A text box control with a custom behavior for its selection and caret position when focused.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.AdvancedFocusTextBox.FocusBehavior">
            <summary>
            Gets or sets the FocusBehavior property that determines what the behavior of the text box is when it is focused.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Primitives.AdvancedFocusTextBox.FocusBehaviorProperty">
            <summary>
            Identifies the FocusBehavior dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.AdvancedFocusTextBox.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
            <summary>
            Invoked whenever an unhandled System.Windows.Input.Keyboard.GotKeyboardFocus
            attached routed event reaches an element derived from this class in its route.
            Implement this method to add class handling for this event.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.Primitives.TextBoxFocusBehavior">
            <summary>
            Specifies the focus behavior for an <see cref="T:Infragistics.Controls.Charts.Primitives.AdvancedFocusTextBox"/> control
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Primitives.TextBoxFocusBehavior.SelectAllText">
            <summary>
            Select all text on focus.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Primitives.TextBoxFocusBehavior.CaretAtStart">
            <summary>
            Move the caret to the start.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Primitives.TextBoxFocusBehavior.CaretAtEnd">
            <summary>
            Move the caret to the end
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.Primitives.AdvancedEditableComboBox">
            <summary>
            Editable combo box which reverts its text to the last valid value in case of a binding error or binding validation error.
            It also updates its data source on lost focus and on pressing enter or return.
            </summary>
            <remarks>
            To work properly, this ComboBox assumes that the data source is bound to the Text property.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.AdvancedEditableComboBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.Primitives.AdvancedEditableComboBox"/> class.    
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.AdvancedEditableComboBox.EditableTextBox">
            <summary>
            Gets a reference to the internal editable textbox.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.AdvancedEditableComboBox.OnApplyTemplate">
            <summary>
            Called when <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> is called.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.AdvancedEditableComboBox.OnKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            Updates the Text property binding when the user presses the Enter key.  
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.AdvancedEditableComboBox.UpdateDataSource">
            <summary>
            Updates the data source.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.Primitives.DiagramCapSizeHelper">
            <summary>
            A class containing helper methods related to diagram connection cap types and sizes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramCapSizeHelper.GetSizeForCapType(Infragistics.Controls.Charts.DiagramConnectionCapType)">
            <summary>
            Gets the default cap size for the specified cap type.
            </summary>
            <returns><c>new Size(8, 8)</c> if <see cref="M:Infragistics.Controls.Charts.Primitives.DiagramCapSizeHelper.IsSingleCapType(Infragistics.Controls.Charts.DiagramConnectionCapType)"/> returns <c>true</c>
            for the <paramref name="capType"/>; otherwise <c>new Size(16, 8)</c></returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramCapSizeHelper.IsSingleCapType(Infragistics.Controls.Charts.DiagramConnectionCapType)">
            <summary>
            Determines whether the specified cap type is a single cap type.
            </summary>
            <param name="capType">Type of the cap.</param>
            <returns></returns>
            <remarks>
            Single cap type refers to a CapType that looks best with a square size e.g. (8, 8),
            as opposed to a double CapType that is best visualized with a size that has 
            a width twice as large as its height e.g. (16, 8).
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext">
            <summary>
            A class used as a DataContext for the <see cref="T:Infragistics.Controls.Charts.Primitives.DiagramOptionsPane"/>
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Mode">
            <summary>
            Gets or sets the mode, usually depending on the type of <see cref="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Items"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Items">
            <summary>
            Gets or sets the diagram items that this instance applies to.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Fill">
            <summary>
            Gets or sets the fill of the <see cref="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Items"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Stroke">
            <summary>
            Gets or sets the stroke of the <see cref="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Items"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.StrokeThickness">
            <summary>
            Gets or sets the stroke thickness of the <see cref="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Items"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.StrokeDashArray">
            <summary>
            Gets or sets the stroke dash array of the <see cref="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Items"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Text">
            <summary>
            Gets or sets the text of the <see cref="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Items"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Width">
            <summary>
            Gets or sets the width of the <see cref="T:Infragistics.Controls.Charts.DiagramNode"/> instances in the <see cref="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Items"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Height">
            <summary>
            Gets or sets the height of the <see cref="T:Infragistics.Controls.Charts.DiagramNode"/> instances in the <see cref="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Items"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.X">
            <summary>
            Gets or sets the x-axis position of the <see cref="T:Infragistics.Controls.Charts.DiagramNode"/> instances in the <see cref="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Items"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Y">
            <summary>
            Gets or sets the y-axis position of the <see cref="T:Infragistics.Controls.Charts.DiagramNode"/> instances in the <see cref="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Items"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.StartX">
            <summary>
            Gets or sets the x-axis position of the start point of the <see cref="T:Infragistics.Controls.Charts.DiagramConnection"/> instances in the <see cref="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Items"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.StartY">
            <summary>
            Gets or sets the y-axis position of the start point of the <see cref="T:Infragistics.Controls.Charts.DiagramConnection"/> instances in the <see cref="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Items"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.EndX">
            <summary>
            Gets or sets the x-axis position of the end point of the <see cref="T:Infragistics.Controls.Charts.DiagramConnection"/> instances in the <see cref="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Items"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.EndY">
            <summary>
            Gets or sets the y-axis position of the end point of the <see cref="T:Infragistics.Controls.Charts.DiagramConnection"/> instances in the <see cref="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Items"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Opacity">
            <summary>
            Gets or sets the opacity of the <see cref="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Items"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.FontFamily">
            <summary>
            Gets or sets the font family of the <see cref="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Items"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.IsBold">
            <summary>
            Gets or sets a value indicating whether the font weight is bold.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.IsItalic">
            <summary>
            Gets or sets a value indicating whether the font style is italic.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.FontSize">
            <summary>
            Gets or sets the font size of the <see cref="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Items"/>.
            </summary>
            <remarks>
            The valid font sizes are in the range [1, 3700]
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.StartCapType">
            <summary>
            Gets or sets the start cap type of the <see cref="T:Infragistics.Controls.Charts.DiagramConnection"/> instances in the <see cref="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Items"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.StartCapSize">
            <summary>
            Gets or sets the start cap size of the <see cref="T:Infragistics.Controls.Charts.DiagramConnection"/> instances in the <see cref="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Items"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.EndCapType">
            <summary>
            Gets or sets the end cap type of the <see cref="T:Infragistics.Controls.Charts.DiagramConnection"/> instances in the <see cref="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Items"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.EndCapSize">
            <summary>
            Gets or sets the end cap size of the <see cref="T:Infragistics.Controls.Charts.DiagramConnection"/> instances in the <see cref="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Items"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.ConnectionType">
            <summary>
            Gets or sets the connection type of the <see cref="T:Infragistics.Controls.Charts.DiagramConnection"/> instances in the <see cref="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Items"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.FontWeight">
            <summary>
            Gets or sets the font weight of the <see cref="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Items"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.FontStyle">
            <summary>
            Gets or sets the font style of the <see cref="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Items"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.FontBrush">
            <summary>
            Gets or sets the font brush of the <see cref="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Items"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.MaintainAspectRatio">
            <summary>
            Gets or sets a value indicating whether to maintain the aspect ratio of the <see cref="T:Infragistics.Controls.Charts.DiagramNode"/> instances in the <see cref="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Items"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.IsColorPickerDropDownOpened">
            <summary>
            Gets or sets a value indicating whether an infragistics color picker's drop down is opened.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.AllowResizeResolved">
            <summary>
            Gets whether or not at least one of the selected diagram items has its AllowResizeResolved property equal to true.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.AllowEditResolved">
            <summary>
            Gets whether or not at least one of the selected diagram items has its AllowEditResolved property equal to true.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.IsContentReadOnly">
            <summary>
            Gets or sets if the text field of the item is readonly.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Error">
            <summary>
            Gets an error message indicating what is wrong with this object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneDataContext.Item(System.String)">
            <summary>
            Gets the error message for the property with the given name.
            </summary>
            <param name="columnName">Name of the column.</param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.Primitives.DiagramNodeOptionsVisibilityConverter">
            <summary>
            Represents the converter that converts <see cref="T:Infragistics.Controls.Charts.DiagramOptionsPaneMode"/> values to Visibility enumeration values.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramNodeOptionsVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a DiagramOptionsPaneMode value to a Visibility enumeration value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">This parameter is not used.</param>
            <param name="parameter">This parameter is not used.</param>
            <param name="culture">This parameter is not used.</param>
            <returns>
            <see cref="F:System.Windows.Visibility.Visible"/> if the <paramref name="value"/> is <see cref="F:Infragistics.Controls.Charts.DiagramOptionsPaneMode.Nodes"/>; otherwise, <see cref="F:System.Windows.Visibility.Collapsed"/>.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramNodeOptionsVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            This method is not implemented.
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Infragistics.Controls.Charts.Primitives.DiagramConnectionOptionsVisibilityConverter">
            <summary>
            Represents the converter that converts <see cref="T:Infragistics.Controls.Charts.DiagramOptionsPaneMode"/> values to Visibility enumeration values.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramConnectionOptionsVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a DiagramOptionsPaneMode value to a Visibility enumeration value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">This parameter is not used.</param>
            <param name="parameter">This parameter is not used.</param>
            <param name="culture">This parameter is not used.</param>
            <returns>
            <see cref="F:System.Windows.Visibility.Visible"/> if the <paramref name="value"/> is <see cref="F:Infragistics.Controls.Charts.DiagramOptionsPaneMode.Connections"/>; otherwise, <see cref="F:System.Windows.Visibility.Collapsed"/>.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramConnectionOptionsVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            This method is not implemented.
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Infragistics.Controls.Charts.Primitives.SolidColorBrushToColorConverter">
            <summary>
            Represents the converter that converts <see cref="T:System.Windows.Media.SolidColorBrush"/> values to <see cref="T:System.Windows.Media.Color"/> values.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.SolidColorBrushToColorConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a SolidColorBrush to a Color.
            </summary>
            <param name="value">The SolidColorBrush to convert.</param>
            <param name="targetType">This parameter is not used.</param>
            <param name="parameter">This parameter is not used.</param>
            <param name="culture">This parameter is not used.</param>
            <returns>
            The <see cref="P:System.Windows.Media.SolidColorBrush.Color"/> if the <paramref name="value"/> is not <c>null</c>; otherwise, <c>null</c>.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.SolidColorBrushToColorConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a Color to a SolidColorBrush.
            </summary>
            <param name="value">The Color to convert.</param>
            <param name="targetType">This parameter is not used.</param>
            <param name="parameter">This parameter is not used.</param>
            <param name="culture">This parameter is not used.</param>
            <returns>
            A new instance of <see cref="T:System.Windows.Media.SolidColorBrush"/> with the specified color
            if the <paramref name="value"/> is not <c>null</c>; otherwise, <c>null</c>.
            </returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.Primitives.DoubleCollectionToStringConverter">
            <summary>
            Represents the converter that converts <see cref="T:System.Windows.Media.DoubleCollection"/> values to string values.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DoubleCollectionToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a DoubleCollection value to a string value.
            </summary>
            <param name="value">The DoubleCollection value to convert.</param>
            <param name="targetType">This parameter is not used.</param>
            <param name="parameter">This parameter is not used.</param>
            <param name="culture">This parameter is not used.</param>
            <returns>
            The result of the <paramref name="value"/>'s <see cref="M:DoubleCollection.ToString"/>
            method or an empty string if the <paramref name="value"/> is <c>null</c>.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DoubleCollectionToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a string value to a DoubleCollection value.
            </summary>
            <param name="value">The string value to convert.</param> 
            <param name="targetType">This parameter is not used.</param>
            <param name="parameter">This parameter is not used.</param>
            <param name="culture">This parameter is not used.</param>
            <returns>
            The result of the <paramref name="value"/>'s <see cref="M:DoubleCollection.Parse"/>
            method or <c>null</c> if the <paramref name="value"/> is an empty string.
            </returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.Primitives.DiagramConnectionCapTypeToSizeConverter">
            <summary>
            Represents the converter that converts <see cref="T:Infragistics.Controls.Charts.DiagramConnectionCapType"/> values to <see cref="T:System.Windows.Size"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramConnectionCapTypeToSizeConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a CapType value to a Size value.
            </summary>
            <param name="value">The CapType value to convert.</param>
            <param name="targetType">This parameter is not used.</param>
            <param name="parameter">This parameter is not used.</param>
            <param name="culture">This parameter is not used.</param>
            <returns>
            The result of the <see cref="M:DiagramCapSizeHelper.GetSizeForCapType"/> method for the 
            <paramref name="value"/> method or <c>null</c> if the <paramref name="value"/> is not a valid CapType.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramConnectionCapTypeToSizeConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            This method is not implemented.
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Infragistics.Controls.Charts.Primitives.DiagramConnectionTypeConverter">
            <summary>
            Represents the converter that converts a <see cref="T:Infragistics.Controls.Charts.DiagramConnectionType"/> value to a nullable Boolean value.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramConnectionTypeConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a <see cref="T:Infragistics.Controls.Charts.DiagramConnectionType"/> value to a nullable Boolean value.
            </summary>
            <param name="value">The ConnectionType to convert.</param>
            <param name="targetType">This parameter is not used.</param>
            <param name="parameter">A <see cref="T:Infragistics.Controls.Charts.DiagramConnectionType"/> value that will be used for the conversion.</param>
            <param name="culture">This parameter is not used.</param>
            <returns>
            <c>null</c> if the <paramref name="value"/> is not a valid ConnectionType or <c>null</c>.
            <c>true</c> if the <paramref name="value"/> is the same as the <paramref name="parameter"/>; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramConnectionTypeConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a Boolean value to a <see cref="T:Infragistics.Controls.Charts.DiagramConnectionType"/> value.
            </summary>
            <param name="value">The Boolean to convert.</param>
            <param name="targetType">This parameter is not used.</param>
            <param name="parameter">A <see cref="T:Infragistics.Controls.Charts.DiagramConnectionType"/> value that will be used for the conversion.</param>
            <param name="culture">This parameter is not used.</param>
            <returns>
            The <paramref name="parameter"/> if the <paramref name="value"/> is <c>true</c>.
            <c>null</c> if the <paramref name="value"/> is not a valid boolean or <c>null</c>; otherwise <c>null</c>.
            </returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.Primitives.FallbackFontFamilyConverter">
            <summary>
            Represents a converter that converts a value to <see cref="T:System.Windows.Media.FontFamily"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.FallbackFontFamilyConverter.FallbackFontFamily">
            <summary>
            Gets or sets a fallback value when the converted value is not a <see cref="T:System.Windows.Media.FontFamily"/>. The default value is Segoe UI.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.FallbackFontFamilyConverter.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Infragistics.Controls.Charts.Primitives.FallbackFontFamilyConverter"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.FallbackFontFamilyConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value to <see cref="T:System.Windows.Media.FontFamily"/>.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="targetType">This parameter is not used.</param>
            <param name="parameter">This parameter is not used.</param>
            <param name="culture">This parameter is not used.</param>
            <returns>
            Returns the <paramref name="value"/> if it is <see cref="T:System.Windows.Media.FontFamily"/>; otherwise Segoe UI font family.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.FallbackFontFamilyConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            This method is not implemented.
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Infragistics.Controls.Charts.Primitives.DiagramOptionsPane">
            <summary>
            Options pane used for editing the items' properties in the diagram.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramOptionsPane.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.Primitives.DiagramOptionsPane"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Primitives.DiagramOptionsPane.DiagramProperty">
            <summary>
            Identifies the Diagram dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPane.Diagram">
            <summary>
            Gets or sets the diagram which the options pane is assigned to.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramOptionsPane.OnDiagramChanged(Infragistics.Controls.Charts.XamDiagram,Infragistics.Controls.Charts.XamDiagram)">
            <summary>
            Diagram property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.Primitives.DiagramOptionsPane.StrokeDashArraysProperty">
            <summary>
            Identifies the StrokeDashArrays dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPane.StrokeDashArrays">
            <summary>
            Gets or sets a collection with predefined stroke dash arrays. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Primitives.DiagramOptionsPane.FontSizesProperty">
            <summary>
            Identifies the FontSizes dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPane.FontSizes">
            <summary>
            Gets or sets a collection with predefined font sizes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramOptionsPane.ExportVisualData">
            <summary>
            Exports the visual data for this instance.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramOptionsPane.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="T:Infragistics.Controls.Charts.Primitives.DiagramOptionsPane"/> to UI Automation.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.Primitives.DiagramToolboxCategoryItem">
            <summary>
            Represents an item for <see cref="T:Infragistics.Controls.Charts.Primitives.DiagramToolboxCategoryItemsControl"/>
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramToolboxCategoryItem.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramToolboxCategoryItem.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="T:Infragistics.Controls.Charts.Primitives.DiagramToolboxCategoryItem"/> to UI Automation.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.Primitives.DiagramToolboxCategoryItemsControl">
            <summary>
            Represents a category of toolbox items visualized by <see cref="T:Infragistics.Controls.Charts.XamDiagramToolbox"/> control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramToolboxCategoryItemsControl.GetContainerForItemOverride">
            <summary>
            Creates or identifies the element that is used to display the given item.
            </summary>
            <returns>
            The element that is used to display the given item.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramToolboxCategoryItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the specified element to display the specified item.
            </summary>
            <param name="element">Element used to display the specified item.</param>
            <param name="item">Specified item.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneColorPicker">
            <summary>
            Custom color picker for the diagram options pane.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneColorPicker.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneColorPicker"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneColorPicker.IsInEditMode">
            <summary>
            Gets or sets whether the selected color is being edited.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramOptionsPaneColorPicker.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:Infragistics.Controls.Editors.XamColorPicker" /> when a new template is applied.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.Primitives.DiagramItemContentPanel">
            <summary>
            A panel used for hosting the diagram item's content.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramItemContentPanel.LeftContentOffset">
            <summary>
            Gets or sets a relative value between 0 and 1 that determines the left offset of the node content.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Primitives.DiagramItemContentPanel.LeftContentOffsetProperty">
            <summary>
            Identifies the LeftContentOffset property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramItemContentPanel.RightContentOffset">
            <summary>
            Gets or sets a relative value between 0 and 1 that determines the right offset of the node content.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Primitives.DiagramItemContentPanel.RightContentOffsetProperty">
            <summary>
            Identifies the RightContentOffset property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramItemContentPanel.ContentLayoutBehavior">
            <summary>
            Gets or sets the content layout behavior.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Primitives.DiagramItemContentPanel.ContentLayoutBehaviorProperty">
            <summary>
            Identifies the RightContentOffset property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramItemContentPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            When overridden in a derived class, positions child elements and determines a size for a <see cref="T:System.Windows.FrameworkElement" /> derived class.
            </summary>
            <param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param>
            <returns>
            The actual size used.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramItemContentPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            When overridden in a derived class, measures the size in layout required for child elements and determines a size for the <see cref="T:System.Windows.FrameworkElement" />-derived class.
            </summary>
            <param name="availableSize">The available size that this element can give to child elements. Infinity can be specified as a value to indicate that the element will size to whatever content is available.</param>
            <returns>
            The size that this element determines it needs during layout, based on its calculations of child element sizes.
            </returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.Primitives.DrawingPanel">
            <summary>
            Provides a panel for <see cref="T:Infragistics.Controls.Charts.XamDiagram"/> items.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.Primitives.DiagramConnectionHandle">
            <summary>
            Represents a handle used for moving a DiagramConnection's end.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramConnectionHandle.InitiateDrag(System.Windows.Point)">
            <summary>
            Initiates a drag.
            </summary>
            <param name="startPoint">The start point.</param>
            <returns>True if the drag was started successfully.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.Primitives.DiagramResizeHandleBase">
            <summary>
            A base class for a resize handle elements.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Primitives.DiagramResizeHandleBase.UniformHeightProperty">
            <summary>
            Identifies the UniformHeight dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramResizeHandleBase.UniformHeight">
            <summary>
            Gets or sets the default width and height used for handles.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramResizeHandleBase.OnUniformHeightChanged(System.Double,System.Double)">
            <summary>
            UniformHeight property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramResizeHandleBase.MouseDownPoint">
            <summary>
            Gets or sets the point where the first mouse down event has been raised.
            </summary>
            <value>
            The mouse down point.
            </value>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramResizeHandleBase.UpdateSize">
            <summary>
            Sets the Width and Height properties with regard to the UniformHeight.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramResizeHandleBase.InitiateDrag(System.Windows.Point)">
            <summary>
            Initiates a drag.
            </summary>
            <param name="startPoint">The start point.</param>
            <returns>True if the drag was started successfully.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramResizeHandleBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when the left mouse button is pressed down on the element.
            </summary>
            <param name="e">Provides information about the mouse event.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramResizeHandleBase.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the mouse has moved
            </summary>
            <param name="e">The mouse event args</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramResizeHandleBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when mouse capture has been lost
            </summary>
            <param name="e">The mouse event args</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramResizeHandleBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event is raised on this element. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramResizeHandleBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when the left mouse button is released.
            </summary>
            <param name="e">Provides information about the mouse event.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.Primitives.DiagramResizeHandle">
            <summary>
            Represents a handle used for resizing a DiagramNode from one of its edges.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramResizeHandle.InitiateDrag(System.Windows.Point)">
            <summary>
            Initiates a drag.
            </summary>
            <param name="startPoint">The start point.</param>
            <returns>True if the drag was started successfully.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramResizeHandle.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when the left mouse button is pressed down on the element.
            </summary>
            <param name="e">Provides information about the mouse event.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.Primitives.DiagramResizeHandleLine">
            <summary>
            Represents a handle used for resizing a DiagramNode from one of its sides.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramResizeHandleLine.InitiateDrag(System.Windows.Point)">
            <summary>
            Initiates a drag.
            </summary>
            <param name="startPoint">The start point.</param>
            <returns>True if the drag was started successfully.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramResizeHandleLine.UpdateSize">
            <summary>
            Sets the Width and Height properties with regard to the UniformHeight.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.Primitives.DiagramItemContentPresenter">
            <summary>
            Provides a content presenter for <see cref="P:Infragistics.Controls.Charts.DiagramItem.Content"/> 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramItemContentPresenter.GetDataTypeTemplate">
            <summary>
            Gets the implicit data type template.
            </summary>
            <returns>The implicit data template that will be used.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.Primitives.DiagramConnectionPointPresenter">
            <summary>
            Represents a <see cref="P:Infragistics.Controls.Charts.Primitives.DiagramConnectionPointPresenter.ConnectionPoint"/> within <see cref="T:Infragistics.Controls.Charts.XamDiagram"/> control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramConnectionPointPresenter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.Primitives.DiagramConnectionPointPresenter"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramConnectionPointPresenter.HighlightBrush">
            <summary>
            Gets or sets the highlight brush.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Primitives.DiagramConnectionPointPresenter.HighlightBrushProperty">
            <summary>
            Identifies the HighlightBrush dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramConnectionPointPresenter.IsHighlighted">
            <summary>
            Gets or sets a value indicating whether the connection point is highlighted.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Primitives.DiagramConnectionPointPresenter.IsHighlightedProperty">
            <summary>
            Identifies the IsHighlighted dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramConnectionPointPresenter.Node">
            <summary>
            Gets or sets the node.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Primitives.DiagramConnectionPointPresenter.ConnectionPoint">
            <summary>
            Gets or sets the connection point.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Primitives.DiagramConnectionPointPresenter.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> routed event is raised on this element. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data. The event data reports that the left mouse button was pressed.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.ConnectionPointDefinition">
            <summary>
            Represents a class for connection point definition.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ConnectionPointDefinition.TargetTypeProperty">
            <summary>
            Identifies the TargetType dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ConnectionPointDefinition.TargetType">
            <summary>
            Gets or sets the target type of the graph connection layout.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ConnectionPointDefinition.NameMemberPathProperty">
            <summary>
            Identifies the NameMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ConnectionPointDefinition.NameMemberPath">
            <summary>
            Gets or sets a path to a value on the connection point object that contains the name.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ConnectionPointDefinition.PositionMemberPathProperty">
            <summary>
            Identifies the PositionMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ConnectionPointDefinition.PositionMemberPath">
            <summary>
            Gets or sets a path to a value on the connection point object that contains the position.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ConnectionSourceDefinition">
            <summary>
            Represents a class for connection definition that applies on the connections generated from the <see cref="P:XamDiagram.ConnectionsSource"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ConnectionSourceDefinition.TargetTypeProperty">
            <summary>
            Identifies the TargetType dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ConnectionSourceDefinition.TargetType">
            <summary>
            Gets or sets the target type of the connection definition.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ConnectionSourceDefinition.StartNodeMemberPathProperty">
            <summary>
            Identifies the StartNodeMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ConnectionSourceDefinition.StartNodeMemberPath">
            <summary>
            Gets or sets a path to a value on the connection object that contains the start node.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ConnectionSourceDefinition.EndNodeMemberPathProperty">
            <summary>
            Identifies the EndNodeMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ConnectionSourceDefinition.EndNodeMemberPath">
            <summary>
            Gets or sets a path to a value on the connection object that contains the end node.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ConnectionSourceDefinition.StartNodeKeyMemberPathProperty">
            <summary>
            Identifies the StartNodeKeyMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ConnectionSourceDefinition.StartNodeKeyMemberPath">
            <summary>
            Gets or sets a path to a value on the connection object to serve as <see cref="P:DiagramConnection.StartNodeKey"/> for the generated <see cref="T:Infragistics.Controls.Charts.DiagramConnection"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ConnectionSourceDefinition.OnStartNodeKeyMemberPathChanged(System.String,System.String)">
            <summary>
            StartNodeKeyMemberPath property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.ConnectionSourceDefinition.EndNodeKeyMemberPathProperty">
            <summary>
            Identifies the EndNodeKeyMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ConnectionSourceDefinition.EndNodeKeyMemberPath">
            <summary>
            Gets or sets a path to a value on the connection object to serve as <see cref="P:DiagramConnection.EndNodeKey"/> for the generated <see cref="T:Infragistics.Controls.Charts.DiagramConnection"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ConnectionSourceDefinition.OnEndNodeKeyMemberPathChanged(System.String,System.String)">
            <summary>
            EndNodeKeyMemberPath property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.ConnectionSourceDefinition.StartNodeConnectionPointNameMemberPathProperty">
            <summary>
            Identifies the StartNodeConnectionPointMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ConnectionSourceDefinition.StartNodeConnectionPointNameMemberPath">
            <summary>
            Gets or sets a path to a value on the connection object that contains the start node's connection point name.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ConnectionSourceDefinition.EndNodeConnectionPointNameMemberPathProperty">
            <summary>
            Identifies the EndNodeConnectionPointMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ConnectionSourceDefinition.EndNodeConnectionPointNameMemberPath">
            <summary>
            Gets or sets a path to a value on the connection object that contains the end node's connection point name.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ConnectionSourceDefinition.DisplayMemberPathProperty">
            <summary>
            Identifies the DisplayMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ConnectionSourceDefinition.DisplayMemberPath">
            <summary>
            Gets or sets a path to a value on the connection object to serve as the visual representation of the object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ConnectionSourceDefinition.OnDisplayMemberPathChanged(System.String,System.String)">
            <summary>
            DisplayMemberPath property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.ConnectionDefinitionCollection">
            <summary>
            Collection class for connection definitions.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ConnectionDefinitionCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the CollectionChanged event with the provided arguments.
            </summary>
            <param name="e">Arguments of the event being raised.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.ConnectionPointDefinitionCollection">
            <summary>
            Represents a collection of <see cref="T:Infragistics.Controls.Charts.ConnectionPointDefinition"/> objects.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ConnectionPointDefinitionCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:CollectionChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.NodeDefinitionCollection">
            <summary>
            Collection class for node definitions.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NodeDefinitionCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the CollectionChanged event with the provided arguments.
            </summary>
            <param name="e">Arguments of the event being raised.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.ConnectionDefinition">
            <summary>
            Represents a class for connection definition that applies over the connections generated from <see cref="P:NodeDefinition.ChildrenMemberPath"/> and <see cref="P:NodeDefinition.ChildKeysMemberPath"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ConnectionDefinition.StartTargetTypeProperty">
            <summary>
            Identifies the StartTargetType dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ConnectionDefinition.StartTargetType">
            <summary>
            Gets or set the type of the start node.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ConnectionDefinition.EndTargetTypeProperty">
            <summary>
            Identifies the EndTargetType dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ConnectionDefinition.EndTargetType">
            <summary>
            Gets or set the type of the end node.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ConnectionDefinitionBase">
            <summary>
            Represents a base class for diagram connection definition.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ConnectionDefinitionBase.ConnectionStyleProperty">
            <summary>
            Identifies the ConnectionStyle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ConnectionDefinitionBase.ConnectionStyle">
            <summary>
            Gets or sets a style for the connections.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.NodeDefinition">
            <summary>
            Represents a class for node definition.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.NodeDefinition.TargetTypeProperty">
            <summary>
            Identifies the TargetType dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.NodeDefinition.TargetType">
            <summary>
            Gets or sets the target type of the node definition.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.NodeDefinition.NodeStyleProperty">
            <summary>
            Identifies the NodeStyle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.NodeDefinition.NodeStyle">
            <summary>
            Gets or sets a style for the nodes.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.NodeDefinition.ConnectionPointsMemberPathProperty">
            <summary>
            Identifies the ConnectionPointsMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.NodeDefinition.ConnectionPointsMemberPath">
            <summary>
            Gets or sets a path to a value on the node object that contains its connection points.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.NodeDefinition.ChildrenMemberPathProperty">
            <summary>
            Identifies the ChildrenMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.NodeDefinition.ChildrenMemberPath">
            <summary>
            Gets or sets a path to a value on the node object that contains the children collection.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.NodeDefinition.ChildKeysMemberPathProperty">
            <summary>
            Identifies the ChildKeysMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.NodeDefinition.ChildKeysMemberPath">
            <summary>
            Gets or sets a path to a value on the node object that contains a collection with child nodes' <see cref="P:Infragistics.Controls.Charts.DiagramNode.Key"/>s.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NodeDefinition.OnChildKeysMemberPathChanged(System.String,System.String)">
            <summary>
            ChildKeysMemberPath property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.NodeDefinition.DisplayMemberPathProperty">
            <summary>
            Identifies the DisplayMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.NodeDefinition.DisplayMemberPath">
            <summary>
            Gets or sets a path to a value on the node object to serve as the visual representation of the object.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NodeDefinition.OnDisplayMemberPathChanged(System.String,System.String)">
            <summary>
            DisplayMemberPath property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.NodeDefinition.KeyMemberPathProperty">
            <summary>
            Identifies the KeyMemberPath dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.NodeDefinition.KeyMemberPath">
            <summary>
            Gets or sets a path to a value on the node object to serve as <see cref="P:DiagramNode.Key"/> for the generated <see cref="T:Infragistics.Controls.Charts.DiagramNode"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.NodeDefinition.OnKeyMemberPathChanged(System.String,System.String)">
            <summary>
            KeyMemberPath property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.GridDiagramLayout">
            <summary>
            A simple layout arranging diagram nodes in a grid.
            No collision detection and no special arrangement tactics are applied.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.GridDiagramLayout.ColumnCountProperty">
            <summary>
            Identifies the ColumnCount dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.GridDiagramLayout.ColumnCount">
            <summary>
            Gets or sets the number of columns.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.GridDiagramLayout.ColumnWidthProperty">
            <summary>
            Identifies the ColumnWidth dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.GridDiagramLayout.ColumnWidth">
            <summary>
            Gets or sets the width of the columns.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.GridDiagramLayout.RowHeightProperty">
            <summary>
            Identifies the RowHeight dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.GridDiagramLayout.RowHeight">
            <summary>
            Gets or sets height of the rows.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.GridDiagramLayout.StartPointProperty">
            <summary>
            Identifies the StartPoint dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.GridDiagramLayout.StartPoint">
            <summary>
            Gets or sets the point where the first (top-left) node is placed.
            This point is in <see cref="M:XamDiagram.WorldRect"/> coordinates.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.GridDiagramLayout.ArrangeNodes(System.Collections.Generic.IEnumerable{Infragistics.Controls.Charts.DiagramNode})">
            <summary>
            Iterates all the nodes and arranges them in a grid starting from left to right.
            The number of nodes on each row is determined by the <see cref="P:Infragistics.Controls.Charts.GridDiagramLayout.ColumnCount"/> property.
            </summary>
            <param name="nodes">All the nodes in the <see cref="P:Infragistics.Controls.Charts.XamDiagram.Items" /> collection.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.TreeDiagramLayout">
            <summary>
            Arranges the nodes in a XamDiagram in a tree layout.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TreeDiagramLayout.HorizontalBufferProperty">
            <summary>
            Identifies the HorizontalBuffer dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TreeDiagramLayout.HorizontalBuffer">
            <summary>
            Gets or sets horizontal buffer between nodes of the same level depth.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TreeDiagramLayout.VerticalBufferProperty">
            <summary>
            Identifies the VerticalBuffer dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TreeDiagramLayout.VerticalBuffer">
            <summary>
            Gets or sets vertical buffer between nodes of the same level depth.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TreeDiagramLayout.ModeProperty">
            <summary>
            Identifies the Mode dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TreeDiagramLayout.Mode">
            <summary>
            Gets or sets layout arrangement mode.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TreeDiagramLayout.NodeFlowDirectionProperty">
            <summary>
            Identifies the NodeFlowDirection dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.TreeDiagramLayout.NodeFlowDirection">
            <summary>
            Gets or sets node flow direction.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.TreeDiagramLayout.ArrangeNodes(System.Collections.Generic.IEnumerable{Infragistics.Controls.Charts.DiagramNode})">
            <summary>
            Arranges the nodes in a tree layout.
            </summary>
            <param name="nodes">All the nodes in the <see cref="P:Infragistics.Controls.Charts.XamDiagram.Items" /> collection.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramToolboxCategoryAddedEventArgs">
            <summary>
            Provides data for the <see cref="E:Infragistics.Controls.Charts.XamDiagramToolbox.CategoryAdded"/> event.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramToolboxCategoryAddedEventArgs.Category">
            <summary>
            Gets the added category.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramToolboxCategoryAddedEventArgs.#ctor(Infragistics.Controls.Charts.DiagramToolboxCategory)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.DiagramToolboxCategoryAddedEventArgs"/> class.
            </summary>
            <param name="category">The added category.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramToolboxCategoryAddingEventArgs">
            <summary>
            Provides data for the <see cref="E:Infragistics.Controls.Charts.XamDiagramToolbox.CategoryAdding"/> event.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramToolboxCategoryAddingEventArgs.Category">
            <summary>
            Gets the category being added.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramToolboxCategoryAddingEventArgs.#ctor(Infragistics.Controls.Charts.DiagramToolboxCategory)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.DiagramToolboxCategoryAddingEventArgs"/> class.
            </summary>
            <param name="category">The category being added.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramToolboxCategoryCollection">
            <summary>
            Represents a dynamic collection of <see cref="T:Infragistics.Controls.Charts.DiagramToolboxCategory"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramToolboxCategoryCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.DiagramToolboxCategoryCollection"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramToolboxCategoryCollection.#ctor(System.Collections.Generic.IEnumerable{Infragistics.Controls.Charts.DiagramToolboxCategory})">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.DiagramToolboxCategoryCollection"/> class.
            </summary>
            <param name="collection">The input collection.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramToolboxCategoryCollection.OnCategoryAdding(Infragistics.Controls.Charts.DiagramToolboxCategory)">
            <summary>
            Called when a category is being added.
            </summary>
            <param name="category">The category.</param>
            <returns><c>true</c> adding of the category should be cancelled.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramToolboxCategoryCollection.InsertItem(System.Int32,Infragistics.Controls.Charts.DiagramToolboxCategory)">
            <summary>
            Inserts the category at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="category">The category to insert.</param>
        </member>
        <member name="E:Infragistics.Controls.Charts.DiagramToolboxCategoryCollection.CategoryAdding">
            <summary>
            Occurs when a category is being added to the collection.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneVisualData">
            <summary>
            Provides data for the visual aspects and current state of a <see cref="T:Infragistics.Controls.Charts.Primitives.DiagramOptionsPane"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneVisualData.Width">
            <summary>
            Gets or sets the width.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneVisualData.Height">
            <summary>
            Gets or sets the height.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneVisualData.X">
            <summary>
            Gets or sets the x-axis position of the pane.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneVisualData.Y">
            <summary>
            Gets or sets the y-axis position of the pane.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneVisualData.IsCutEnabled">
            <summary>
            Gets or sets a value indicating whether the Cut command enabled.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneVisualData.IsCopyEnabled">
            <summary>
            Gets or sets a value indicating whether the Copy command enabled.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneVisualData.IsPasteEnabled">
            <summary>
            Gets or sets a value indicating whether the Paste command enabled.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneVisualData.IsDeleteEnabled">
            <summary>
            Gets or sets a value indicating whether the Cut command enabled.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneVisualData.NodeWidth">
            <summary>
            Gets or sets the width of the nodes.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneVisualData.NodeHeight">
            <summary>
            Gets or sets the height of the nodes.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneVisualData.NodeX">
            <summary>
            Gets or sets the node x-axis position of the nodes.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneVisualData.NodeY">
            <summary>
            Gets or sets the node y-axis position of the nodes.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneVisualData.ConnectionStartX">
            <summary>
            Gets or sets the connections' start x.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneVisualData.ConnectionStartY">
            <summary>
            Gets or sets the connections' start y.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneVisualData.ConnectionEndX">
            <summary>
            Gets or sets the connections' end x.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneVisualData.ConnectionEndY">
            <summary>
            Gets or sets the connections' end y.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneVisualData.ConnectionStartCapType">
            <summary>
            Gets or sets the connections' start cap type.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneVisualData.ConnectionStartCapSize">
            <summary>
            Gets or sets the connections' start cap size.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneVisualData.ConnectionEndCapType">
            <summary>
            Gets or sets the connections' end cap type.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneVisualData.ConnectionEndCapSize">
            <summary>
            Gets or sets the connections' end cap size.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneVisualData.ItemFill">
            <summary>
            Gets or sets the items' fill.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneVisualData.ItemOpacity">
            <summary>
            Gets or sets the items' fill.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneVisualData.ItemStroke">
            <summary>
            Gets or sets the items' stroke.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneVisualData.ItemStrokeThickness">
            <summary>
            Gets or sets the items' stroke thickness.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneVisualData.ItemDashType">
            <summary>
            Gets or sets the items' stroke dash array.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneVisualData.ItemText">
            <summary>
            Gets or sets the items' text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneVisualData.ItemFontFamily">
            <summary>
            Gets or sets the items' font family.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneVisualData.ItemFontSize">
            <summary>
            Gets or sets the items' font size.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneVisualData.ItemTextColor">
            <summary>
            Gets or sets the items' font brush.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneVisualData.IsTextBold">
            <summary>
            Gets or sets the items' text is bold.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneVisualData.IsTextItalic">
            <summary>
            Gets or sets the items' text is italic.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneVisualData.IsConnectionStraight">
            <summary>
            Gets or sets the connections are straight.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneVisualData.IsVisible">
            <summary>
            Gets or sets a value indicating whether the options pane is visible.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneButtonVisualData">
            <summary>
            Provides data for the visual aspects and current state of a <see cref="T:Infragistics.Controls.Charts.Primitives.DiagramOptionsPane"/>'s button.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneButtonVisualData.IsVisible">
            <summary>
            Gets or sets a value indicating whether the options pane's button is visible.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneButtonVisualData.Width">
            <summary>
            Gets or sets the width.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneButtonVisualData.Height">
            <summary>
            Gets or sets the height.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneButtonVisualData.X">
            <summary>
            Gets or sets the x position of the diagram options pane's button.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramOptionsPaneButtonVisualData.Y">
            <summary>
            Gets or sets the y position of the diagram options pane's button.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.VisualData.DiagramToolboxVisualData">
            <summary>
            Represents visual data for a diagram toolbox.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramToolboxVisualData.Title">
            <summary>
            Gets or sets the title of the toolbox.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramToolboxVisualData.HeaderBackground">
            <summary>
            Gets or sets the toolbox header background.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramToolboxVisualData.HeaderForeground">
            <summary>
            Gets or sets the toolbox header foreground.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramToolboxVisualData.HeaderBorderBrush">
            <summary>
            Gets or sets the toolbox header border brush.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramToolboxVisualData.HeaderBorderThickness">
            <summary>
            Gets or sets the toolbox header border thickness.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramToolboxVisualData.Categories">
            <summary>
            Gets or sets the toolbox categories.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramToolboxVisualData.ToolboxItemsPanels">
            <summary>
            Gets or sets the list of panels that contain the category items.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VisualData.DiagramToolboxVisualData.ScaleByViewport">
            <summary>
            Scales the object by viewport.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VisualData.DiagramToolboxVisualData.Serialize">
            <summary>
            Serializes the current object to a string.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.VisualData.DiagramToolboxCategoriesVisualData">
            <summary>
            Represents visual data for the categories of a diagram toolbox.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.VisualData.DiagramToolboxCategoryVisualData">
            <summary>
            Represents visual data for a diagram toolbox category.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramToolboxCategoryVisualData.Title">
            <summary>
            Gets or sets the title of the toolbox category.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramToolboxCategoryVisualData.Items">
            <summary>
            Gets or sets the items of the toolbox category.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VisualData.DiagramToolboxCategoryVisualData.Serialize">
            <summary>
            Serializes the current object to a string.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.VisualData.DiagramToolboxItemsVisualData">
            <summary>
            Represents visual data for the items of a diagram toolbox.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.VisualData.DiagramToolboxItemVisualData">
            <summary>
            Represents visual data for a diagram toolbox item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramToolboxItemVisualData.Title">
            <summary>
            Gets or sets the title of the toolbox item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramToolboxItemVisualData.Foreground">
            <summary>
            Gets or sets the foreground of a toolbox item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramToolboxItemVisualData.Item">
            <summary>
            Gets or sets the toolbox item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramToolboxItemVisualData.ItemType">
            <summary>
            Gets or sets the type of the toolbox item.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VisualData.DiagramToolboxItemVisualData.Serialize">
            <summary>
            Serializes the current object to a string.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.VisualData.DiagramItemType">
            <summary>
            Denotes the type of the diagram item.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.VisualData.DiagramItemType.Node">
            <summary>
            Represents a node.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.VisualData.DiagramItemType.Connection">
            <summary>
            Represents a connection.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.VisualData.DiagramVisualData">
            <summary>
            Represents visual data for a diagram.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramVisualData.Width">
            <summary>
            Gets or sets the width of the diagram.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramVisualData.Height">
            <summary>
            Gets or sets the height of the diagram.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramVisualData.Items">
            <summary>
            Gets or sets the diagram items.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramVisualData.HandlesLayer">
            <summary>
            Gets or sets the layer which contains the resize handles.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramVisualData.ConnectionPointsLayer">
            <summary>
            Gets or sets the layer which contains the connection points.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramVisualData.MainGrid">
            <summary>
            Gets or sets the main grid of the diagram.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramVisualData.BoundsManager">
            <summary>
            Gets or sets the bounds manager of the diagram.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramVisualData.OptionsPane">
            <summary>
            Gets or sets the options pane of the diagram.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramVisualData.OptionsPaneButton">
            <summary>
            Gets or sets the diagram options pane's button.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VisualData.DiagramVisualData.ScaleByViewport">
            <summary>
            Scales the object by viewport.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VisualData.DiagramVisualData.Serialize">
            <summary>
            Serializes the current object to a string.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramVisualData.Viewport">
            <summary>
            Gets or sets the viewport.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.VisualData.DiagramConnectionVisualData">
            <summary>
            Represents visual data for a connection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VisualData.DiagramConnectionVisualData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.VisualData.DiagramConnectionVisualData"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VisualData.DiagramConnectionVisualData.#ctor(Infragistics.Controls.Charts.VisualData.DiagramItemVisualData)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.VisualData.DiagramConnectionVisualData"/> class.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramConnectionVisualData.StartNodeKey">
            <summary>
            Gets or sets the start node key.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramConnectionVisualData.EndNodeKey">
            <summary>
            Gets or sets the end node key.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramConnectionVisualData.ConnectionType">
            <summary>
            Gets or sets the type of the connection.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramConnectionVisualData.StartCapType">
            <summary>
            Gets or sets the type of the start cap.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramConnectionVisualData.EndCapType">
            <summary>
            Gets or sets the type of the end cap.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramConnectionVisualData.Path">
            <summary>
            Gets or sets the connection path.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramConnectionVisualData.StartPosition">
            <summary>
            Gets or sets the start position of the connection.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramConnectionVisualData.EndPosition">
            <summary>
            Gets or sets the end position of the connection.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramConnectionVisualData.StartCapSize">
            <summary>
            Gets or sets the size of the start cap.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramConnectionVisualData.EndCapSize">
            <summary>
            Gets or sets the size of the end cap.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramConnectionVisualData.ActualStartCapType">
            <summary>
            Gets or sets the actual type of the start cap.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramConnectionVisualData.ActualEndCapType">
            <summary>
            Gets or sets the actual type of the end cap.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramConnectionVisualData.ActualStartCapSize">
            <summary>
            Gets or sets the actual size of the start cap.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramConnectionVisualData.ActualEndCapSize">
            <summary>
            Gets or sets the actual size of the end cap.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramConnectionVisualData.DisplayedMemberPathValue">
            <summary>
            Gets or sets the displayed member path value.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramConnectionVisualData.StartCapPresenter">
            <summary>
            Gets or sets the start cap presenter.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramConnectionVisualData.EndCapPresenter">
            <summary>
            Gets or sets the end cap presenter.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VisualData.DiagramConnectionVisualData.Serialize">
            <summary>
            Serializes the current object to a string.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramConnectionVisualData.ConnectionLineJumps">
            <summary>
            Gets or sets the intersection dictionary.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.VisualData.DiagramConnectionCapPresenterVisualData">
            <summary>
            Represents visual data for a connection cap.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VisualData.DiagramConnectionCapPresenterVisualData.#ctor(Infragistics.Controls.Charts.DiagramConnectionCapPresenter)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.VisualData.DiagramConnectionCapPresenterVisualData"/> class.
            </summary>
            <param name="dccp">The diagram connection cap presenter.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramConnectionCapPresenterVisualData.LineOffset">
            <summary>
            Gets or sets the line offset.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramConnectionCapPresenterVisualData.UseRotation">
            <summary>
            Gets or sets a value indicating whether [rotation is used].
            </summary>
            <value>
              <c>true</c> if [rotation is used]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramConnectionCapPresenterVisualData.PlacementOffset">
            <summary>
            Gets or sets the cap placement offset.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramConnectionCapPresenterVisualData.X">
            <summary>
            Gets or sets the X coordinate of a cap end.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramConnectionCapPresenterVisualData.Y">
            <summary>
            Gets or sets the Y coordinate of a cap end.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramConnectionCapPresenterVisualData.Transform">
            <summary>
            Gets or sets transform information that affects the rendering position of a cap.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramConnectionCapPresenterVisualData.Angle">
            <summary>
            Gets or sets the angle the connection forms entering the node.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.VisualData.DiagramItemVisualData">
            <summary>
            Represents visual data for a diagram item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramItemVisualData.Key">
            <summary>
            Gets or sets the key of the diagram item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramItemVisualData.X">
            <summary>
            Gets or sets the left position of the bounds rectangle of the diagram item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramItemVisualData.Y">
            <summary>
            Gets or sets the top position of the bounds rectangle of the diagram item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramItemVisualData.Width">
            <summary>
            Gets or sets the width of the diagram item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramItemVisualData.Height">
            <summary>
            Gets or sets the height of the diagram item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramItemVisualData.Content">
            <summary>
            Gets or sets the content of the diagram item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramItemVisualData.IsSelected">
            <summary>
            Gets or sets a value indicating whether the diagram item [is selected].
            </summary>
            <value>
              <c>true</c> if [is selected]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramItemVisualData.IsVisible">
            <summary>
            Gets or sets a value indicating whether the diagram item [is visible].
            </summary>
            <value>
              <c>true</c> if [is visible]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramItemVisualData.Appearance">
            <summary>
            Gets or sets the Appearance of the diagram item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramItemVisualData.StrokeDashArray">
            <summary>
            Gets or sets the stroke dash array of the diagram item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramItemVisualData.FontBrush">
            <summary>
            Gets or sets the font brush of the diagram item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramItemVisualData.FontFamily">
            <summary>
            Gets or sets the font family of the diagram item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramItemVisualData.FontSize">
            <summary>
            Gets or sets the font size of the diagram item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramItemVisualData.FontStyle">
            <summary>
            Gets or sets the font style of the diagram item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramItemVisualData.FontWeight">
            <summary>
            Gets or sets the font weight of the diagram item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramItemVisualData.ActualFill">
            <summary>
            Gets or sets the actual fill of the diagram item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramItemVisualData.ActualFontBrush">
            <summary>
            Gets or sets the actual font brush of the diagram item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramItemVisualData.ActualFontFamily">
            <summary>
            Gets or sets the actual font family of the diagram item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramItemVisualData.ActualFontSize">
            <summary>
            Gets or sets the actual font size of the diagram item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramItemVisualData.ActualFontStyle">
            <summary>
            Gets or sets the actual font style of the diagram item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramItemVisualData.ActualFontWeight">
            <summary>
            Gets or sets the actual font weight of the diagram item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramItemVisualData.ActualStroke">
            <summary>
            Gets or sets the actual stroke of the diagram item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramItemVisualData.ActualStrokeThickness">
            <summary>
            Gets or sets the actual stroke thickness of the diagram item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramItemVisualData.ActualStrokeDashArray">
            <summary>
            Gets or sets the actual stroke dash array of the diagram item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramItemVisualData.ActualOpacity">
            <summary>
            Gets or sets the actual opacity of the diagram item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramItemVisualData.IsAttached">
            <summary>
            Gets or sets a value indicating whether the diagram item [is attached].
            </summary>
            <value>
              <c>true</c> if [is attached]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramItemVisualData.ZIndex">
            <summary>
            Gets or sets the z-index of the diagram item
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VisualData.DiagramItemVisualData.Serialize">
            <summary>
            Serializes the current object to a string.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.VisualData.DiagramNodeVisualData">
            <summary>
            Represents visual data for a node.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VisualData.DiagramNodeVisualData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.VisualData.DiagramNodeVisualData"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VisualData.DiagramNodeVisualData.#ctor(Infragistics.Controls.Charts.VisualData.DiagramItemVisualData)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.VisualData.DiagramNodeVisualData"/> class.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramNodeVisualData.ShapeType">
            <summary>
            Gets or sets the type of the node.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramNodeVisualData.DisplayedMemberPathValue">
            <summary>
            Gets or sets the displayed member path value.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramNodeVisualData.Geometry">
            <summary>
            Gets or sets the geometry of the node.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VisualData.DiagramNodeVisualData.Serialize">
            <summary>
            Serializes the current object to a string.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.VisualData.DiagramItemsVisualData">
            <summary>
            Represents visual data for diagram items.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.VisualData.DiagramHandleVisualData">
            <summary>
            Represents visual data for a diagram item's resize handle.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramHandleVisualData.X">
            <summary>
            Gets or sets the X coordinate of the the top-left corner of a resize handle.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramHandleVisualData.Y">
            <summary>
            Gets or sets the Y coordinate of the the top-left corner of a resize handle.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramHandleVisualData.Width">
            <summary>
            Gets or sets the width of a resize handle.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramHandleVisualData.Height">
            <summary>
            Gets or sets the height of a resize handle.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramHandleVisualData.Appearance">
            <summary>
            Gets or sets the appearance data of a resize handle.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VisualData.DiagramHandleVisualData.ScaleByViewport">
            <summary>
            Scales the current object by viewport.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VisualData.DiagramHandleVisualData.Serialize">
            <summary>
            Serializes the current object to a string.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.VisualData.DiagramCornerResizeHandleVisualData">
            <summary>
            Represents visual data for a corner resize handle.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.VisualData.DiagramSideResizeHandleVisualData">
            <summary>
            Represents visual data for a side resize handle.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.VisualData.DiagramConnectionPointsLayerVisualData">
            <summary>
            Represents visual data for the layer which contains the connection point presenters.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VisualData.DiagramConnectionPointsLayerVisualData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.VisualData.DiagramConnectionPointsLayerVisualData"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramConnectionPointsLayerVisualData.ConnectionPointPresenters">
            <summary>
            Gets or sets the connection point presenters.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VisualData.DiagramConnectionPointsLayerVisualData.Serialize">
            <summary>
            Serializes the current object to a string.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.VisualData.DiagramConnectionPointPresenterVisualData">
            <summary>
            Represents visual data for a connection point.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramConnectionPointPresenterVisualData.X">
            <summary>
            Gets or sets the X coordinate of a connection point.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramConnectionPointPresenterVisualData.Y">
            <summary>
            Gets or sets the Y coordinate of a connection point.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramConnectionPointPresenterVisualData.InnerRectangleX">
            <summary>
            Gets or sets the X coordinate of the top-left corner of the connection point's geometry.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramConnectionPointPresenterVisualData.InnerRectangleY">
            <summary>
            Gets or sets the Y coordinate of the top-left corner of the connection point's geometry.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramConnectionPointPresenterVisualData.Width">
            <summary>
            Gets or sets the width of a connection point.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramConnectionPointPresenterVisualData.Height">
            <summary>
            Gets or sets the height of a connection point.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramConnectionPointPresenterVisualData.Visibility">
            <summary>
            Gets or sets the visibility of the connection point.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramConnectionPointPresenterVisualData.InnerRectangle">
            <summary>
            Gets or sets visual data for a connection point's geometry.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramConnectionPointPresenterVisualData.OuterRectangle">
            <summary>
            Gets or sets visual data for the geometry of a connection point which is being used to draw a connection from/to.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VisualData.DiagramConnectionPointPresenterVisualData.ScaleByViewport">
            <summary>
            Scales the object by viewport.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VisualData.DiagramConnectionPointPresenterVisualData.Serialize">
            <summary>
            Serializes the current object to a string.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.VisualData.DiagramConnectionDrawingHandleVisualData">
            <summary>
            Represents visual data for a connection's resize handle.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.VisualData.DiagramHandlesLayer">
            <summary>
            Represents visual data for the layer which contains the resize handles.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VisualData.DiagramHandlesLayer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.VisualData.DiagramHandlesLayer"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramHandlesLayer.ResizeRectangle">
            <summary>
            Gets or sets the resize rectangle.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramHandlesLayer.Handles">
            <summary>
            Gets or sets the handles.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VisualData.DiagramHandlesLayer.Add(Infragistics.Controls.Charts.VisualData.DiagramHandleVisualData)">
            <summary>
            Adds the specified handle to the layer.
            </summary>
            <param name="handle">The handle.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.VisualData.DiagramHandlesLayer.Serialize">
            <summary>
            Serializes the current object to a string.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.VisualData.DiagramMainGridVisualData">
            <summary>
            Represents visual data for the main grid element in a XamDiagram.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramMainGridVisualData.X">
            <summary>
            Gets or sets the x-coordinate of the top-left position of the main grid.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramMainGridVisualData.Y">
            <summary>
            Gets or sets the y-coordinate of the top-left position of the main grid.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramMainGridVisualData.ScaleX">
            <summary>
            Gets or sets the scale of the x-axis.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramMainGridVisualData.ScaleY">
            <summary>
            Gets or sets the scale of the y-axis.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VisualData.DiagramMainGridVisualData.Serialize">
            <summary>
            Serializes this instance.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.VisualData.DiagramBoundsManagerVisualData">
            <summary>
            Represents the visual data of the bounds of the items in a diagram.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramBoundsManagerVisualData.TopValues">
            <summary>
            Gets or sets a list of the top values of the diagram items' bounds rectangle.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramBoundsManagerVisualData.LeftValues">
            <summary>
            Gets or sets a list of the left values of the diagram items' bounds rectangle.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramBoundsManagerVisualData.BottomValues">
            <summary>
            Gets or sets a list of the bottom values of the diagram items' bounds rectangle.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramBoundsManagerVisualData.RightValues">
            <summary>
            Gets or sets a list of the right values of the diagram items' bounds rectangle.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramBoundsManagerVisualData.TopIndexes">
            <summary>
            Gets or sets a list of items sorted by the top value of their bounds rectangle.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramBoundsManagerVisualData.LeftIndexes">
            <summary>
            Gets or sets a list of items sorted by the left value of their bounds rectangle.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramBoundsManagerVisualData.BottomIndexes">
            <summary>
            Gets or sets a list of items sorted by the bottom value of their bounds rectangle.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramBoundsManagerVisualData.RightIndexes">
            <summary>
            Gets or sets a list of items sorted by the right value of their bounds rectangle.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.VisualData.DiagramBoundsManagerVisualData.Serialize">
            <summary>
            Serializes this instance.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.VisualData.DiagramBoundsIndexesListVisualData">
            <summary>
            Represents a list of bounds indexes items.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.VisualData.DiagramBoundsIndexesVisualData">
            <summary>
            Provides information about how a diagram item is located in relation to the other items in a diagram.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramBoundsIndexesVisualData.DiagramItem">
            <summary>
            The visual data of the DiagramItem.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramBoundsIndexesVisualData.Top">
            <summary>
            Gets or sets the top index value. 
            If the diagram item is the top-most one in the diagram, this property will have a value of 0.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramBoundsIndexesVisualData.Left">
            <summary>
            Gets or sets the left index value.
            If the diagram item is the left-most one in the diagram, this property will have a value of 0.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramBoundsIndexesVisualData.Right">
            <summary>
            Gets or sets the right index value.
            If the diagram item is the right-most one in the diagram, this property will have a value of 0.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.VisualData.DiagramBoundsIndexesVisualData.Bottom">
            <summary>
            Gets or sets the bottom index value.
            If the diagram item is the bottom-most one in the diagram, this property will have a value of 0.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramItem">
            <summary>
            Provides a model for an item visualized within <see cref="T:Infragistics.Controls.Charts.XamDiagram"/> control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.DiagramItem"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramItem.ContentProperty">
            <summary>
            Identifies the Content dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramItem.Content">
            <summary>
            Gets or sets item's content.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItem.OnContentChanged(System.Object,System.Object)">
            <summary>
            Content property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramItem.DisplayTemplateProperty">
            <summary>
            Identifies the DisplayTemplate dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramItem.DisplayTemplate">
            <summary>
            Gets or sets the data template used to display the content.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItem.OnDisplayTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
            <summary>
            DisplayTemplate property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramItem.EditTemplateProperty">
            <summary>
            Identifies the EditTemplate dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramItem.EditTemplate">
            <summary>
            Gets or sets the data template used to display the content when the item is in edit mode.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItem.OnEditTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
            <summary>
            EditTemplate property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramItem.StrokeDashArray">
            <summary>
            Gets or sets the stroke dash array applied to this presenter's shapes.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramItem.StrokeDashArrayProperty">
            <summary>
            Identifies the StrokeDashArray dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramItem.FillProperty">
            <summary>
            Identifies the Fill dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramItem.Fill">
            <summary>
            Gets or sets the fill of the item shape.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItem.OnFillChanged(System.Windows.Media.Brush,System.Windows.Media.Brush)">
            <summary>
            Fill property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramItem.Stroke">
            <summary>
            Gets or sets the stroke of the item shape.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramItem.StrokeProperty">
            <summary>
            Identifies the Stroke dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramItem.StrokeThickness">
            <summary>
            Gets or sets the stroke thickness applied to this presenter's shapes.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramItem.StrokeThicknessProperty">
            <summary>
            Identifies the StrokeThickness dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramItem.IsInEditMode">
            <summary>
            Gets a value indicating whether the item is in edit mode.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramItem.Bounds">
            <summary>
            Gets or sets the bounds rectangle of the item without its content.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItem.OnBoundsChanged(System.Windows.Rect,System.Windows.Rect)">
            <summary>
            Called when the <see cref="P:Infragistics.Controls.Charts.DiagramItem.Bounds"/> property value has changed.
            </summary>
            <param name="oldValue">The old bounds rectangle.</param>
            <param name="newValue">The new bounds rectangle.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramItem.IsInViewProperty">
            <summary>
            Identifies the IsInView dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramItem.IsInView">
            <summary>
            Gets a value indicating whether the item is currently in view.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramItem.Diagram">
            <summary>
            Gets the diagram which contains the item.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItem.OnDiagramChanged(Infragistics.Controls.Charts.XamDiagram,Infragistics.Controls.Charts.XamDiagram)">
            <summary>
            Called when the <see cref="P:Infragistics.Controls.Charts.DiagramItem.Diagram"/> property has changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
            <remarks>Overriding this method without calling the base implementation will have undesired results.</remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramItem.ZIndexProperty">
            <summary>
            Identifies the ZIndex dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramItem.ZIndex">
            <summary>
            Gets or sets a value that represents the order on the z-plane in which the diagram item appears.
            </summary>
            <remarks>
            The value of this property determines the index at which the item is inserted in the diagram panel's
            children collection. The property is meant to act as a global ZIndex for all Diagram Items in the XamDiagram, mimicking WPF visual tree's behavior 
            (not Visio's local/selected only arrangement). The <see cref="P:Panel.Zindex"/> attached property always takes precedence 
            over the value of this property. In order to improve performance avoid using <see cref="P:Panel.Zindex"/>.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItem.OnZIndexChanged(System.Int32,System.Int32)">
            <summary>
            ZIndexProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramItem.AllowEdit">
            <summary>
            Determines whether or not the <see cref="T:Infragistics.Controls.Charts.DiagramItem"/>'s content can be edited.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramItem.AllowEditProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.DiagramItem.AllowEdit"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItem.OnAllowEditChanged(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            AllowEditProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramItem.AllowDelete">
            <summary>
            Determines whether or not the <see cref="T:Infragistics.Controls.Charts.DiagramItem"/> can be deleted.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramItem.AllowDeleteProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.DiagramItem.AllowDelete"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItem.OnAllowDeleteChanged(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            AllowDeleteProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramItem.AllowResize">
            <summary>
            Determines whether or not the <see cref="T:Infragistics.Controls.Charts.DiagramItem"/> can be resized.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramItem.AllowResizeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.DiagramItem.AllowResize"/> property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItem.OnAllowResizeChanged(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            AllowResizeProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramItem.DragDropData">
            <summary>
            Gets or sets the object that is dropped from the toolbox or copied/pasted in the xamDiagram.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramItem.ContentPresenter">
            <summary>
            Gets or sets the <see cref="T:Infragistics.Controls.Charts.Primitives.DiagramItemContentPresenter"/> used for displaying this instance's content.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramItem.EditPanel">
            <summary>
            Gets or sets the panel where content editing related elements are placed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramItem.ContentPanel">
            <summary>
            Gets or sets the panel where content related elements are placed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramItem.BoundsWithContent">
            <summary>
            Gets or sets the bounds rectangle of the item and its content.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItem.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItem.Clone(System.Boolean)">
            <summary>
            Clones this instance.
            </summary>
            <param name="cloneContent">Include/Exclude cloning of the Content</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItem.Move(System.Double,System.Double)">
            <summary>
            Moves the diagram item with the specified offset.
            </summary>
            <param name="offsetX">The amount to offset the x-coordinate.</param>
            <param name="offsetY">The amount to offset the y-coordinate.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItem.BeginEdit">
            <summary>
            Puts this node in edit mode.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItem.HideConnectionPointPresenters">
            <summary>
            Hides the connection point presenters.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItem.ShowConnectionPointPresenters">
            <summary>
            Shows the connection point presenters.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItem.UpdateConnectionPointPresenters">
            <summary>
            Updates the connection point presenters.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItem.EndEdit">
            <summary>
            Ends this node edit mode.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItem.ExportViewShapes">
            <summary>
            Exports visual information about a diagram item for use by external tools and functionality.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItem.ResolveContentTemplate">
            <summary>
            Gets the content data template for this <see cref="T:Infragistics.Controls.Charts.DiagramItem"/>.
            </summary>
            <returns>The content data template for this <see cref="T:Infragistics.Controls.Charts.DiagramItem"/>.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItem.OnNameChanged(System.String,System.String)">
            <summary>
            Name property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItem.InitializeShapePath">
            <summary>
            Initializes the shape path.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItem.CloneDiagramItemProperties(Infragistics.Controls.Charts.DiagramItem,Infragistics.Controls.Charts.DiagramItem)">
            <summary>
            Clones the diagram item property values.
            </summary>
            <param name="source">The source diagram item</param>
            <param name="target">The target diagram item</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItem.CloneDiagramItemProperties(Infragistics.Controls.Charts.DiagramItem,Infragistics.Controls.Charts.DiagramItem,System.Boolean)">
            <summary>
            Clones the diagram item property values including/excluding the Content.
            </summary>
            <param name="source">The source diagram item</param>
            <param name="target">The target diagram item</param>
            <param name="cloneContent">Include/Exclude cloning the Content</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItem.CloneDependencyProperty(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)">
            <summary>
            Clones a dependency property value if the value source is local.
            </summary>
            <param name="source">The source dependency object</param>
            <param name="target">The target dependency object</param>
            <param name="property">The dependency property</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItem.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItem.OnMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Controls.Control.MouseDoubleClick" /> routed event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> routed event is raised on this element. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data. The event data reports that the left mouse button was pressed.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItem.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data. The event data reports that the left mouse button was released.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItem.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItem.InitiateDrag(System.Windows.Point)">
            <summary>
            Initiates a drag operation.
            </summary>
            <param name="mouseDownPoint">The mouse down point</param>
            <returns>Returns whether the operation was successful.</returns>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramItem.IsSelectedProperty">
            <summary>
            Identifies the IsSelected dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramItem.IsSelected">
            <summary>
            Gets or sets a value that indicates whether the diagram item is selected.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItem.OnIsSelectedChanged(System.Boolean,System.Boolean)">
            <summary>
            IsSelected property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="E:Infragistics.Controls.Charts.DiagramItem.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItem.OnPropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Charts.DiagramItem.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramToolboxCategory">
            <summary>
            Represents a category of one or more <see cref="T:Infragistics.Controls.Charts.DiagramToolboxItem"/>s.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramToolboxCategory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.DiagramToolboxCategory"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramToolboxCategory.NameProperty">
            <summary>
            Identifies the Name dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramToolboxCategory.Name">
            <summary>
            Gets or sets the name of the category.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramToolboxCategory.IsExpandedProperty">
            <summary>
            Identifies the IsExpanded dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramToolboxCategory.IsExpanded">
            <summary>
            Gets or sets whether the category is expanded in the user interface.
            </summary> 
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramToolboxCategory.ItemsProperty">
            <summary>
            Identifies the Items dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramToolboxCategory.Items">
            <summary>
            Gets or sets the Items collection.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramToolboxCategory.IsPredefined">
            <summary>
            Gets or sets whether the category is predefined.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramToolboxCategory.IsCustom">
            <summary>
            Gets or sets whether the category is custom defined.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramToolboxItem">
            <summary>
            Represents an item visualized by <see cref="T:Infragistics.Controls.Charts.Primitives.DiagramToolboxCategoryItemsControl"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramToolboxItem.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramToolboxItem.Item">
            <summary>
            Gets or sets the <see cref="T:Infragistics.Controls.Charts.DiagramItem"/> that this instance represents.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramToolboxItem.BeginEditOnDrop">
            <summary>
            Gets or sets a value indicating whether the <see cref="P:Infragistics.Controls.Charts.DiagramToolboxItem.Item"/> should enter edit mode when dropped onto a XamDiagram.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramToolboxItem.Content">
            <summary>
            Gets or sets the content to display.
            </summary>
            <remarks>
            If not explicitly set, the <see cref="P:Infragistics.Controls.Charts.DiagramToolboxItem.Item"/> value is displayed instead.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramToolboxItem.OnPropertyChanged(System.String)">
            <summary>
            Called when a property value has changed.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramToolboxItemsPanel">
            <summary>
            Custom panel for the <see cref="T:Infragistics.Controls.Charts.Primitives.DiagramToolboxCategoryItem"/>. Works similarly to a wrap panel, however it places everything in aligned columns and rows.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramToolboxItemsPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the items in the panel and determines the size needed for the panel to display all its content.
            </summary>
            <param name="availableSize">The size available for the panel items.</param>
            <returns>The size needed by the panel to arrange its items.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramToolboxItemsPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the items in the panel.
            </summary>
            <param name="finalSize">The size determined by the measure override method.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramToolboxItemsPanel.DiagramToolboxItemsPanelVisualData">
            <summary>
            Represents visual data for DiagramToolboxItemsPanel.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramToolboxItemsPanel.DiagramToolboxItemsPanelVisualData.DiagramToolboxCategoryItems">
            <summary>
            Gets or sets the items of the DiagramToolboxItemsPanel.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.XamDiagramToolbox">
            <summary>
            Represents an Infragistics diagramming toolbox control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagramToolbox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.XamDiagramToolbox"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagramToolbox.Header">
            <summary>
            Gets or sets the header.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagramToolbox.HeaderProperty">
            <summary>
            Identifies the header property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagramToolbox.HeaderBackground">
            <summary>
            Gets or sets the header background.
            </summary>
            <value>
            The header background.
            </value>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagramToolbox.HeaderBackgroundProperty">
            <summary>
            Identifies the HeaderBackground dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagramToolbox.HeaderBorderBrush">
            <summary>
            Gets or sets the header border brush.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagramToolbox.HeaderBorderBrushProperty">
            <summary>
            Identifies the HeaderBorderBrush dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagramToolbox.HeaderBorderThickness">
            <summary>
            Gets or sets the header border thickness.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagramToolbox.HeaderBorderThicknessProperty">
            <summary>
            Identifies the HeaderBorderThickness dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagramToolbox.HeaderForeground">
            <summary>
            Gets or sets the header foreground.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagramToolbox.HeaderForegroundProperty">
            <summary>
            Identifies the HeaderForeground dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagramToolbox.HeaderVisibility">
            <summary>
            Gets or sets the header visibility.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagramToolbox.HeaderVisibilityProperty">
            <summary>
            Identifies the HeaderStyle dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagramToolbox.Categories">
            <summary>
            Gets or sets the categories. By default this property is pre-populated.
            Use this property to replace the default categories. If you want to add additional categories
            without removing the default ones used the <see cref="P:Infragistics.Controls.Charts.XamDiagramToolbox.CustomCategories"/> property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagramToolbox.CategoriesProperty">
            <summary>
            Identifies the Categories dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagramToolbox.CustomCategories">
            <summary>
            Gets or sets the custom categories. The custom categories are displayed after the <see cref="P:Infragistics.Controls.Charts.XamDiagramToolbox.Categories"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagramToolbox.ExportVisualData">
            <summary>
            Exports visual data for this instance.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagramToolbox.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="T:Infragistics.Controls.Charts.XamDiagramToolbox"/> to UI Automation.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamDiagramToolbox.CategoryAdding">
            <summary>
            Occurs when a toolbox category is about to be added.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagramToolbox.OnCategoryAdding(Infragistics.Controls.Charts.DiagramToolboxCategory)">
            <summary>
            Called when a category is being added to the <see cref="P:Infragistics.Controls.Charts.XamDiagramToolbox.Categories"/> collection.
            Raises the <see cref="E:XamDiagramToolbox.CategoryAdding"/> event.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamDiagramToolbox.CategoryAdded">
            <summary>
            Occurs when a toolbox category is added.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagramToolbox.OnCategoryAdded(Infragistics.Controls.Charts.DiagramToolboxCategory)">
            <summary>
            Called when a category has been added to the <see cref="P:Infragistics.Controls.Charts.XamDiagramToolbox.Categories"/> collection.
            Raises the <see cref="E:XamDiagramToolbox.CategoryAdded"/> event.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DrawingVisualHost">
            <summary>
            Provides an host element to <see cref="T:Infragistics.Controls.Charts.XamDiagram"/> to visualize drawing visual items.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DrawingVisualPresenter">
            <summary>
            Provides a lightweight representation of a visual object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DrawingVisualPresenter.DrawingVisual">
            <summary>
            Gets or sets the drawing visual.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.IDrawingVisualSource">
            <summary>
            Provides a drawing visual content.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.IDrawingVisualSource.VisualPresenter">
            <summary>
            Gets the visual presenter.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.IDrawingVisualSource.GetDrawingVisual">
            <summary>
            Gets the drawing visual used by <see cref="P:Infragistics.Controls.Charts.IDrawingVisualSource.VisualPresenter"/>.
            </summary>
            <returns>The drawing visual.</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.IDiagramLayout">
            <summary>
            Exposes a method for arranging the items in a diagram.
            </summary>
            <remarks>
            In order to apply a layout to a <see cref="T:Infragistics.Controls.Charts.XamDiagram"/>, set the 
            <see cref="M:XamDiagram.Layout"/> property to an instance of 
            a class implementing this interface. The <see cref="T:Infragistics.Controls.Charts.XamDiagram"/> initially applies the layout,
            calling the <see cref="M:Infragistics.Controls.Charts.IDiagramLayout.ArrangeNodes(System.Collections.Generic.IEnumerable{Infragistics.Controls.Charts.DiagramNode})"/> method. In order to reapply the layout later call the 
            <see cref="M:XamDiagram.RefreshLayout"/> method.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.IDiagramLayout.ArrangeNodes(System.Collections.Generic.IEnumerable{Infragistics.Controls.Charts.DiagramNode})">
            <summary>
            Sets the <see cref="M:DiagramNode.Position"/> property
            of the supplied <paramref name="nodes"/> in order to arrange them in a layout.
            </summary>
            <param name="nodes">All the nodes in the <see cref="P:Infragistics.Controls.Charts.XamDiagram.Items"/> collection.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.ForceDirectedGraphDiagramLayout">
            <summary>
            Force-directed graph layout using the Fruchterman–Reingold algorithm.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ForceDirectedGraphDiagramLayout.AverageNodeSizeProperty">
            <summary>
            Identifies the AverageNodeSize dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ForceDirectedGraphDiagramLayout.AverageNodeSize">
            <summary>
            Gets or sets the average node size. If this property is not set,
            the average size will be calculated separately for each of the graph's connected components.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ForceDirectedGraphDiagramLayout.BufferProperty">
            <summary>
            Identifies the Buffer dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.ForceDirectedGraphDiagramLayout.Buffer">
            <summary>
            Gets or sets the optimal buffer between nodes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ForceDirectedGraphDiagramLayout.ArrangeNodes(System.Collections.Generic.IEnumerable{Infragistics.Controls.Charts.DiagramNode})">
            <summary>
            Arranges the nodes.
            </summary>
            <param name="nodes">All the nodes in the <see cref="P:Infragistics.Controls.Charts.XamDiagram.Items" /> collection.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramShapeType">
            <summary>
            Specifies the preferred geometry shape for a node.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramShapeType.None">
            <summary>
            No geometry shape will be applied.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramShapeType.Rectangle">
            <summary>
            Represents a rectangle geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramShapeType.RoundedRectangle">
            <summary>
            Represents a rounded rectangle geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramShapeType.Square">
            <summary>
            Represents a square geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramShapeType.Ellipse">
            <summary>
            Represents an ellipse geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramShapeType.Circle">
            <summary>
            Represents a circle geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramShapeType.Triangle">
            <summary>
            Represents a triangle geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramShapeType.RightTriangle">
            <summary>
            Represents a right triangle geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramShapeType.RightTriangleMirrored">
            <summary>
            Represents a mirrored right triangle geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramShapeType.Rhombus">
            <summary>
            Represents a rhombus geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramShapeType.Octagon">
            <summary>
            Represents an octagon geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramShapeType.Chevron">
            <summary>
            Represents a chevron geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramShapeType.Hexagon">
            <summary>
            Represents a hexagon geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramShapeType.Pentagon">
            <summary>
            Represents a pentagon geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramShapeType.Heptagon">
            <summary>
            Represents a heptagon geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramShapeType.Cross">
            <summary>
            Represents a cross geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramShapeType.ThinCross">
            <summary>
            Represents a thin cross geometry.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramItemContentLayoutBehavior">
            <summary>
            Indicates how the content of an element will be sized when the
            height of the content is greater than the element's height.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramItemContentLayoutBehavior.Overflow">
            <summary>
            The whole content is displayed and overflows its parent if necessary.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramItemContentLayoutBehavior.SizeToParent">
            <summary>
            The content is cropped if its height exceeds its parent's height.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramConnectionType">
            <summary>
            Indicates the type of the line drawn for a <see cref="T:Infragistics.Controls.Charts.DiagramConnection"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionType.Straight">
            <summary>
            A straight connection line.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionType.RightAngle">
            <summary>
            A right-angle connection line.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramConnectionCapType">
            <summary>
            Specifies the shape a <see cref="T:Infragistics.Controls.Charts.DiagramConnection"/> starts/ends with as controlled by
            its <see cref="P:Infragistics.Controls.Charts.DiagramConnection.StartCapType"/> and <see cref="P:Infragistics.Controls.Charts.DiagramConnection.EndCapType"/> properties respectively.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionCapType.None">
            <summary>
            No geometry shape will be applied.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionCapType.OpenArrow">
            <summary>
            Represents an open arrow geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionCapType.ClosedArrow">
            <summary>
            Represents a closed arrow geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionCapType.FilledArrow">
            <summary>
            Represents a filled arrow geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionCapType.IndentedClosedArrow">
            <summary>
            Represents an indented closed arrow geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionCapType.IndentedFilledArrow">
            <summary>
            Represents an indented filled arrow geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionCapType.OpenDoubleArrow">
            <summary>
            Represents an open double arrow geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionCapType.ClosedDoubleArrow">
            <summary>
            Represents a closed double arrow geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionCapType.FilledDoubleArrow">
            <summary>
            Represents a filled double arrow geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionCapType.DimensionLine">
            <summary>
            Represents a dimension line geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionCapType.Dot">
            <summary>
            Represents a dot geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionCapType.FilledDot">
            <summary>
            Represents a filled dot geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionCapType.Diamond">
            <summary>
            Represents a diamond geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionCapType.FilledDiamond">
            <summary>
            Represents a filled diamond geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionCapType.Square">
            <summary>
            Represents a square geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionCapType.FilledSquare">
            <summary>
            Represents a filled square geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionCapType.ClosedNoDash">
            <summary>
            Represents an empty circle geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionCapType.FilledNoDash">
            <summary>
            Represents a filled circle geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionCapType.OpenOneDash">
            <summary>
            Represents one dash geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionCapType.OpenTwoDash">
            <summary>
            Represents two dashes geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionCapType.OpenThreeDash">
            <summary>
            Represents three dashes geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionCapType.ClosedOneDash">
            <summary>
            Represents a closed one dash geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionCapType.ClosedTwoDash">
            <summary>
            Represents a closed two dashes geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionCapType.ClosedThreeDash">
            <summary>
            Represents a closed three dashes geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionCapType.FilledOneDash">
            <summary>
            Represents a filled one dash geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionCapType.FilledTwoDash">
            <summary>
            Represents a filled two dashes geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionCapType.FilledThreeDash">
            <summary>
            Represents a filled three dashes geometry.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionCapType.Fork">
            <summary>
            Represents a fork geometry.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramSelectionMode">
            <summary>
            Specifies the selection behavior for a <see cref="T:Infragistics.Controls.Charts.XamDiagram"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramSelectionMode.None">
            <summary>
            The user cannot select items.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramSelectionMode.Single">
            <summary>
            The user can select only one item at a time.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramSelectionMode.Multiple">
            <summary>
            The user can select multiple items while holding down the SHIFT or CTRL key.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramDragInteraction">
            <summary>
            Specifies the mouse-left-button drag interaction for <see cref="T:Infragistics.Controls.Charts.XamDiagram"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramDragInteraction.None">
            <summary>
            The mouse does not interact with the diagram surface.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramDragInteraction.Zoom">
            <summary>
            Dragging the mouse performs a zoom operation.
            When the mouse left button is released, the diagram is zoomed to the area
            surrounded by the rectangle drawn while dragging.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramDragInteraction.Pan">
            <summary>
            Dragging the mouse performs a pan operation.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramDragInteraction.Select">
            <summary>
            Dragging the mouse performs a select operation. 
            If the <see cref="P:XamDiagram.SelectionMode"/> is set to <see cref="F:Infragistics.Controls.Charts.DiagramSelectionMode.Multiple"/>, 
            when the mouse left button is released, the items that are fully contained within the area
            surrounded by the rectangle drawn while dragging, are selected.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramOptionsPaneMode">
            <summary>
            Specifies whether the diagram items edited by a <see cref="T:Infragistics.Controls.Charts.Primitives.DiagramOptionsPane" /> are DiagramNodes, DiagramConnections or both. <br/>
            This is determined by the contents of the <see cref="M:DiagramOptionsPaneDataContext.Items" /> collection.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramOptionsPaneMode.Nodes">
            <summary>
            The options pane edits DiagramNodes.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramOptionsPaneMode.Connections">
            <summary>
            The options pane edits DiagramConnections.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramOptionsPaneMode.All">
            <summary>
            The options pane edits both DiagramNodes and DiagramConnections.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramConnectionPointsDisplayMode">
            <summary>
            Specifies the display mode of a node's connection points. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionPointsDisplayMode.Always">
            <summary>
            Connection points are always displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionPointsDisplayMode.Auto">
            <summary>
            Connection points are displayed when the <see cref="M:XamDiagram.Tool"/> is set to <see cref="M:DiagramTool.Connector"/>
            and <see cref="M:XamDiagram.DefaultDragInteraction"/> is not <see cref="M:DiagramDragInteraction.None"/>.
            Otherwise the connection points are not displayed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionPointsDisplayMode.MouseOver">
            <summary>
            Connection points are displayed for nodes that are close or under the mouse cursor.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionPointsDisplayMode.Never">
            <summary>
            Connection points are not displayed.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramTool">
            <summary>
            Specifies the tool used in a <see cref="T:Infragistics.Controls.Charts.XamDiagram"/>. Mostly this determines how the mouse
            interacts with the diagram surface and items, however it could also affect some 
            other aspects of the <see cref="T:Infragistics.Controls.Charts.XamDiagram"/> such as the visibility of nodes' connection points.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramTool.Pointer">
            <summary>
            A pointer tool. When this tool is used, the value of the <see cref="M:XamDiagram.DefaultDragInteraction"/>
            specifies how the mouse interacts with the diagram surface.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramTool.Connector">
            <summary>
            A tool used for drawing connections. <br/>
            Performing a drag on the empty diagram surface draws a connection.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramOptionsPanePlacementMode">
            <summary>
            Describes how the options pane is positioned relative to the selected diagram items.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramOptionsPanePlacementMode.Left">
            <summary>
            The options pane is positioned on the left side of the selected diagram items.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramOptionsPanePlacementMode.Right">
            <summary>
            The options pane is positioned on the right side of the selected diagram items.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramOptionsPanePlacementMode.Auto">
            <summary>
            The options pane is positioned on the left side of the selected diagram items when <see cref="P:System.Windows.SystemParameters.IsMenuDropRightAligned"/> is <see langword="true"/>, otherwise it is on the right side.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramOptionsPanePlacementMode.ReverseAuto">
            <summary>
            The options pane is positioned on the right side of the selected diagram items when <see cref="P:System.Windows.SystemParameters.IsMenuDropRightAligned"/> is <see langword="true"/>, otherwise it is on the left side.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.TreeDiagramLayoutArrangementMode">
            <summary>
            Determines how a <see cref="T:Infragistics.Controls.Charts.TreeDiagramLayout"/> arranges the child nodes.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TreeDiagramLayoutArrangementMode.Stagger">
            <summary>
            Child nodes are staggered in a number rows and columns providing a more compact presentation.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TreeDiagramLayoutArrangementMode.Orthogonal">
            <summary>
            All child nodes are positioned at the same level.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.TreeDiagramLayoutNodeFlowDirection">
            <summary>
            Determines where child nodes are placed in relation to their parent
            when arranged though the <see cref="T:Infragistics.Controls.Charts.TreeDiagramLayout"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TreeDiagramLayoutNodeFlowDirection.Below">
            <summary>
            Child nodes are placed below their parent.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TreeDiagramLayoutNodeFlowDirection.Left">
            <summary>
            Child nodes are placed to the left of to their parent.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TreeDiagramLayoutNodeFlowDirection.Right">
            <summary>
            Child nodes are placed to the right of their parent.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.TreeDiagramLayoutNodeFlowDirection.Above">
            <summary>
            Child nodes are placed above their parent.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramConnectionHandleType">
            <summary>
            Indicates the type of the connection handle.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionHandleType.Start">
            <summary>
            The start handle of the connection.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramConnectionHandleType.End">
            <summary>
            The end handle of the connection.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.EdgeType">
            <summary>
            Indicates one of the sides of a rectangular object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.EdgeType.Top">
            <summary>
            The top side.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.EdgeType.Left">
            <summary>
            The left side.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.EdgeType.Bottom">
            <summary>
            The bottom side.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.EdgeType.Right">
            <summary>
            The right side.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramItemAddedEventArgs">
            <summary>
            Represents the argument that is passed to the <see cref="E:XamDiagram.ItemAdded"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItemAddedEventArgs.#ctor(Infragistics.Controls.Charts.DiagramItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.DiagramItemAddedEventArgs"/> class.
            </summary>
            <param name="item">The diagram item.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramItemAddedEventArgs.Item">
            <summary>
            Returns the item that has just been added.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramItemRemovedEventArgs">
            <summary>
            Represents the argument that is passed to the <see cref="E:XamDiagram.ItemRemoved"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItemRemovedEventArgs.#ctor(Infragistics.Controls.Charts.DiagramItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.DiagramItemRemovedEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramItemRemovedEventArgs.Item">
            <summary>
            Returns the item that has just been removed.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramItemAddingEventArgs">
            <summary>
            Represents the argument that is passed to the <see cref="E:XamDiagram.ItemAdding"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItemAddingEventArgs.#ctor(Infragistics.Controls.Charts.DiagramItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.DiagramItemAddingEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramItemAddingEventArgs.Item">
            <summary>
            Returns the item to be added.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramItemRemovingEventArgs">
            <summary>
            Represents the argument that is passed to the <see cref="E:XamDiagram.ItemRemoving"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItemRemovingEventArgs.#ctor(Infragistics.Controls.Charts.DiagramItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.DiagramItemRemovingEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramItemRemovingEventArgs.Item">
            <summary>
            Returns the item to be removed.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramSelectionChangedEventArgs">
            <summary>
            A class listing the information needed when the selected items change.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramSelectionChangedEventArgs.#ctor(Infragistics.Controls.Charts.DiagramItem[],Infragistics.Controls.Charts.DiagramItem[])">
            <summary>
            Initializes a new instance of <see cref="T:Infragistics.Controls.Charts.DiagramSelectionChangedEventArgs"/> class.
            </summary>
            <param name="removedItems">The items that were unselected during this event.</param>
            <param name="addedItems">The items that were selected during this event.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramSelectionChangedEventArgs.RemovedItems">
            <summary>
            Gets a list that contains the items that were unselected.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramSelectionChangedEventArgs.AddedItems">
            <summary>
            Gets a list that contains the items that were selected.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramNodeMovingEventArgs">
            <summary>
            Represents the argument that is passed to the <see cref="E:XamDiagram.NodeMoving"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNodeMovingEventArgs.#ctor(Infragistics.Controls.Charts.DiagramNode,System.Windows.Point,System.Windows.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.DiagramNodeMovingEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramNodeMovingEventArgs.Node">
            <summary>
            Returns the node to be moved.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramNodeMovingEventArgs.OldPosition">
            <summary>
            Gets the old position of the item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramNodeMovingEventArgs.NewPosition">
            <summary>
            Gets the new position of the item.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramNodeMovedEventArgs">
            <summary>
            Represents the argument that is passed to the <see cref="E:XamDiagram.NodeMoved"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNodeMovedEventArgs.#ctor(Infragistics.Controls.Charts.DiagramNode,System.Windows.Point,System.Windows.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.DiagramNodeMovedEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramNodeMovedEventArgs.Node">
            <summary>
            Returns the node to be moved.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramNodeMovedEventArgs.OldPosition">
            <summary>
            Gets the old position of the item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramNodeMovedEventArgs.NewPosition">
            <summary>
            Gets the new position of the item.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramConnectionMovingEventArgs">
            <summary>
            Represents the argument that is passed to the <see cref="E:XamDiagram.ConnectionMoving"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnectionMovingEventArgs.#ctor(Infragistics.Controls.Charts.DiagramConnection,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.DiagramConnectionMovingEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnectionMovingEventArgs.Connection">
            <summary>
            Returns the connection to be moved.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnectionMovingEventArgs.OldStartPosition">
            <summary>
            Gets the old start position of the connection.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnectionMovingEventArgs.NewStartPosition">
            <summary>
            Gets the new start position of the connection.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnectionMovingEventArgs.OldEndPosition">
            <summary>
            Gets the old end position of the connection.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnectionMovingEventArgs.NewEndPosition">
            <summary>
            Gets the new end position of the connection.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramConnectionMovedEventArgs">
            <summary>
            Represents the argument that is passed to the <see cref="E:XamDiagram.ConnectionMoved"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnectionMovedEventArgs.#ctor(Infragistics.Controls.Charts.DiagramConnection,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.DiagramConnectionMovedEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnectionMovedEventArgs.Connection">
            <summary>
            Returns the connection to be moved.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnectionMovedEventArgs.OldStartPosition">
            <summary>
            Gets the old start position of the connection.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnectionMovedEventArgs.NewStartPosition">
            <summary>
            Gets the new start position of the connection.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnectionMovedEventArgs.OldEndPosition">
            <summary>
            Gets the old end position of the connection.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnectionMovedEventArgs.NewEndPosition">
            <summary>
            Gets the new end position of the connection.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramNodeResizingEventArgs">
            <summary>
            Represents the argument that is passed to the <see cref="E:XamDiagram.NodeResizing"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNodeResizingEventArgs.#ctor(Infragistics.Controls.Charts.DiagramNode,System.Windows.Size,System.Windows.Point,System.Windows.Size,System.Windows.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.DiagramNodeResizingEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramNodeResizingEventArgs.Node">
            <summary>
            Returns the node to be resized.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramNodeResizingEventArgs.OldSize">
            <summary>
            Gets the old size of the item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramNodeResizingEventArgs.NewSize">
            <summary>
            Gets the new size of the item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramNodeResizingEventArgs.OldPosition">
            <summary>
            Gets the old position of the item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramNodeResizingEventArgs.NewPosition">
            <summary>
            Gets the new position of the item.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramNodeResizedEventArgs">
            <summary>
            Represents the argument that is passed to the <see cref="E:XamDiagram.NodeResized"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNodeResizedEventArgs.#ctor(Infragistics.Controls.Charts.DiagramNode,System.Windows.Size,System.Windows.Point,System.Windows.Size,System.Windows.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.DiagramNodeResizedEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramNodeResizedEventArgs.Node">
            <summary>
            Returns the node to be resized.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramNodeResizedEventArgs.OldSize">
            <summary>
            Gets the old size of the item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramNodeResizedEventArgs.NewSize">
            <summary>
            Gets the new size of the item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramNodeResizedEventArgs.OldPosition">
            <summary>
            Gets the old position of the item.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramNodeResizedEventArgs.NewPosition">
            <summary>
            Gets the new position of the item.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramConnectionConnectingEventArgs">
            <summary>
            Represents the argument that is passed to the <see cref="E:XamDiagram.ConnectionSConnecting"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnectionConnectingEventArgs.#ctor(Infragistics.Controls.Charts.DiagramConnection,Infragistics.Controls.Charts.DiagramConnectionHandleType,System.Windows.Point,Infragistics.Controls.Charts.DiagramNode,System.String,System.Windows.Point,Infragistics.Controls.Charts.DiagramNode,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.DiagramConnectionConnectingEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnectionConnectingEventArgs.Connection">
            <summary>
            Returns the connection which start or end will be changed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnectionConnectingEventArgs.ConnectionHandleType">
            <summary>
            Returns the the type of the connection handle.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnectionConnectingEventArgs.OldPosition">
            <summary>
            Gets the old start or end position of the connection.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnectionConnectingEventArgs.OldNode">
            <summary>
            Gets the old start or end node of the connection.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnectionConnectingEventArgs.OldNodeConnectionPointName">
            <summary>
            Gets the old start or end node connection point name.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnectionConnectingEventArgs.NewPosition">
            <summary>
            Gets the new start or end position of the connection.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnectionConnectingEventArgs.NewNode">
            <summary>
            Gets the new start or end node of the connection.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnectionConnectingEventArgs.NewNodeConnectionPointName">
            <summary>
            Gets the new start or end node connection point name.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramConnectionConnectedEventArgs">
            <summary>
            Represents the argument that is passed to the <see cref="E:XamDiagram.ConnectionConnected"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramConnectionConnectedEventArgs.#ctor(Infragistics.Controls.Charts.DiagramConnection,Infragistics.Controls.Charts.DiagramConnectionHandleType,System.Windows.Point,Infragistics.Controls.Charts.DiagramNode,System.String,System.Windows.Point,Infragistics.Controls.Charts.DiagramNode,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.DiagramConnectionConnectedEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnectionConnectedEventArgs.Connection">
            <summary>
            Returns the connection which start or end will be changed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnectionConnectedEventArgs.ConnectionHandleType">
            <summary>
            Returns the the type of the connection handle.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnectionConnectedEventArgs.OldPosition">
            <summary>
            Gets the old start or end position of the connection.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnectionConnectedEventArgs.OldNode">
            <summary>
            Gets the old start or end node of the connection.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnectionConnectedEventArgs.OldNodeConnectionPointName">
            <summary>
            Gets the old start or end node connection point name.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnectionConnectedEventArgs.NewPosition">
            <summary>
            Gets the new start or end position of the connection.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnectionConnectedEventArgs.NewNode">
            <summary>
            Gets the new start or end node of the connection.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramConnectionConnectedEventArgs.NewNodeConnectionPointName">
            <summary>
            Gets the new start or end node connection point name.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramEditModeEnteringEventArgs">
            <summary>
            Represents the argument that is passed to the <see cref="E:XamDiagram.EditModeEnteringEvent"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramEditModeEnteringEventArgs.#ctor(Infragistics.Controls.Charts.DiagramItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.DiagramEditModeEnteringEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramEditModeEnteringEventArgs.Item">
            <summary>
            Gets the item.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramEditModeEnteredEventArgs">
            <summary>
            Represents the argument that is passed to the <see cref="E:XamDiagram.EditModeEnteredEvent"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramEditModeEnteredEventArgs.#ctor(Infragistics.Controls.Charts.DiagramItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.DiagramEditModeEnteredEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramEditModeEnteredEventArgs.Item">
            <summary>
            Gets the item.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramEditModeExitingEventArgs">
            <summary>
            Represents the argument that is passed to the <see cref="E:XamDiagram.EditModeExitingEvent"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramEditModeExitingEventArgs.#ctor(Infragistics.Controls.Charts.DiagramItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.DiagramEditModeExitingEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramEditModeExitingEventArgs.Item">
            <summary>
            Gets the item.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramEditModeExitedEventArgs">
            <summary>
            Represents the argument that is passed to the <see cref="E:XamDiagram.EditModeExitedEvent"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramEditModeExitedEventArgs.#ctor(Infragistics.Controls.Charts.DiagramItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.DiagramEditModeExitedEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramEditModeExitedEventArgs.Item">
            <summary>
            Gets the item.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramCommandExecutingEventArgs">
            <summary>
            Represents the argument that is passed to the <see cref="E:XamDiagram.CommandExecutingEvent"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramCommandExecutingEventArgs.#ctor(System.Windows.Input.RoutedCommand,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.DiagramCommandExecutingEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramCommandExecutingEventArgs.Command">
            <summary>
            Gets the command which will be executed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramCommandExecutingEventArgs.CommandParameter">
            <summary>
            Gets the parameter which will be used when executing the command.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramCommandExecutedEventArgs">
            <summary>
            Represents the argument that is passed to the <see cref="E:XamDiagram.CommandExecutedEvent"/> event.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramCommandExecutedEventArgs.#ctor(System.Windows.Input.RoutedCommand,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.DiagramCommandExecutedEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramCommandExecutedEventArgs.Command">
            <summary>
            Gets the command which will be executed.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramCommandExecutedEventArgs.CommandParameter">
            <summary>
            Gets the parameter which will be used when executing the command.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.ResizingBase.AdjustOffset(Infragistics.Controls.Charts.EdgeType)">
            <summary>
            Adjusts the offset, when the min size is reached and resizing up.
            </summary>
            <param name="pos"></param>
        </member>
        <member name="M:Infragistics.Controls.Charts.ResizingBase.AdjustOffset(Infragistics.Controls.Charts.EdgeType,System.Double)">
            <summary>
            Adjusts the offset, when the min size is going to be reached.
            </summary>
            <param name="pos"></param>
            <param name="aspectRatio"></param>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramNode">
            <summary>
            Represents a node visualized in the <see cref="T:Infragistics.Controls.Charts.XamDiagram" /> control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.DiagramNode"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramNode.ResizeRatio">
            <summary>
            Gets the aspect ratio (Width/Height) of the node
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramNode.MaintainAspectRatio">
            <summary>
            Gets or sets a value indicating whether the node's
            width to height ratio should be preserved when the node is being resized.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramNode.MaintainAspectRatioProperty">
            <summary>
            Identifies the MaintainAspectRatio dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.OnMaintainAspectRatioChanged(System.Boolean,System.Boolean)">
            <summary>
            MaintainAspectRatio property changed handler.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramNode.UniformHeightProperty">
            <summary>
            Identifies the UniformHeight dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramNode.UniformHeight">
            <summary>
            Gets or sets the height used when resolving the initial node size.
            The value of this property is used as height and the width is calculated based on the node type. <br/>
            Changing the value of this property after the node is created has no effect.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramNode.LeftContentOffsetProperty">
            <summary>
            Identifies the LeftContentOffset dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramNode.LeftContentOffset">
            <summary>
            Gets or sets a relative value between 0 and 1 that determines the left offset of the node content.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.OnLeftContentOffsetChanged(System.Double,System.Double)">
            <summary>
            LeftContentOffset property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramNode.RightContentOffsetProperty">
            <summary>
            Identifies the RightContentOffset dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramNode.RightContentOffset">
            <summary>
            Gets or sets a relative value between 0 and 1 that determines the right offset of the node content.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.OnRightContentOffsetChanged(System.Double,System.Double)">
            <summary>
            RightContentOffset property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramNode.ActualGeometry">
            <summary>
            Gets the actual geometry used for the node after it is resolved according
            to the values of <see cref="P:Infragistics.Controls.Charts.DiagramNode.ShapeType"/> and <see cref="P:Infragistics.Controls.Charts.DiagramNode.Geometry"/> properties.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramNode.GeometryProperty">
            <summary>
            Identifies the Geometry dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramNode.Geometry">
            <summary>
            Gets or sets a custom geometry to use for the node.
            </summary>
            <remarks>
            The value of this property takes precedence over the NodeType property value.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.OnGeometryChanged(System.Windows.Media.Geometry,System.Windows.Media.Geometry)">
            <summary>
            Geometry property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramNode.ContentLayoutBehaviorProperty">
            <summary>
            Identifies the ContentLayoutBehavior dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramNode.ContentLayoutBehavior">
            <summary>
            Gets or sets how the node's content will be sized if its height is greater than the node's height.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.OnContentLayoutBehaviorChanged(Infragistics.Controls.Charts.DiagramItemContentLayoutBehavior,Infragistics.Controls.Charts.DiagramItemContentLayoutBehavior)">
            <summary>
            ContentLayoutBehavior property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramNode.PositionProperty">
            <summary>
            Identifies the Position dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramNode.Position">
            <summary>
            Gets or sets the top-left point of the node.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.OnPositionChanged(System.Windows.Point,System.Windows.Point)">
            <summary>
            Position property changed handler.
            </summary>
            <param name="oldPosition">The old value.</param>
            <param name="newPosition">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramNode.IncomingConnections">
            <summary>
            Gets a read only collection with the incoming connections of the node.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramNode.OutgoingConnections">
            <summary>
            Gets a read only collection with the outgoing connections of the node.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramNode.ShapeTypeProperty">
            <summary>
            Identifies the ShapeType dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramNode.ShapeType">
            <summary>
            Gets or sets the shape type of the node.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.OnShapeTypeChanged(Infragistics.Controls.Charts.DiagramShapeType,Infragistics.Controls.Charts.DiagramShapeType)">
            <summary>
            ShapeType property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramNode.ConnectionPoints">
            <summary>
            Gets or sets a collection with connection points.
            </summary>
            <seealso cref="P:XamDiagram.ConnectionPointsDisplayMode"/>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramNode.ConnectionPointsProperty">
            <summary>
            Identifies the ConnectionPoints property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.OnConnectionPointsChanged(Infragistics.Controls.Charts.DiagramConnectionPointCollection,Infragistics.Controls.Charts.DiagramConnectionPointCollection)">
            <summary>
            ConnectionPoints property changed handler.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.DiagramNode.KeyProperty">
            <summary>
            Identifies the Key dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramNode.Key">
            <summary>
            Gets or sets a value that uniquely identifies the diagram node.
            </summary>
            <remarks>This property value is used by the <see cref="P:DiagramConnection.StartNodeKey"/> and <see cref="P:DiagramConnection.EndNodeKey"/> in order to connect to the node.</remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.OnKeyChanged(System.Object,System.Object)">
            <summary>
            Key property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramNode.NodeDefinition">
            <summary>
            Gets the assigned node definition.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.Clone">
            <summary>
            Clones this instance copying all the relevant properties to the clone instance.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.Clone(System.Boolean)">
            <summary>
            Clones this instance copying all the relevant properties to the clone instance.
            </summary>
            <param name="cloneContent">Include/Exclude cloning the Content</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.Move(System.Double,System.Double)">
            <summary>
            Moves the node by the specified offset.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.ExportViewShapes">
            <summary>
            Exports visual information about a node for use by external tools and functionality.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.GetDrawingVisual">
            <summary>
            Gets a <see cref="T:System.Windows.Media.DrawingVisual"/> instance representing the node.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.ShowConnectionPointPresenters">
            <summary>
            Shows the connection point presenters.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.UpdateConnectionPointPresenters">
            <summary>
            Updates the connection point presenters' positions.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.UpdateConnectionPointPresenter(Infragistics.Controls.Charts.Primitives.DiagramConnectionPointPresenter)">
            <summary>
            Updates the position of the specified DiagramConnectionPointPresenter.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.HighlightConnectionPoint(System.String)">
            <summary>
            Highlights the connector point with the specified name.
            </summary>
            <param name="name">A string matching the <see cref="P:Infragistics.Controls.Charts.DiagramConnectionPoint.Name"/> property value.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.UnhighlightConnectionPoint(System.String)">
            <summary>
            Un-highlights the connector point with the specified name.
            </summary>
            <param name="name">A string matching the <see cref="P:Infragistics.Controls.Charts.DiagramConnectionPoint.Name"/> property value.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.OnResolveNodeSize(Infragistics.Controls.Charts.DiagramNode)">
            <summary>
            Gets the default size of the node based on its actual node type.
            </summary>
            <param name="node">The node.</param>
            <returns>The size for a node of given <see cref="T:Infragistics.Controls.Charts.DiagramShapeType"/></returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.OnResolveNodeContentLayout">
            <summary>
            Resolves the content layout for a node based on its actual node type.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.OnResolveNodeGeometry">
            <summary>
            Resolves the geometry for a node based on its actual node type.
            </summary>
            <returns>The actual geometry that will be set to a node.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.CloneDiagramNodeProperties(Infragistics.Controls.Charts.DiagramNode,Infragistics.Controls.Charts.DiagramNode)">
            <summary>
            Calls the <see cref="M:DiagramItem.CloneDependencyProperty"/> method for all the relevant diagram node properties.
            </summary>
            <param name="original">The original node to copy property values from.</param>
            <param name="clone">The clone to copy property values to.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.CloneDiagramNodeProperties(Infragistics.Controls.Charts.DiagramNode,Infragistics.Controls.Charts.DiagramNode,System.Boolean)">
            <summary>
            Calls the <see cref="M:DiagramItem.CloneDependencyProperty"/> method for all the relevant diagram node properties.
            </summary>
            <param name="original">The original node to copy property values from.</param>
            <param name="clone">The clone to copy property values to.</param>
            <param name="cloneContent">Include/Exclude cloning the Content</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.OnDiagramChanged(Infragistics.Controls.Charts.XamDiagram,Infragistics.Controls.Charts.XamDiagram)">
            <summary>
            Called when the <see cref="P:Infragistics.Controls.Charts.DiagramItem.Diagram"/> property has changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
            <remarks>Overriding this method without calling the base implementation will have undesired results.</remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.OnBoundsChanged(System.Windows.Rect,System.Windows.Rect)">
            <summary>
            Called when the <see cref="P:DiagramItem.Bounds" /> property value has changed.
            </summary>
            <param name="oldValue">The old bounds rectangle.</param>
            <param name="newValue">The new bounds rectangle.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.CalculateAbsolutePointInBounds(System.Windows.Point)">
            <summary>
            Transforms a point from relative coordinates to absolute coordinates within the node's bounds.
            </summary>
            <param name="relativePoint">A point with coordinates from (0, 0) to (1, 1).</param>
            <returns>The absolute point within the node's bounds.</returns>
            <remarks>
            For a node with Bounds rectangle with a size of (200, 100), 
            when called with the Point (0.25, 0.4), 
            this method will return the Point (50, 40). <br/>
            This method also takes into account the StrokeThickness of the node.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.CalculateAbsolutePoint(System.Windows.Point)">
            <summary>
            Calculates the absolute point (in <see cref="P:XamDiagram.WorldRect"/> coordinates)
            from a relative point.
            </summary>
            <param name="relativePoint">A point with coordinates from (0, 0) to (1, 1).</param>
            <returns></returns>
            <remarks>
            For a node with Bounds rectangle (X:20, Y:300, W:200, H:100), 
            when called with the Point (0.25, 0.4), 
            this method will return the Point (70, 340).
            This method also takes into account the StrokeThickness of the node.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.AddIncomingConnection(Infragistics.Controls.Charts.DiagramConnection)">
            <summary>
            Adds the incoming connection.
            </summary>
            <param name="connection">The connection.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.AddOutgoingConnection(Infragistics.Controls.Charts.DiagramConnection)">
            <summary>
            Adds the outgoing connection.
            </summary>
            <param name="connection">The connection.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.RemoveIncomingConnection(Infragistics.Controls.Charts.DiagramConnection)">
            <summary>
            Removes the incoming connection.
            </summary>
            <param name="connection">The connection.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.RemoveOutgoingConnection(Infragistics.Controls.Charts.DiagramConnection)">
            <summary>
            Removes the outgoing connection.
            </summary>
            <param name="connection">The connection.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.GetConnectionPoint(Infragistics.Controls.Charts.DiagramConnection,System.String,Infragistics.Controls.Charts.DiagramConnectionHandleType)">
            <summary>
            Gets the absolute point where the <paramref name="connection"/>
            is to be connected to this node.
            </summary>
            <param name="connection">The connection to be connected.</param>
            <param name="connectionPointName">
            The <see cref="P:DiagramConnection.StartNodeConnectionPointName"/> 
            or <see cref="P:DiagramConnection.EndNodeConnectionPointName"/> value of the <paramref name="connection"/>,
            depending on which connection end is being connected to the node.</param>
            <returns>The absolute point where the connection should start/end. 
            If a matching connection point is found on the node, it is returned.
            Otherwise the middle of the closest side is returned.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.HideConnectionPointPresenters">
            <summary>
            Hides the connection point presenters.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.OnApplyTemplate">
            <summary>
            Called when <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> is called.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.InitiateDrag(System.Windows.Point)">
            <summary>
            Initiates a drag operation.
            </summary>
            <param name="mouseDownPoint">The mouse down point</param>
            <returns>
            Returns whether the operation was successful.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.OnFillChanged(System.Windows.Media.Brush,System.Windows.Media.Brush)">
            <summary>
            Fill property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramNode.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="T:Infragistics.Controls.Charts.DiagramNode"/> to UI Automation.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramItemsCollection">
            <summary>
            Represents a collection of <see cref="T:Infragistics.Controls.Charts.DiagramItem"/> instances.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItemsCollection.#ctor(Infragistics.Controls.Charts.XamDiagram)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.DiagramItemsCollection"/> class.
            </summary>
            <param name="diagram">The diagram that is owner or the collection.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramItemsCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether this instance is read-only.
            </summary>
            <remarks>
            When used as the value of the <see cref="P:XamDiagram.Items"/> property,
            the value of this property is <c>false</c> if the <see cref="P:XamDiagram.ItemsSource"/> 
            or <see cref="P:XamDiagram.ConnectionsSource"/> properties are set.
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItemsCollection.InsertItem(System.Int32,Infragistics.Controls.Charts.DiagramItem)">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItemsCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the item at the specified index of the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItemsCollection.ClearItems">
            <summary>
            Removes all items from the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItemsCollection.SetItem(System.Int32,Infragistics.Controls.Charts.DiagramItem)">
            <summary>
            Replaces the element at the specified index. 
            </summary>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramItemsCollection.MoveItem(System.Int32,System.Int32)">
            <summary>
            Moves the item at the specified index to a new location in the collection.
            </summary>
            <param name="oldIndex">The zero-based index specifying the location of the item to be moved.</param>
            <param name="newIndex">The zero-based index specifying the new location of the item.</param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="T:Infragistics.Controls.Charts.SelectedDiagramItemCollection">
            <summary>
            Represents a modifiable collection of <see cref="T:Infragistics.Controls.Charts.DiagramItem"/> objects which have been selected.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SelectedDiagramItemCollection.#ctor(Infragistics.Controls.Charts.XamDiagram)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.SelectedDiagramItemCollection"/> class.
            </summary>
            <param name="Diagram">The network node.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.SelectedDiagramItemCollection.Diagram">
            <summary>
            Gets or sets a reference to the <see cref="T:Infragistics.Controls.Charts.XamDiagram"/> that this collection belongs to. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SelectedDiagramItemCollection.AddItem(System.Int32,Infragistics.Controls.Charts.DiagramItem)">
            <summary>
            Adds the item at the specified index. 
            </summary>
            <param name="index">The zero-based index of the element to add.</param>
            <param name="item">item to be added</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.SelectedDiagramItemCollection.CreateNewInstance">
            <summary>
            Creates a new instance of this collection.
            </summary>
            <returns>
            The create new instance.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.SelectedDiagramItemCollection.OnSelectionChanged(Infragistics.Controls.SelectedCollectionBase{Infragistics.Controls.Charts.DiagramItem},Infragistics.Controls.SelectedCollectionBase{Infragistics.Controls.Charts.DiagramItem})">
            <summary>
            Called when the Selection collection has changed. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SelectedDiagramItemCollection.ResetItems">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.SelectedDiagramItemCollection.OnNotifyCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Invoked when this collection changes.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramStringSettings">
            <summary>
            Provides localized strings used for UI elements in the <see cref="T:Infragistics.Controls.Charts.XamDiagram"/> themes.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ToolboxHeaderText">
            <summary>
            Gets or sets the toolbox header text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ContextMenuGeneralHeaderText">
            <summary>
            Gets or sets the context menu general header text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ContextMenuShapeHeaderText">
            <summary>
            Gets or sets the context menu shape header text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ContextMenuConnectionHeaderText">
            <summary>
            Gets or sets the context menu connection header text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ContextMenuSizeHeaderText">
            <summary>
            Gets or sets the context menu size header text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ContextMenuTextHeaderText">
            <summary>
            Gets or sets the context menu text header text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ContextMenuShapeFillText">
            <summary>
            Gets or sets the context menu shape fill text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ContextMenuShapeOpacityText">
            <summary>
            Gets or sets the context menu shape opacity text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ContextMenuShapeWidthText">
            <summary>
            Gets or sets the context menu shape width text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ContextMenuShapeHeightText">
            <summary>
            Gets or sets the context menu shape height text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ContextMenuShapeStartPointXText">
            <summary>
            Gets or sets the context menu shape start point x text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ContextMenuShapeStartPointYText">
            <summary>
            Gets or sets the context menu shape start point y text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ContextMenuConnectionStartPointXText">
            <summary>
            Gets or sets the context menu connection start point x text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ContextMenuConnectionStartPointYText">
            <summary>
            Gets or sets the context menu connection start point y text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ContextMenuConnectionEndPointXText">
            <summary>
            Gets or sets the context menu connection end point x text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ContextMenuConnectionEndPointYText">
            <summary>
            Gets or sets the context menu connection end point y text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ContextMenuLineStrokeText">
            <summary>
            Gets or sets the context menu line stroke text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ContextMenuLineThicknessText">
            <summary>
            Gets or sets the context menu line thickness text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ContextMenuLineDashTypeText">
            <summary>
            Gets or sets the context menu line dash type text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ContextMenuLineStartText">
            <summary>
            Gets or sets the context menu line start text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ContextMenuLineEndText">
            <summary>
            Gets or sets the context menu line end text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ContextMenuLineStartSizeText">
            <summary>
            Gets or sets the context menu line start size text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ContextMenuLineEndSizeText">
            <summary>
            Gets or sets the context menu line end size text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ContextMenuConnectionTypeStraightText">
            <summary>
            Gets or sets the context menu connection type straight text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ContextMenuConnectionTypeRightAngleText">
            <summary>
            Gets or sets the context menu connection type right angle text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ContextMenuCutCommandText">
            <summary>
            Gets or sets the context menu cut command text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ContextMenuCopyCommandText">
            <summary>
            Gets or sets the context menu copy command text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ContextMenuPasteCommandText">
            <summary>
            Gets or sets the context menu paste command text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ContextMenuDeleteCommandText">
            <summary>
            Gets or sets the context menu delete command text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ContextMenuSendToBackCommandText">
            <summary>
            Gets or sets the context menu send to back command text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ContextMenuBringToFrontCommandText">
            <summary>
            Gets or sets the context menu bring to front command text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ContextMenuSendBackwardCommandText">
            <summary>
            Gets or sets the context menu send backward command text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ContextMenuBringForwardCommandText">
            <summary>
            Gets or sets the context menu bring forward command text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ContextMenuSendToBackCommandFullText">
            <summary>
            Gets or sets the context menu send to back command full text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ContextMenuBringToFrontCommandFullText">
            <summary>
            Gets or sets the context menu bring to front command full text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ContextMenuSendBackwardCommandFullText">
            <summary>
            Gets or sets the context menu send backward command full text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ContextMenuBringForwardCommandFullText">
            <summary>
            Gets or sets the context menu bring forward command full text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.MaintainAspectRatioText">
            <summary>
            Gets or sets the maintain aspect ratio text.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramStringSettings.ConnectionText">
            <summary>
            Gets or sets the connection text.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramStringSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.DiagramStringSettings"/> class.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.DiagramStringSettings.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramStringSettings.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramDependencyPropertyChangeUndoUnit">
            <summary>
            Custom undo unit used to undo the result of a DependencyProperty change in the XamDiagram.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramDependencyPropertyChangeUndoUnit.#ctor(Infragistics.Controls.Charts.XamDiagram,System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Charts.DiagramDependencyPropertyChangeUndoUnit"/>
            </summary>
            <param name="diagram">The diagram which is the target</param>
            <param name="obj">The object whose property was changed</param>
            <param name="args">The dependency property changed event arguments</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramDependencyPropertyChangeUndoUnit.Target">
            <summary>
            Returns the target diagram that will be affected by the <see cref="T:Infragistics.Controls.Charts.DiagramDependencyPropertyChangeUndoUnit"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramPropertyChangeUndoUnit`2">
            <summary>
            Custom undo unit used to undo the result of a property change in the XamDiagram.
            </summary>
            <typeparam name="TOwner">The type of object whose property was changed</typeparam>
            <typeparam name="TProperty">The type of the property whose value was changed</typeparam>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramPropertyChangeUndoUnit`2.#ctor(Infragistics.Controls.Charts.XamDiagram,`0,System.String,`1,`1)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Charts.DiagramPropertyChangeUndoUnit`2"/>
            </summary>
            <param name="diagram">The diagram which is the target</param>
            <param name="obj">Object whose property was changed</param>
            <param name="propertyName">The name of the property</param>
            <param name="oldValue">The old value of the property</param>
            <param name="newValue">The new value of the property</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramPropertyChangeUndoUnit`2.Target">
            <summary>
            Returns the target diagram that will be affected by the <see cref="T:Infragistics.Controls.Charts.DiagramPropertyChangeUndoUnit`2"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DiagramCollectionChangedUndoUnit`1">
            <summary>
            Custom <see cref="T:Infragistics.Undo.UndoUnit"/> for undoing changes to an <see cref="T:System.Collections.Generic.ICollection`1"/> in the XamDiagram.
            </summary>
            <typeparam name="T">The type of item in the collection</typeparam>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramCollectionChangedUndoUnit`1.#ctor(Infragistics.Controls.Charts.XamDiagram,System.Collections.Generic.ICollection{`0},System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Charts.DiagramCollectionChangedUndoUnit`1"/> based upon the specified <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/>
            </summary>
            <param name="diagram">The diagram which is the target</param>
            <param name="collection">The collection that was modified</param>
            <param name="changedArgs">An object that describes the changes made to the collection</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DiagramCollectionChangedUndoUnit`1.#ctor(Infragistics.Controls.Charts.XamDiagram,System.Collections.Generic.ICollection{`0},System.Collections.Specialized.NotifyCollectionChangedAction,`0[],System.Int32)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Controls.Charts.DiagramCollectionChangedUndoUnit`1"/> for an add or remove of multiple items.
            </summary>
            <param name="diagram">The diagram which is the target</param>
            <param name="collection">The collection that was modified</param>
            <param name="action">>Must be either 'Add' or 'Remove' to indicate if the item was added or removed.</param>
            <param name="items">The items that were added or removed.</param>
            <param name="index">The index at which the items were inserted for an Add or the old index of the item for a Remove <paramref name="action"/>.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.DiagramCollectionChangedUndoUnit`1.Target">
            <summary>
            Returns the target diagram that will be affected by the <see cref="T:Infragistics.Controls.Charts.DiagramCollectionChangedUndoUnit`1"/>
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.XamDiagram">
            <summary>
            Represents an Infragistics' diagramming control.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Charts.XamDiagram"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.ItemAddingEvent">
            <summary>
            Identifies the <see cref="E:Infragistics.Controls.Charts.XamDiagram.ItemAdding"/> event.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamDiagram.ItemAdding">
            <summary>
            Occurs when an item is about to be added.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.ItemAddedEvent">
            <summary>
            Identifies the <see cref="E:Infragistics.Controls.Charts.XamDiagram.ItemAdded"/> event.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamDiagram.ItemAdded">
            <summary>
            Occurs when an item is added.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.ItemRemovingEvent">
            <summary>
            Identifies the <see cref="E:Infragistics.Controls.Charts.XamDiagram.ItemRemoving"/> event.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamDiagram.ItemRemoving">
            <summary>
            Occurs when an item is about to be removed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.ItemRemovedEvent">
            <summary>
            Identifies the <see cref="E:Infragistics.Controls.Charts.XamDiagram.ItemRemoved"/> event.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamDiagram.ItemRemoved">
            <summary>
            Occurs when an item is removed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.SelectionChangedEvent">
            <summary>
            Identifies the <see cref="E:Infragistics.Controls.Charts.XamDiagram.SelectionChanged"/> event.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamDiagram.SelectionChanged">
            <summary>
            Occurs the <see cref="P:Infragistics.Controls.Charts.XamDiagram.SelectedItems"/> have changed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnSelectionChanged(Infragistics.Controls.Charts.DiagramSelectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Charts.XamDiagram.SelectionChanged"/> event.
            </summary>
            <param name="args">The data for the event.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.NodeMovingEvent">
            <summary>
            Identifies the <see cref="E:Infragistics.Controls.Charts.XamDiagram.NodeMoving"/> event.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamDiagram.NodeMoving">
            <summary>
            Occurs when a node is about to be moved.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnNodeMoving(Infragistics.Controls.Charts.DiagramNodeMovingEventArgs)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Charts.XamDiagram.NodeMoving"/> event.
            </summary>
            <param name="args">The data for the event.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.NodeMovedEvent">
            <summary>
            Identifies the <see cref="E:Infragistics.Controls.Charts.XamDiagram.NodeMoved"/> event.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamDiagram.NodeMoved">
            <summary>
            Occurs when a node has been moved.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnNodeMoved(Infragistics.Controls.Charts.DiagramNodeMovedEventArgs)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Charts.XamDiagram.NodeMoved"/> event.
            </summary>
            <param name="args">The data for the event.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.ConnectionMovingEvent">
            <summary>
            Identifies the <see cref="E:Infragistics.Controls.Charts.XamDiagram.ConnectionMoving"/> event.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamDiagram.ConnectionMoving">
            <summary>
            Occurs when a connection is about to be moved.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnConnectionMoving(Infragistics.Controls.Charts.DiagramConnectionMovingEventArgs)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Charts.XamDiagram.ConnectionMoving"/> event.
            </summary>
            <param name="args">The data for the event.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.ConnectionMovedEvent">
            <summary>
            Identifies the <see cref="E:Infragistics.Controls.Charts.XamDiagram.ConnectionMoved"/> event.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamDiagram.ConnectionMoved">
            <summary>
            Occurs when a connection has been moved.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnConnectionMoved(Infragistics.Controls.Charts.DiagramConnectionMovedEventArgs)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Charts.XamDiagram.ConnectionMoved"/> event.
            </summary>
            <param name="args">The data for the event.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.NodeResizingEvent">
            <summary>
            Identifies the <see cref="E:Infragistics.Controls.Charts.XamDiagram.NodeResizing"/> event.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamDiagram.NodeResizing">
            <summary>
            Occurs when a node is about to be resized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnNodeResizing(Infragistics.Controls.Charts.DiagramNodeResizingEventArgs)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Charts.XamDiagram.NodeResizing"/> event.
            </summary>
            <param name="args">The data for the event.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.NodeResizedEvent">
            <summary>
            Identifies the <see cref="E:Infragistics.Controls.Charts.XamDiagram.NodeResized"/> event.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamDiagram.NodeResized">
            <summary>
            Occurs when a node has been resized.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnNodeResized(Infragistics.Controls.Charts.DiagramNodeResizedEventArgs)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Charts.XamDiagram.NodeResized"/> event.
            </summary>
            <param name="args">The data for the event.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.ConnectionConnectingEvent">
            <summary>
            Identifies the <see cref="E:Infragistics.Controls.Charts.XamDiagram.ConnectionConnecting"/> event.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamDiagram.ConnectionConnecting">
            <summary>
            Occurs when a connection's start or end is about to be connected to a point or a node.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnConnectionConnecting(Infragistics.Controls.Charts.DiagramConnectionConnectingEventArgs)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Charts.XamDiagram.ConnectionConnecting"/> event.
            </summary>
            <param name="args">The data for the event.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.ConnectionConnectedEvent">
            <summary>
            Identifies the <see cref="E:Infragistics.Controls.Charts.XamDiagram.ConnectionConnected"/> event.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamDiagram.ConnectionConnected">
            <summary>
            Occurs when a connection's start or end has been connected to a point or a node.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnConnectionConnected(Infragistics.Controls.Charts.DiagramConnectionConnectedEventArgs)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Charts.XamDiagram.ConnectionConnected"/> event.
            </summary>
            <param name="args">The data for the event.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.EditModeEnteringEvent">
            <summary>
            Identifies the <see cref="E:Infragistics.Controls.Charts.XamDiagram.EditModeEntering"/> event.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamDiagram.EditModeEntering">
            <summary>
            Occurs when an item is about to enter edit mode.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnEditModeEntering(Infragistics.Controls.Charts.DiagramEditModeEnteringEventArgs)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Charts.XamDiagram.EditModeEntering"/> event.
            </summary>
            <param name="args">The data for the event.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.EditModeEnteredEvent">
            <summary>
            Identifies the <see cref="E:Infragistics.Controls.Charts.XamDiagram.EditModeEntered"/> event.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamDiagram.EditModeEntered">
            <summary>
            Occurs when an item has entered edit mode.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnEditModeEntered(Infragistics.Controls.Charts.DiagramEditModeEnteredEventArgs)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Charts.XamDiagram.EditModeEntered"/> event.
            </summary>
            <param name="args">The data for the event.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.EditModeExitingEvent">
            <summary>
            Identifies the <see cref="E:Infragistics.Controls.Charts.XamDiagram.EditModeExiting"/> event.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamDiagram.EditModeExiting">
            <summary>
            Occurs when an item is about to exit edit mode.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnEditModeExiting(Infragistics.Controls.Charts.DiagramEditModeExitingEventArgs)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Charts.XamDiagram.EditModeExiting"/> event.
            </summary>
            <param name="args">The data for the event.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.EditModeExitedEvent">
            <summary>
            Identifies the <see cref="E:Infragistics.Controls.Charts.XamDiagram.EditModeExited"/> event.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamDiagram.EditModeExited">
            <summary>
            Occurs when an item has exited edit mode.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnEditModeExited(Infragistics.Controls.Charts.DiagramEditModeExitedEventArgs)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Charts.XamDiagram.EditModeExited"/> event.
            </summary>
            <param name="args">The data for the event.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.CommandExecutingEvent">
            <summary>
            Identifies the <see cref="E:Infragistics.Controls.Charts.XamDiagram.CommandExecuting"/> event.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamDiagram.CommandExecuting">
            <summary>
            Occurs when a command is about to be executed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnCommandExecuting(Infragistics.Controls.Charts.DiagramCommandExecutingEventArgs)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Charts.XamDiagram.CommandExecuting"/> event.
            </summary>
            <param name="args">The data for the event.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.CommandExecutedEvent">
            <summary>
            Identifies the <see cref="E:Infragistics.Controls.Charts.XamDiagram.CommandExecuted"/> event.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamDiagram.CommandExecuted">
            <summary>
            Occurs when a command is executed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnCommandExecuted(Infragistics.Controls.Charts.DiagramCommandExecutedEventArgs)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Charts.XamDiagram.CommandExecuted"/> event.
            </summary>
            <param name="args">The data for the event.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.Items">
            <summary>
            Gets a collection of the diagram items.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.CopiedItems">
            <summary>
            Gets the list of all copied items.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.ItemsSourceProperty">
            <summary>
            Identifies the ItemsSource dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.ItemsSource">
            <summary>
            Gets or sets a collection used to generate the items of the diagram.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            ItemsSource property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.ConnectionsSourceProperty">
            <summary>
            Identifies the ConnectionsSource dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.ConnectionsSource">
            <summary>
            Gets or sets a collection used to generate the connections of the diagram.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnConnectionsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            ConnectionsSource property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.NodeDefinitionsProperty">
            <summary>
            Identifies the NodeDefinitions dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.NodeDefinitions">
            <summary>
            Gets or sets a collection with hierarchical node layouts.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnNodeDefinitionsChanged(Infragistics.Controls.Charts.NodeDefinitionCollection,Infragistics.Controls.Charts.NodeDefinitionCollection)">
            <summary>
            NodeDefinitions property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.ConnectionDefinitionsProperty">
            <summary>
            Identifies the  ConnectionDefinitions dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.ConnectionDefinitions">
            <summary>
            Gets or sets a collection with hierarchical connection layouts.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnConnectionDefinitionsChanged(Infragistics.Controls.Charts.ConnectionDefinitionCollection,Infragistics.Controls.Charts.ConnectionDefinitionCollection)">
            <summary>
            ConnectionDefinitions property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.ConnectionPointDefinitionsProperty">
            <summary>
            Identifies the ConnectionPointDefinitions dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnConnectionPointDefinitionsChanged(Infragistics.Controls.Charts.ConnectionPointDefinitionCollection,Infragistics.Controls.Charts.ConnectionPointDefinitionCollection)">
            <summary>
            ConnectionPointDefinitions property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.ConnectionPointDefinitions">
            <summary>
            Gets or sets a collection with graph connection point layouts.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.Layout">
            <summary>
            Gets or sets the layout for the diagram to arrange nodes.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.LayoutProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.XamDiagram.Layout"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.WorldRect">
            <summary>
            Gets the world rect.
            </summary>
            <value>The rect enclosing all diagram items.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.WorldRectProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.XamDiagram.WorldRect"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnWorldRectChanged(System.Windows.Rect,System.Windows.Rect)">
            <summary>
            WorldRect property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.WindowRect">
            <summary>
            Gets or sets the window rect.
            </summary>
            <value>The window rect.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.WindowRectProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.XamDiagram.WindowRect"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnWindowRectChanged(System.Windows.Rect,System.Windows.Rect)">
            <summary>
            WindowRect property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.PreviewRect">
            <summary>
            Gets or sets the preview rect.
            </summary>
            <value>The preview rect.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.PreviewRectProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.XamDiagram.PreviewRect"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnPreviewRectChanged(System.Windows.Rect,System.Windows.Rect)">
            <summary>
            PreviewRect property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.ViewportRect">
            <summary>
            Gets the ViewportRect property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnViewportRectChanged(System.Windows.Rect,System.Windows.Rect)">
            <summary>
            ViewportRect property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.ZoomLevel">
            <summary>
            Gets or sets the zoom level.
            </summary>
            <value>The zoom level. <c>1.0</c> means 100%. That is the items in the diagram will be displayed with their actual size.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.NavigationPane">
            <summary>
            Gets the navigation pane.
            </summary>
            <value>The navigation pane.</value>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.NavigationPaneHorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment of the navigation pane.
            </summary>
            <value>The horizontal alignment of the navigation pane.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.NavigationPaneHorizontalAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.XamDiagram.NavigationPaneHorizontalAlignment"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.NavigationPaneVerticalAlignment">
            <summary>
            Gets or sets the vertical alignment of the navigation pane.
            </summary>
            <value>The vertical alignment of the navigation pane.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.NavigationPaneVerticalAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.XamDiagram.NavigationPaneVerticalAlignment"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.NavigationPaneVisibility">
            <summary>
            Gets or sets the navigation pane visibility.
            </summary>
            <value>The navigation pane visibility.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.NavigationPaneVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.XamDiagram.NavigationPaneVisibility"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.OptionsPaneVisibilityProperty">
            <summary>
            Identifies the OptionsPaneVisibility dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.OptionsPaneVisibility">
            <summary>
            Gets or sets a value indicating whether the options pane is displayed for the selected items.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnOptionsPaneVisibilityChanged(System.Windows.Visibility,System.Windows.Visibility)">
            <summary>
            OptionsPaneVisibility property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.OptionsPanePlacementProperty">
            <summary>
            Identifies the OptionsPanePlacement dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.OptionsPanePlacement">
            <summary>
            Gets or sets the placement of the options pane.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnOptionsPanePlacementChanged(Infragistics.Controls.Charts.DiagramOptionsPanePlacementMode,Infragistics.Controls.Charts.DiagramOptionsPanePlacementMode)">
            <summary>
            OptionsPanePlacement property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.SelectedItems">
            <summary>
            Gets a collection of <see cref="T:Infragistics.Controls.Charts.DiagramItem"/> objects which are currently selected.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.SelectedDataItemsProperty">
            <summary>
            Identifies the SelectedDataItems dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.SelectedDataItems">
            <summary>
            Gets or sets an array of data items associated with the diagram items in the SelectedItems collection.
            </summary>
            <value>An array containing the data items of the selected diagram items or null.</value>
            <remarks>
            <para class="body">This property is exposed as an object array (instead of IEnumerable or IList) so that there should be no confusion about its behavior. 
            When the selection changes a new object array is created (as an atomic operation) from the SelectedItems collection. 
            The <see cref="P:Infragistics.Controls.Charts.DiagramItem.Content"/> of each <see cref="T:Infragistics.Controls.Charts.DiagramItem"/> in that collection is used to popluate the new array.
            To change the diagram items selection an application can set this property (either explicitly or through a binding) to a new array of its data items.</para>
            </remarks>
            <seealso cref="F:Infragistics.Controls.Charts.XamDiagram.SelectedDataItemsProperty"/>
            <seealso cref="P:Infragistics.Controls.Charts.XamDiagram.SelectedItems"/>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnSelectedDataItemsChanged(System.Object[],System.Object[])">
            <summary>
            SelectedDataItems property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.SelectionModeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.XamDiagram.SelectionMode"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.SelectionMode">
            <summary>
            Gets or sets the selection behavior for a <see cref="T:Infragistics.Controls.Charts.XamDiagram"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.DefaultDragInteractionProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.XamDiagram.DefaultDragInteraction"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.DefaultDragInteraction">
            <summary>
            Gets or sets the <see cref="T:Infragistics.Controls.Charts.DiagramDragInteraction"/> which will be applied to the <see cref="T:Infragistics.Controls.Charts.XamDiagram"/>s.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.ToolProperty">
            <summary>
            Identifies the Tool dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.Tool">
            <summary>
            Gets or sets the tool used for interacting with the diagram surface.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.ConnectionPointsDisplayModeProperty">
            <summary>
            Identifies the ConnectionPointsDisplayMode dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.ConnectionPointsDisplayMode">
            <summary>
            Gets or sets a value indicating whether connections points of diagram nodes are displayed.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnConnectionPointsDisplayModeChanged(Infragistics.Controls.Charts.DiagramConnectionPointsDisplayMode,Infragistics.Controls.Charts.DiagramConnectionPointsDisplayMode)">
            <summary>
            ConnectionPointsDisplayMode property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.UndoManagerProperty">
            <summary>
            Identifies the UndoManager dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.UndoManager">
            <summary>
            Gets or sets the undo manager used for keeping undo/redo history for this instance.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnUndoManagerChanged(Infragistics.Undo.UndoManager,Infragistics.Undo.UndoManager)">
            <summary>
            UndoManager property changed handler.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.IsUndoEnabledProperty">
            <summary>
            Identifies the IsUndoEnabled dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.IsUndoEnabled">
            <summary>
            Gets or sets a value indicating whether this instance keeps undo/redo history.
            </summary>
            <remarks>
            Setting this property to false will clear the current undo/redo history.
            </remarks>
            <seealso cref="P:Infragistics.Controls.Charts.XamDiagram.UndoManager"/>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnIsUndoEnabledChanged(System.Boolean,System.Boolean)">
            <summary>
            IsUndoEnabled property changed handler.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.IsDraggingProperty">
            <summary>
            Identifies the IsDragging dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.IsDragging">
            <summary>
            Gets or sets a value indicating whether an item interaction such as move/resize is currently in progress.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.AllowEdit">
            <summary>
            Determines whether or not the items in the <see cref="T:Infragistics.Controls.Charts.XamDiagram"/> can be edited.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.AllowEditProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.XamDiagram.AllowEdit"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnAllowEditChanged(System.Boolean,System.Boolean)">
            <summary>
            AllowEditProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.AllowDelete">
            <summary>
            Determines whether or not the items in the <see cref="T:Infragistics.Controls.Charts.XamDiagram"/> can be deleting.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.AllowDeleteProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.XamDiagram.AllowDelete"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnAllowDeleteChanged(System.Boolean,System.Boolean)">
            <summary>
            AllowDeleteProperty property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.AllowResize">
            <summary>
            Determines whether or not the resizing of the items in the <see cref="T:Infragistics.Controls.Charts.XamDiagram"/> is allowed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.AllowResizeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.XamDiagram.AllowResize"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.EnterKeyBehavior">
            <summary>
            Determines the behavior of the <see cref="T:Infragistics.Controls.Charts.XamDiagram"/> when the user presses the enter key and one its DiagramItems is in edit mode.
            </summary>
            <remarks>If the property is set to <see cref="F:Infragistics.Controls.Charts.EnterKeyBehavior.CommitChanges"/> you can still add new lines using the Shift+Enter combination</remarks>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.EnterKeyBehaviorProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.XamDiagram.EnterKeyBehavior"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.ConnectionLineJumps">
            <summary>
            Determines the style of line jumps between two intersecting connections
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.ConnectionLineJumpsProperty">
            <summary>
            Identifies the <see cref="T:Infragistics.Controls.Charts.ConnectionLineJumps"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.SupportDataErrorInfo">
            <summary>
            Turns on/off IDataErrorInfo Support for the default diagram item editor.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.SupportDataErrorInfoProperty">
            <summary>
            Identifies the <see cref="F:Infragistics.Controls.Charts.XamDiagram.SupportDataErrorInfoProperty"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.IsRenderDirty">
            <summary>
            Gets or sets a value indicating whether a render pass is queued for this instance.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.IsArrangeDirty">
            <summary>
            Gets or sets a value indicating whether an arrange pass is queued for this instance.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.ControlProperty">
            <summary>
            Identifies the Control attached dependency property
            </summary>
            <seealso cref="M:Infragistics.Controls.Charts.XamDiagram.GetControl(System.Windows.DependencyObject)"/>
            <seealso cref="M:Infragistics.Controls.Charts.XamDiagram.SetControl(System.Windows.DependencyObject,Infragistics.Controls.Charts.XamDiagram)"/>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.GetControl(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the attached Control DependencyProperty.
            </summary>
            <param name="d">The object whose value is to be returned</param>
            <seealso cref="F:Infragistics.Controls.Charts.XamDiagram.ControlProperty"/>
            <seealso cref="M:Infragistics.Controls.Charts.XamDiagram.SetControl(System.Windows.DependencyObject,Infragistics.Controls.Charts.XamDiagram)"/>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.SetControl(System.Windows.DependencyObject,Infragistics.Controls.Charts.XamDiagram)">
            <summary>
            Sets the value of the attached Control DependencyProperty.
            </summary>
            <param name="d">The object whose value is to be modified</param>
            <param name="value">The new value</param>
            <seealso cref="F:Infragistics.Controls.Charts.XamDiagram.ControlProperty"/>
            <seealso cref="M:Infragistics.Controls.Charts.XamDiagram.GetControl(System.Windows.DependencyObject)"/>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.ExportVisualData">
            <summary>
            Exports visual data for the diagram's nodes, connections, surface, resize handles, connection points, virtualization and options pane.
            </summary>
            <returns>The DiagramVisualData object which contains all of the visual information.</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.FindDiagramItemsInRect``1(System.Windows.Rect)">
            <summary>
            Finds the diagram items that have <see cref="M:DiagramItem.Bounds"/> intersecting the specified rectangle.
            </summary>
            <typeparam name="T">The type of DiagramItems to look for.</typeparam>
            <param name="rect">The rectangle in which to look for. The coordinates are in <see cref="P:Infragistics.Controls.Charts.XamDiagram.WorldRect"/> coordinates.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.ClearUndoRedoHistory(System.Boolean)">
            <summary>
            Removes all the Undo and Redo history that relates to this XamDiagram.
            </summary>
            <param name="includeRootTransaction">Indicates whether this method should affect the current open RootTransaction on the <see cref="P:Infragistics.Controls.Charts.XamDiagram.UndoManager"/> if there is one.</param>
            <remarks>
            <para class="note"><b>Note:</b> this is equivalent to calling the <see cref="P:Infragistics.Controls.Charts.XamDiagram.UndoManager"/>'s RemoveAll method with a filter that removes only 
            undo units whose Target is this XamDiagram. By default that will be all of the history, however, since the <see cref="P:Infragistics.Controls.Charts.XamDiagram.UndoManager"/> property is settable it is
            possible to share a single instance of an UndoManager with more that one XamDiagram so that there histories are mingled.</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.RefreshLayout">
            <summary>
            Refreshes the arrangement of the nodes according to the applied Layout.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.ViewportToWorld(System.Windows.Point)">
            <summary>
            Converts a point from <see cref="P:Infragistics.Controls.Charts.XamDiagram.ViewportRect"/> coordinates to <see cref="P:Infragistics.Controls.Charts.XamDiagram.WorldRect"/> coordinates.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.WorldToViewport(System.Windows.Rect)">
            <summary>
            Converts a rect from <see cref="P:Infragistics.Controls.Charts.XamDiagram.WorldRect"/> coordinates to <see cref="P:Infragistics.Controls.Charts.XamDiagram.ViewportRect"/> coordinates.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.WorldToViewport(System.Windows.Point)">
            <summary>
            Converts a point from <see cref="P:Infragistics.Controls.Charts.XamDiagram.WorldRect"/> coordinates to <see cref="P:Infragistics.Controls.Charts.XamDiagram.ViewportRect"/> coordinates.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.GetDiagramItemFromDataItem(System.Object)">
            <summary>
            Gets the diagram items associated with specific item in the ItemsSource/ConnectionsSource.
            </summary>
            <param name="dataItem">The object from the underlying items and connections sources</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.GetDiagramItemsFromDataItems(System.Object[])">
            <summary>
            Gets the diagram items associated with specific items in the ItemsSource/ConnectionSource.
            </summary>
            <param name="dataItems">An array of objects from the underlying items and connections sources</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.ArrangeOverride(System.Windows.Size)">
            <summary>
            Called to arrange and size the content of a <see cref="T:System.Windows.Controls.Control" /> object.
            </summary>
            <param name="arrangeBounds">The computed size that is used to arrange the content.</param>
            <returns>
            The size of the control.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> routed event is raised on this element. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data. The event data reports that the left mouse button was pressed.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data. The event data reports that the left mouse button was released.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event is raised on this element. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized" /> event. This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="T:Infragistics.Controls.Charts.XamDiagram"/> to UI Automation.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnItemAdding(Infragistics.Controls.Charts.DiagramItem)">
            <summary>
            Called when an item is about to be added.
            </summary>
            <param name="item">The item to be added.</param>
            <returns><c>true</c> when item is successfully added, otherwise <c>false</c></returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnItemAdded(Infragistics.Controls.Charts.DiagramItem)">
            <summary>
            Called when an item is added.
            </summary>
            <param name="item">The added item.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnItemRemoving(Infragistics.Controls.Charts.DiagramItem)">
            <summary>
            Called when an item is about to be removed.
            </summary>
            <param name="item">The item to be removed.</param>
            <returns><c>true</c> when item is successfully removed, otherwise <c>false</c></returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnItemRemoved(Infragistics.Controls.Charts.DiagramItem)">
            <summary>
            Called when an item is removed.
            </summary>
            <param name="item">The removed item.</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.SelectDiagramItem(Infragistics.Controls.Charts.DiagramItem,System.Boolean)">
            <summary>
            Selects the specified diagram item.
            </summary>
            <param name="diagramItem">The diagram item to select.</param>
            <param name="isSetFromCode">
            if set to <c>true</c> indicates that the selection is being changed from code and not in response to a user action.
            </param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.UnselectDiagramItem(Infragistics.Controls.Charts.DiagramItem)">
            <summary>
            Internal method which will unselect a <see cref="T:Infragistics.Controls.Charts.DiagramItem"/>
            </summary>
            <param name="diagramItem">the diagram item which should be unseleceted</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.ZoomTo100">
            <summary>
            Zooms the diagram to 100%. Same as setting the ZoomLevel to 1.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.ScaleToFit">
            <summary>
            Scale the diagram to fit all its contents in view.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.RenderPreview">
            <summary>
            Render preview content to the NavigationPane.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.MinimumZoomLevel">
            <summary>
            Gets or sets the minimum scale.
            </summary>
            <value>The minimum scale.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.MinimumZoomLevelProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.XamDiagram.MinimumZoomLevel"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnMinimumZoomLevelChanged(System.Double,System.Double)">
            <summary>
            MinimumZoomLevel property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.MaximumZoomLevel">
            <summary>
            Gets or sets the maximum scale.
            </summary>
            <value>The maximum scale.</value>
        </member>
        <member name="F:Infragistics.Controls.Charts.XamDiagram.MaximumZoomLevelProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Charts.XamDiagram.MaximumZoomLevel"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnMaximumZoomLevelChanged(System.Double,System.Double)">
            <summary>
            MaximumZoomLevel property changed handler.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:Infragistics.Controls.Charts.XamDiagram.ZoomLevelDisplayText">
            <summary>
            The text to display in the callout above the zoom level slider.
            </summary>
            <remarks>
            This text is expected to change whenever the zoom level is changed.
            </remarks>
        </member>
        <member name="E:Infragistics.Controls.Charts.XamDiagram.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.XamDiagram.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:PropertyChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.EnterKeyBehavior">
            <summary>
            Determines the behavior of the <see cref="T:Infragistics.Controls.Charts.XamDiagram"/> when the user presses the enter key and one its DiagramItems is in edit mode.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.EnterKeyBehavior.CommitChanges">
            <summary>
            Commits the current text of the diagram item and exits edit mode
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.EnterKeyBehavior.AddNewLineFeed">
            <summary>
            Adds a new line feed to the current text
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.ConnectionLineJumps">
            <summary>
            Determines the style of line jumps between two intersecting connections.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ConnectionLineJumps.None">
            <summary>
            There will be no line jumps.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ConnectionLineJumps.Arc">
            <summary>
             One of the connections will have an arc at the intersection.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ConnectionLineJumps.Gap">
            <summary>
            One of the connections will have a gap at the intersection.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.ConnectionLineJumps.Square">
            <summary>
            One of the connections will have a semi-square at the intersection.
            </summary>
        </member>
    </members>
</doc>
