<?xml version="1.0"?>
<doc>
    <assembly>
        <name>InfragisticsWPF4.Controls.Editors.XamSlider.v19.1</name>
    </assembly>
    <members>
        <member name="T:Infragistics.AutomationPeers.XamSliderBaseAutomationPeer`1">
            <summary>
             Exposes <see cref="T:Infragistics.Controls.Editors.XamSliderBase`1" /> types to UI
            </summary>
            <typeparam name="T">Generic type</typeparam>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamSliderBaseAutomationPeer`1.#ctor(Infragistics.Controls.Editors.XamSliderBase{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.AutomationPeers.XamSliderBaseAutomationPeer`1"/> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamSliderBaseAutomationPeer`1.GetAutomationControlTypeCore">
            <summary>
            Returns the control type for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/>.
            </summary>
            <returns>A value of the enumeration.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamSliderBaseAutomationPeer`1.GetChildrenCore">
            <summary>
            Returns the collection of child elements of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren"/>.
            </summary>
            <returns>
            A list of child <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> elements.
            </returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamSliderBaseAutomationPeer`1.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>
            The name of the owner type that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. See Remarks.
            </returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamSliderBaseAutomationPeer`1.GetNameCore">
            <summary>
            Returns the text label of the <see cref="T:System.Windows.FrameworkElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"/>.
            </summary>
            <returns>
            The text label of the element that is associated with this automation peer.
            </returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamSliderBaseAutomationPeer`1.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>.
            </summary>
            <param name="patternInterface">One of the enumeration values.</param>
            <returns>See Remarks.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamSliderBaseAutomationPeer`1.OwningSliderBase_IsEnabledChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the IsEnabledChanged event of the OwningSliderBase property as <see cref="T:Infragistics.Controls.Editors.XamSliderBase`1"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamSliderBaseAutomationPeer`1.OwningSliderBase_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles the PropertyChanged event of the OwningSliderBase property as <see cref="T:Infragistics.Controls.Editors.XamSliderBase`1"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamSliderBaseAutomationPeer`1.OwningSliderBase_ThumbValueChanged(System.Object,Infragistics.Controls.Editors.ThumbValueChangedEventArgs{`0})">
            <summary>
            Handles the ThumbValueChanged event of the OwningSliderBase property as <see cref="T:Infragistics.Controls.Editors.XamSliderBase`1"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Infragistics.Controls.Editors.ThumbValueChangedEventArgs`1"/> instance containing the event data.</param>
        </member>
        <member name="P:Infragistics.AutomationPeers.XamSliderBaseAutomationPeer`1.CanSelectMultiple">
            <summary>
            Gets a value indicating whether the UI automation provider allows more than one child element to be selected concurrently.
            </summary>
            <value></value>
            <returns>true if multiple selection is allowed; otherwise, false.</returns>
        </member>
        <member name="P:Infragistics.AutomationPeers.XamSliderBaseAutomationPeer`1.IsSelectionRequired">
            <summary>
            Gets a value indicating whether the UI automation provider requires at least one child element to be selected.
            </summary>
            <value></value>
            <returns>true if selection is required; otherwise, false.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamSliderBaseAutomationPeer`1.GetSelection">
            <summary>
            Retrieves a UI automation provider for each child element that is selected.
            </summary>
            <returns>An array of UI automation providers.</returns>
        </member>
        <member name="P:Infragistics.AutomationPeers.XamSliderBaseAutomationPeer`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the value of a control is read-only.
            </summary>
            <value></value>
            <returns>true if the value is read-only; false if it can be modified. </returns>
        </member>
        <member name="P:Infragistics.AutomationPeers.XamSliderBaseAutomationPeer`1.LargeChange">
            <summary>
            Gets the value that is added to or subtracted from the <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value"/> property when a large change is made, such as with the PAGE DOWN key.
            </summary>
            <value></value>
            <returns>The large-change value that is supported by the control, or null if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange"/>. </returns>
        </member>
        <member name="P:Infragistics.AutomationPeers.XamSliderBaseAutomationPeer`1.Maximum">
            <summary>
            Gets the maximum range value that is supported by the control.
            </summary>
            <value></value>
            <returns>The maximum value that is supported by the control, or null if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum"/>. </returns>
        </member>
        <member name="P:Infragistics.AutomationPeers.XamSliderBaseAutomationPeer`1.Minimum">
            <summary>
            Gets the minimum range value that is supported by the control.
            </summary>
            <value></value>
            <returns>The minimum value that is supported by the control, or null if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum"/>. </returns>
        </member>
        <member name="P:Infragistics.AutomationPeers.XamSliderBaseAutomationPeer`1.SmallChange">
            <summary>
            Gets the value that is added to or subtracted from the <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value"/> property when a small change is made, such as with an arrow key.
            </summary>
            <value></value>
            <returns>The small-change value supported by the control, or null if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange"/>. </returns>
        </member>
        <member name="P:Infragistics.AutomationPeers.XamSliderBaseAutomationPeer`1.Value">
            <summary>
            Gets the value of the control.
            </summary>
            <value></value>
            <returns>The value of the control, or null if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value"/>.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamSliderBaseAutomationPeer`1.SetValue(System.Double)">
            <summary>
            Sets the value of the control.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="T:Infragistics.AutomationPeers.XamSliderThumbAutomationPeer`1">
            <summary>
            Initilizes a new nstance of <see cref="T:Infragistics.Controls.Editors.XamSliderThumb`1" /> types to UI
            </summary>
            <typeparam name="T">Generic type</typeparam>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamSliderThumbAutomationPeer`1.#ctor(Infragistics.Controls.Editors.XamSliderThumb{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.AutomationPeers.XamSliderThumbAutomationPeer`1"/> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamSliderThumbAutomationPeer`1.GetAutomationControlTypeCore">
            <summary>
            Returns the control type for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/>.
            </summary>
            <returns>A value of the enumeration.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamSliderThumbAutomationPeer`1.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>
            The name of the owner type that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. See Remarks.
            </returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamSliderThumbAutomationPeer`1.GetNameCore">
            <summary>
            Returns the text label of the <see cref="T:System.Windows.FrameworkElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"/>.
            </summary>
            <returns>
            The text label of the element that is associated with this automation peer.
            </returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamSliderThumbAutomationPeer`1.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>.
            </summary>
            <param name="patternInterface">One of the enumeration values.</param>
            <returns>See Remarks.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamSliderThumbAutomationPeer`1.RaiseIsSelectedPropertyChangedEvent(System.Boolean,System.Boolean)">
            <summary>
            Raises the IsSelectedPropertyChangedEvent.
            </summary>
            <param name="oldValue">if set to <c>true</c> The old value.</param>
            <param name="newValue">if set to <c>true</c> The new value.</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamSliderThumbAutomationPeer`1.OwningSliderThumb_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles the PropertyChanged event of the OwningSliderThumb property as <see cref="T:Infragistics.Controls.Editors.XamSliderBase`1"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamSliderThumbAutomationPeer`1.OwningSliderThumb_ValueChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{`0})">
            <summary>
            Handles the ValueChanged event of the OwningSliderThumb property as <see cref="T:Infragistics.Controls.Editors.XamSliderThumb`1"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1"/> instance containing the event data.</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamSliderThumbAutomationPeer`1.AddToSelection">
            <summary>
            Adds the current element to the collection of selected items.
            </summary>
        </member>
        <member name="P:Infragistics.AutomationPeers.XamSliderThumbAutomationPeer`1.IsSelected">
            <summary>
            Gets a value indicating whether an item is selected.
            </summary>
            <value></value>
            <returns>true if the element is selected; otherwise, false.</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamSliderThumbAutomationPeer`1.RemoveFromSelection">
            <summary>
            Removes the current element from the collection of selected items.
            </summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamSliderThumbAutomationPeer`1.Select">
            <summary>
            Clears any existing selection and then selects the current element.
            </summary>
        </member>
        <member name="P:Infragistics.AutomationPeers.XamSliderThumbAutomationPeer`1.SelectionContainer">
            <summary>
            Gets the UI automation provider that implements <see cref="T:System.Windows.Automation.Provider.ISelectionProvider"/> and acts as the container for the calling object.
            </summary>
            <value></value>
            <returns>The UI automation provider.</returns>
        </member>
        <member name="P:Infragistics.AutomationPeers.XamSliderThumbAutomationPeer`1.IsReadOnly">
            <summary>
            Gets a value that indicates whether the value of a control is read-only.
            </summary>
            <value></value>
            <returns>true if the value is read-only; false if it can be modified. </returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamSliderThumbAutomationPeer`1.SetValue(System.String)">
            <summary>
            Sets the value of slider.
            </summary>
            <param name="value">The value to set.</param>
        </member>
        <member name="P:Infragistics.AutomationPeers.XamSliderThumbAutomationPeer`1.Value">
            <summary>
            Gets the value of the XamSlider.
            </summary>
            <value></value>
            <returns>The value of the control.</returns>
        </member>
        <member name="T:Infragistics.DateTimeConverter">
            <summary>
            TypeConverter class for DateTime objects.
            </summary>
        </member>
        <member name="M:Infragistics.DateTimeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="sourceType">A Type that represents the type you want to convert from. </param>
            <returns>True if this converter can perform the conversion; otherwise, False.</returns>
        </member>
        <member name="M:Infragistics.DateTimeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information. 
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="culture">The CultureInfo to use as the current culture.</param>
            <param name="value">The Object to convert.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="M:Infragistics.DateTimeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information. 
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="culture">A CultureInfo. If a null reference is passed, the current culture is assumed.</param>
            <param name="value">The Object to convert.</param>
            <param name="destinationType">The Type to convert the value parameter to.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="T:Infragistics.DateConverter">
            <summary>
            Converts DateTame to string ands string to DateTime
            </summary>
        </member>
        <member name="M:Infragistics.DateConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType">The <see cref="T:System.Type"/> of data expected by the target dependency property.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="culture">The culture of the conversion.</param>
            <returns>
            The value to be passed to the target dependency property.
            </returns>
        </member>
        <member name="M:Infragistics.DateConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the target data before passing it to the source object.  This method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> bindings.
            </summary>
            <param name="value">The target data being passed to the source.</param>
            <param name="targetType">The <see cref="T:System.Type"/> of data expected by the source object.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="culture">The culture of the conversion.</param>
            <returns>
            The value to be passed to the source object.
            </returns>
        </member>
        <member name="T:Infragistics.StringToDateConverter">
            <summary>
            Converts DateTame to string ands string to DateTime
            </summary>
        </member>
        <member name="M:Infragistics.StringToDateConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the source data before passing it to the target for display in the UI.
            </summary>
            <param name="value">The source data being passed to the target.</param>
            <param name="targetType">The <see cref="T:System.Type"/> of data expected by the target dependency property.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="culture">The culture of the conversion.</param>
            <returns>
            The value to be passed to the target dependency property.
            </returns>
        </member>
        <member name="M:Infragistics.StringToDateConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Modifies the target data before passing it to the source object.  This method is called only in <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> bindings.
            </summary>
            <param name="value">The target data being passed to the source.</param>
            <param name="targetType">The <see cref="T:System.Type"/> of data expected by the source object.</param>
            <param name="parameter">An optional parameter to be used in the converter logic.</param>
            <param name="culture">The culture of the conversion.</param>
            <returns>
            The value to be passed to the source object.
            </returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.DateTimeSliderTickMarks">
            <summary>
             class that provides SliderTickMarks from DateType type. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.DateTimeSliderTickMarks.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Editors.DateTimeSliderTickMarks"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.DateTimeSliderTickMarks.FrequencyTypeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.DateTimeSliderTickMarks.FrequencyType"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.DateTimeSliderTickMarks.FrequencyType">
            <summary>
            Gets or sets the type of the 
            <see cref="P:Infragistics.Controls.Editors.DateTimeSliderTickMarks.FrequencyType"/>
            from <see cref="T:Infragistics.Controls.Editors.FrequencyType"/> 
            enum type.
            </summary>
            <value>The type of the frequency.</value>
        </member>
        <member name="M:Infragistics.Controls.Editors.DateTimeSliderTickMarks.GetFrequencyValue">
            <summary>
            Gets the frequency value in double.
            </summary>
            <returns>value in double</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.DateTimeSliderTickMarks.GenerateTickMarksValues">
            <summary>
            Generates the values of the  tick marks, 
            based on values of the slider that is owner of the 
            <see cref="T:Infragistics.Controls.Editors.SliderTickMarks`1"/> and values 
            of the Frequency, NumberOfTickMarks and UseFrequency
            properties
            </summary>
            <returns>ObservableCollection with values of the tick marks</returns>
        </member>
        <member name="P:Infragistics.Controls.Editors.DateTimeSliderTickMarks.TickMarksValues">
            <summary>
            Gets the collection of Tick Mark Values of Type DateTime that are used to set the slider.
            </summary>
            <value>The tick marks.</value>
        </member>
        <member name="M:Infragistics.Controls.Editors.DateTimeSliderTickMarks.GetStepSize(System.Int64)">
            <summary>
            Takes a look at the available visual space and determines the max number of tick marks to display, and returns the number of tick marks to skip between displayed tick marks
            </summary>
            <param name="countTickMarks">The number of Tick Marks we calculated</param>
            <returns>The number of tick marks to skip between displayed tick marks</returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.FrequencyType">
            <summary>
            An Enum that describes the type of the frequency for DateTimeSLiderTickMarks. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.FrequencyType.Seconds">
            <summary>
            Value of the frequency will be in seconds
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.FrequencyType.Minutes">
            <summary>
            Value of the frequency will be in minutes
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.FrequencyType.Hours">
            <summary>
            Value of the frequency will be in hours
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.FrequencyType.Days">
            <summary>
            Value of the frequency will be in days
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.FrequencyType.Months">
            <summary>
            Value of the frequency will be in months
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.FrequencyType.Years">
            <summary>
            Value of the frequency will be in years
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.SliderTrackClickAction">
            <summary>
            An Enum that describes the behavior after click on the slider track. 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.SliderTrackClickAction.None">
            <summary>
            There is no action after click on the slider track
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.SliderTrackClickAction.LargeChange">
            <summary>
            The value of the ActiveThumb will be changed with the LargeChange value, 
            depending of the side where is click relative to the thumb position
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.SliderTrackClickAction.MoveToPoint">
            <summary>
            ActiveThumb will be moved to the clicked position. 
            It value will be changed, relative to clicked position 
            and slider size
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.SliderThumbInteractionMode">
            <summary>
            An Enum that describes the interaction between sliders 
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.SliderThumbInteractionMode.Lock">
            <summary>
            When the locked thumb is not active and active thumb interacts with 
            the locked thumb it is not possible to pass through this thumb
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.SliderThumbInteractionMode.Push">
            <summary>
            When the thumb in push state is not active and active thumb interacts 
            with it the position of the thumb in push mode will be changed to position 
            of the active thumb
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.SliderThumbInteractionMode.Free">
            <summary>
            When the thumb in free state is not active and active thumb interacts 
            with it there is no special interaction between both thumbs.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.XamSliderBaseCommand">
            <summary>
            An Enum that describes the type of the XamSliderBaseCommandBase command
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSliderBaseCommand.SmallDecrease">
            <summary>
            Enum value for SmallDecreaseCommand
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSliderBaseCommand.SmallIncrease">
            <summary>
            Enum value for SmallIncreaseCommand
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSliderBaseCommand.LargeDecrease">
            <summary>
            Enum value for LargeDecreaseCommand
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSliderBaseCommand.LargeIncrease">
            <summary>
            Enum value for LargeIncreaseCommand
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.ThumbValueChangedEventArgs`1">
            <summary>
            A class listing the information needed during the <see cref="E:Infragistics.Controls.Editors.XamSliderBase`1.ThumbValueChanged"/> event
            </summary>
            <typeparam name="T">Generic type</typeparam>
        </member>
        <member name="P:Infragistics.Controls.Editors.ThumbValueChangedEventArgs`1.OldValue">
            <summary>
            Gets the old value of the thumb 
            of the thumb
            </summary>
            <value>The old value.</value>
        </member>
        <member name="P:Infragistics.Controls.Editors.ThumbValueChangedEventArgs`1.NewValue">
            <summary>
            Gets the new value of the thumb.
            </summary>
            <value>The new value.</value>
        </member>
        <member name="P:Infragistics.Controls.Editors.ThumbValueChangedEventArgs`1.Thumb">
            <summary>
            Gets the thumb which property is changed.
            </summary>
            <value>The thumb item.</value>
        </member>
        <member name="T:Infragistics.Controls.Editors.TrackClickEventArgs`1">
            <summary>
            A class listing the information needed during the <see cref="E:Infragistics.Controls.Editors.XamSliderBase`1.TrackClick"/> event
            </summary>
            <typeparam name="T">Generic type</typeparam>
        </member>
        <member name="P:Infragistics.Controls.Editors.TrackClickEventArgs`1.Value">
            <summary>
            Gets the value where track is ckicked; 
            of the thumb
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Infragistics.Controls.Editors.TrackFillChangedEventArgs`1">
            <summary>
            A class listing the information needed during the <see cref="E:Infragistics.Controls.Editors.XamRangeSlider`1.TrackFillDragCompleted"/> event
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Infragistics.Controls.Editors.TrackFillChangedEventArgs`1.LesserThumb">
            <summary>
            The Thumb with the lesser value on the TrackFill Edge
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.TrackFillChangedEventArgs`1.GreaterThumb">
            <summary>
            The Thumb with the greater value on the TrackFill Edge
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.SliderTickMarks">
            <summary>
            A class that provides SliderTickMarks from double type. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.SliderTickMarks.TickMarksValues">
            <summary>
            Gets the collection of Tick Mark Values of Type double that are used to set the slider.
            </summary>
            <value>The tick marks.</value>
        </member>
        <member name="T:Infragistics.Controls.Editors.SliderTickMarksBase">
            <summary>
            A base class that implements tick marks maintenance
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.SliderTickMarksBase.HorizontalTickMarksTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.SliderTickMarksBase.HorizontalTickMarksTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.SliderTickMarksBase.HorizontalTickMarksTemplate">
            <summary>
            Gets or sets the DataTemplate for horizontal tick marks.
            </summary>
            <value>The horizontal tick marks template.</value>
        </member>
        <member name="F:Infragistics.Controls.Editors.SliderTickMarksBase.IncludeSliderEndsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.SliderTickMarksBase.IncludeSliderEnds"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.SliderTickMarksBase.IncludeSliderEnds">
            <summary>
            Gets or sets a value indicating whether include slider ends tickmarks
            </summary>
            <value>
            <c>true</c> There are tickmarks of the ends of the slider; otherwise, <c>false</c> There are not tickmarks of the ends of the slider.
            </value>
        </member>
        <member name="F:Infragistics.Controls.Editors.SliderTickMarksBase.NumberOfTickMarksProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.SliderTickMarksBase.NumberOfTickMarks"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.SliderTickMarksBase.NumberOfTickMarks">
            <summary>
            Gets or sets the number of tick marks for 
            specified <see cref="T:Infragistics.Controls.Editors.SliderTickMarksBase"/> instance.
            </summary>
            <value>The number of tick marks.</value>
        </member>
        <member name="F:Infragistics.Controls.Editors.SliderTickMarksBase.UseFrequencyProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.SliderTickMarksBase.UseFrequency"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.SliderTickMarksBase.UseFrequency">
            <summary>
            Gets or sets a value indicating whether arranging the
            tick marks will be based of its frequency.
            </summary>
            <value><c>true</c> if frequency is used to generate tickmarks; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Infragistics.Controls.Editors.SliderTickMarksBase.VerticalTickMarksTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.SliderTickMarksBase.VerticalTickMarksTemplate"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.SliderTickMarksBase.VerticalTickMarksTemplate">
            <summary>
            Gets or sets the DataTemplate for the tick marks when 
            orientation of the slider is vertical.
            </summary>
            <value>The vertical tick marks template.</value>
        </member>
        <member name="M:Infragistics.Controls.Editors.SliderTickMarksBase.OnChangeSliderTickMarks">
            <summary>
            Called when SliderTickMarks is changed and there is need to 
            update tickmarks inside the TickMarksPanel.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.SliderTickMarks`1">
            <summary>
            A generic class that implements tick marks maintenance
            </summary>
            <typeparam name="T">Generic type</typeparam>
        </member>
        <member name="P:Infragistics.Controls.Editors.SliderTickMarks`1.Owner">
            <summary>
            Gets or sets the <see cref="T:Infragistics.Controls.Editors.XamSliderBase`1"/> owner.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="F:Infragistics.Controls.Editors.SliderTickMarks`1.TickMarksFrequencyProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.SliderTickMarks`1.TickMarksFrequency"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.SliderTickMarks`1.TickMarksFrequency">
            <summary>
            Gets or sets the tick marks frequency - 
            equal double value that is the difference
            between two adjacent tick marks.
            </summary>
            <value>The tick marks frequency.</value>
        </member>
        <member name="P:Infragistics.Controls.Editors.SliderTickMarks`1.TickMarksValues">
             <summary>
            Gets the collection of Tick Mark Values of Type T that are used to set the slider.
             </summary>
             <value>The tick marks.</value>
        </member>
        <member name="M:Infragistics.Controls.Editors.SliderTickMarks`1.OnChangeSliderTickMarks">
            <summary>
            Called when SliderTickMarks is changed and there is need to
            update tickmarks inside the TickMarksPanel.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.SliderTickMarks`1.GetFrequencyValue">
            <summary>
            Gets the frequency value in double.
            </summary>
            <returns>value in double</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.SliderTickMarks`1.GenerateTickMarksValues">
            <summary>
            Generates the values of the  tick marks, 
            based on values of the slider that is owner of the 
            <see cref="T:Infragistics.Controls.Editors.SliderTickMarks`1"/> and values 
            of the Frequency, NumberOfTickMarks and UseFrequency
            properties
            </summary>
            <returns>ObservableCollection with values of the tick marks</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.SliderTickMarks`1.OnResolveTickMarks">
            <summary>
            Returns collection from resolved tick marks based on 
            TickMarks , Frequency, NumberOfTickMarks and UseFrequency 
            properties
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.ThumbComparer`1">
            <summary>
            Custom generic comparer class, used to compare 
            generic thumbs
            </summary>
            <typeparam name="T">Generic type</typeparam>
        </member>
        <member name="M:Infragistics.Controls.Editors.ThumbComparer`1.Compare(Infragistics.Controls.Editors.XamSliderThumb{`0},Infragistics.Controls.Editors.XamSliderThumb{`0})">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            Value Condition Less than zero<paramref name="x"/> is less than <paramref name="y"/>.Zero<paramref name="x"/> equals <paramref name="y"/>.Greater than zero<paramref name="x"/> is greater than <paramref name="y"/>.
            </returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.TickMarksPanel`1">
            <summary>
            A generic Panel, used to arrange the <see cref="T:Infragistics.Controls.Editors.SliderTickMarks`1"/>.
            </summary>
            <typeparam name="T">Generic type</typeparam>
        </member>
        <member name="M:Infragistics.Controls.Editors.TickMarksPanel`1.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Measure pass of the layout. Classes can override this method to define their own Measure pass behavior.
            </summary>
            <param name="availableSize">The available size that this object can give to child objects. Infinity can be specified as a value to indicate that the object will size to whatever content is available.</param>
            <returns>
            The size that this object determines it needs during layout, based on its calculations of child object allotted sizes.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.TickMarksPanel`1.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Arrange pass of the layout. Classes can override this method to define their own Arrange pass behavior.
            </summary>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <returns>
            The actual size used once the element is arranged.
            </returns>
        </member>
        <member name="P:Infragistics.Controls.Editors.TickMarksPanel`1.Owner">
            <summary>
            Gets or sets the <see cref="T:Infragistics.Controls.Editors.XamSliderBase`1"/> owner.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="M:Infragistics.Controls.Editors.TickMarksPanel`1.GetStepSize(System.Int64)">
            <summary>
            Takes a look at the available visual space and determines the max number of tick marks to display, and returns the number of tick marks to skip between displayed tick marks
            </summary>
            <param name="countTickMarks">The number of Tick Marks we calculated</param>
            <returns>The number of tick marks to skip between displayed tick marks</returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.TrackFill">
            <summary>
            A control that provides track fill behavior. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.TrackFill.#cctor">
            <summary>
            Initializes the <see cref="T:Infragistics.Controls.Editors.Primitives.TrackFill"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.TrackFill.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Editors.Primitives.TrackFill"/> class.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.LargeDecreaseCommand">
            <summary>
            A <see cref="T:Infragistics.CommandBase"/> object that will decrease decrease its 
            ActiveThumb.Value property with LargeChange value. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.LargeDecreaseCommand.ExecuteCommand(Infragistics.Controls.Editors.XamSliderBase)">
            <summary>
            Applies the decrease of the <see cref="T:Infragistics.Controls.Editors.XamSliderBase"/>  ActiveThumb.Value property with 
            LargeChange value
            </summary>
            <param name="slider">The <see cref="T:Infragistics.Controls.Editors.XamSliderBase"/> object.</param>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.LargeIncreaseCommand">
            <summary>
            A <see cref="T:Infragistics.CommandBase"/> object that will increase decrease its 
            ActiveThumb.Value property  with LargeCjhange value. 
            </summary> 
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.LargeIncreaseCommand.ExecuteCommand(Infragistics.Controls.Editors.XamSliderBase)">
            <summary>
            Applies the increase of the <see cref="T:Infragistics.Controls.Editors.XamSliderBase"/>  ActiveThumb.Value property with 
             LargeChange value
            </summary>
            <param name="slider">The <see cref="T:Infragistics.Controls.Editors.XamSliderBase"/> object.</param>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.SmallDecreaseCommand">
            <summary>
            A <see cref="T:Infragistics.CommandBase"/> object that will decrease its 
            ActiveThumb.Value property with SmallChange value. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.SmallDecreaseCommand.ExecuteCommand(Infragistics.Controls.Editors.XamSliderBase)">
            <summary>
            Applies the decrease of the <see cref="T:Infragistics.Controls.Editors.XamSliderBase"/>  ActiveThumb.Value property with 
            SmallChange value
            </summary>
            <param name="slider">The <see cref="T:Infragistics.Controls.Editors.XamSliderBase"/> object.</param>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.SmallIncreaseCommand">
            <summary>
            A <see cref="T:Infragistics.CommandBase"/> object that will increase decrease its 
            ActiveThumb.Value property with SmallChange value. 
            </summary> 
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.SmallIncreaseCommand.ExecuteCommand(Infragistics.Controls.Editors.XamSliderBase)">
            <summary>
            Applies the increase of the <see cref="T:Infragistics.Controls.Editors.XamSliderBase"/>  ActiveThumb.Value property with 
             SmallChange value
            </summary>
            <param name="slider">The <see cref="T:Infragistics.Controls.Editors.XamSliderBase"/> object.</param>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.XamSliderBaseCommandBase">
            <summary>
            Base class for all commands that deal with a <see cref="T:Infragistics.Controls.Editors.XamSliderBase"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.XamSliderBaseCommandBase.CanExecute(System.Object)">
            <summary>
            Reports if the command can be executed on the object inputted.
            </summary>
            <param name="parameter">The object that the command will be executed against.</param>
            <returns>True if the command is executable.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.XamSliderBaseCommandBase.Execute(System.Object)">
            <summary>
            Runs the command with the given parameter.
            </summary>
            <param name="parameter">The <see cref="T:Infragistics.Controls.Editors.XamSliderBase"/> object that will be executed against.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.XamSliderBaseCommandBase.ExecuteCommand(Infragistics.Controls.Editors.XamSliderBase)">
            <summary>
            Executes the specific command on the specified <see cref="T:Infragistics.Controls.Editors.XamSliderBase"/>
            </summary>
            <param name="slider">The slider for which the command will be executed.</param>
        </member>
        <member name="T:Infragistics.Controls.Editors.XamDateTimeRangeSlider">
            <summary>
            A control that provides XamRangeSlider from DateTime type.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamDateTimeRangeSlider.#cctor">
            <summary>
            Static constructor for the <see cref="T:Infragistics.Controls.Editors.XamDateTimeRangeSlider"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamDateTimeRangeSlider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Editors.XamDateTimeRangeSlider"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamDateTimeRangeSlider.DoubleToValue(System.Double)">
            <summary>
            Doubles to value.
            </summary>
            <param name="value">The value.</param>
            <returns>Value from generic type</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamDateTimeRangeSlider.GetDelta">
            <summary>
            Gets the delta, used to coerse the min max values.
            </summary>
            <returns>delta as double</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamDateTimeRangeSlider.GetLargeChangeValue">
            <summary>
            Gets the LargeChange value in double.
            </summary>
            <returns>value in double</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamDateTimeRangeSlider.GetLargeChangeValue(System.Double,System.Boolean)">
            <summary>
            Gets the LargeChange value in double, based off of a given starting point (but not including it, used for DateTime).
            </summary>
            <param name="baseValue">The starting point to add the large value to.</param>
            <param name="isIncreasing">Indicated whether the change is positive or negative.</param>
            <returns>value in double based of the starting point (but not including it, used for DateTime)</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamDateTimeRangeSlider.GetParameter(Infragistics.Controls.CommandSource)">
            <summary>
            Gets the parameter - control that
            can execute the command.
            </summary>
            <param name="source">The command source.</param>
            <returns>The object that can execute the command</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamDateTimeRangeSlider.GetSmallChangeValue">
            <summary>
            Gets the SmallChange value in double.
            </summary>
            <returns>value in double</returns>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamDateTimeRangeSlider.LargeChangeTypeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamDateTimeRangeSlider.LargeChangeType"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamDateTimeRangeSlider.LargeChangeType">
            <summary>
            Gets or sets the type of the
            <see cref="P:Infragistics.Controls.Editors.XamDateTimeRangeSlider.LargeChangeType"/>
            from <see cref="T:Infragistics.Controls.Editors.FrequencyType"/>
            enum type.
            </summary>
            <value>The type of the LargeChange.</value>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamDateTimeRangeSlider.MaxValue">
            <summary>
            Gets or sets the maximum allowable value for this slider's range.
            </summary>
            <value>The max value.</value>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamDateTimeRangeSlider.MinValue">
            <summary>
            Gets or sets the minimum allowable value for this slider's range.
            </summary>
            <value>The min value.</value>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamDateTimeRangeSlider.SmallChangeTypeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamDateTimeRangeSlider.SmallChangeType"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamDateTimeRangeSlider.SmallChangeType">
            <summary>
            Gets or sets the type of the
            <see cref="P:Infragistics.Controls.Editors.XamDateTimeRangeSlider.SmallChangeType"/>
            from <see cref="T:Infragistics.Controls.Editors.FrequencyType"/>
            enum type.
            </summary>
            <value>The type of the LargeChange.</value>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamDateTimeRangeSlider.SupportsCommand(System.Windows.Input.ICommand)">
            <summary>
            Supportses the command.
            </summary>
            <param name="command">The command.</param>
            <returns>the command as base command class</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamDateTimeRangeSlider.ValueToDouble(System.DateTime)">
            <summary>
            Converts value from specific generic type to double.
            </summary>
            <param name="value">The value.</param>
            <returns>double value</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamDateTimeRangeSlider.ProcessChanges(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Change the value of the active thumb with specified LargeChange or SmallChange value.
            </summary>
            <param name="isIncrease">if set to <c>true</c> value is increased.</param>
            <param name="isLargeChange">if set to <c>true</c> LargeChange is used.</param>
            <param name="forceMoveOneTick">if set to <c>true</c> and Snap to Tick is True, the thumb will move to the next tick mark regardless of change size.</param>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamDateTimeRangeSlider.TickMarks">
            <summary>
            Gets the collection of tick marks.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.XamDateTimeSlider">
            <summary>
            A control that provides simple slider from DateTime type.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamDateTimeSlider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Editors.XamDateTimeSlider"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamDateTimeSlider.#cctor">
            <summary>
            Static constructor for the <see cref="T:Infragistics.Controls.Editors.XamDateTimeSlider"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamDateTimeSlider.DoubleToValue(System.Double)">
            <summary>
            Doubles to value.
            </summary>
            <param name="value">The value.</param>
            <returns>Value from DateTime type</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamDateTimeSlider.GetDelta">
            <summary>
            Gets the delta, used to coerse the min max values.
            </summary>
            <returns>delta as double</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamDateTimeSlider.GetLargeChangeValue">
            <summary>
            Gets the LargeChange value in double.
            </summary>
            <returns>value in double</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamDateTimeSlider.GetLargeChangeValue(System.Double,System.Boolean)">
            <summary>
            Gets the LargeChange value in double, based off of a given starting point (but not including it, used for DateTime).
            </summary>
            <param name="baseValue">The starting point to add the large value to.</param>
            <param name="isIncreasing">Indicated whether the change is positive or negative.</param>
            <returns>value in double based of the starting point (but not including it, used for DateTime)</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamDateTimeSlider.GetParameter(Infragistics.Controls.CommandSource)">
            <summary>
            Gets the parameter - control that
            can execute the command.
            </summary>
            <param name="source">The command source.</param>
            <returns>The object that can execute the command</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamDateTimeSlider.GetSmallChangeValue">
            <summary>
            Gets the SmallChange value in double.
            </summary>
            <returns>value in double</returns>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamDateTimeSlider.MaxValue">
            <summary>
            Gets or sets the maximum allowable value for this slider's range.
            </summary>
            <value>The max value.</value>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamDateTimeSlider.MinValue">
            <summary>
            Gets or sets the minimum allowable value for this slider's range.
            </summary>
            <value>The min value.</value>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamDateTimeSlider.SupportsCommand(System.Windows.Input.ICommand)">
            <summary>
            Supportses the command.
            </summary>
            <param name="command">The command.</param>
            <returns>the command as base command class</returns>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamDateTimeSlider.Value">
            <summary>
            Gets or sets the value.
            It is the current value of the ActiveThumb , respectively
            Thumb of the simple slider
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamDateTimeSlider.ValueToDouble(System.DateTime)">
            <summary>
            Converts value from specific DateTime type to double.
            </summary>
            <param name="value">The value.</param>
            <returns>double value</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamDateTimeSlider.ProcessChanges(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Change the value of the active thumb with specified LargeChange or SmallChange value.
            </summary>
            <param name="isIncrease">if set to <c>true</c> value is increased.</param>
            <param name="isLargeChange">if set to <c>true</c> LargeChange is used.</param>
            <param name="forceMoveOneTick">if set to <c>true</c> and Snap to Tick is True, the thumb will move to the next tick mark regardless of change size.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamDateTimeSlider.OnThumbChanged(Infragistics.Controls.Editors.XamSliderThumb{System.DateTime})">
            <summary>
            Called when the value of Thumb property is changed.
            </summary>
            <param name="thumb">The thumb.</param>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamDateTimeSlider.TickMarks">
            <summary>
            Gets the collection of tick marks.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamDateTimeSlider.LargeChangeTypeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamDateTimeSlider.LargeChangeType"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamDateTimeSlider.LargeChangeType">
            <summary>
            Gets or sets the type of the
            <see cref="P:Infragistics.Controls.Editors.XamDateTimeSlider.LargeChangeType"/>
            from <see cref="T:Infragistics.Controls.Editors.FrequencyType"/>
            enum type.
            </summary>
            <value>The type of the LargeChange.</value>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamDateTimeSlider.SmallChangeTypeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamDateTimeSlider.SmallChangeType"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamDateTimeSlider.SmallChangeType">
            <summary>
            Gets or sets the type of the
            <see cref="P:Infragistics.Controls.Editors.XamDateTimeSlider.SmallChangeType"/>
            from <see cref="T:Infragistics.Controls.Editors.FrequencyType"/>
            enum type.
            </summary>
            <value>The type of the LargeChange.</value>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamDateTimeSlider.CreateChangeValue(System.DateTime,System.Boolean,System.Double,Infragistics.Controls.Editors.FrequencyType)">
            <summary>
            Takes in a given set of parameters and coerces out the appropriate date time.  This function is sensitive to gracefully touching DateTime Min and Max
            </summary>
            <param name="dateTime">The starting DateTime</param>
            <param name="isIncreasing">Whether or not the value is increasing</param>
            <param name="change">The amount of the change</param>
            <param name="frequencyType">The change type ie: Days, Hours, ...</param>
            <returns>The new DateTime adjusted to the value</returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.XamNumericRangeSlider">
            <summary>
            A control that provides XamRangeSlider from double type.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamNumericRangeSlider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Editors.XamNumericRangeSlider"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamNumericRangeSlider.#cctor">
            <summary>
            Static constructor for the <see cref="T:Infragistics.Controls.Editors.XamNumericRangeSlider"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamNumericRangeSlider.MaxValue">
            <summary>
            Gets or sets the maximum allowable value for this slider's range.
            </summary>
            <value>The max value.</value>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamNumericRangeSlider.MinValue">
            <summary>
            Gets or sets the minimum allowable value for this slider's range.
            </summary>
            <value>The min value.</value>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamNumericRangeSlider.DoubleToValue(System.Double)">
            <summary>
            Doubles to value.
            </summary>
            <param name="value">The value.</param>
            <returns>Value from generic type</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamNumericRangeSlider.ValueToDouble(System.Double)">
            <summary>
            Converts value from specific generic type to double.
            </summary>
            <param name="value">The value.</param>
            <returns>double value</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamNumericRangeSlider.GetParameter(Infragistics.Controls.CommandSource)">
            <summary>
            Gets the parameter - control that 
            can execute the command. 
            </summary>
            <param name="source">The command source.</param>
            <returns>The object that can execute the command</returns>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamNumericRangeSlider.TickMarks">
            <summary>
            Gets the collection of tick marks.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamNumericRangeSlider.IsNaNValueSupported">
            <summary>
            Gets or sets whether a NaN value is supported.
            </summary>
            <c>true</c> if handling a NaN value is supported; otherwise, <c>false</c>.
        </member>
        <member name="M:Infragistics.Controls.Editors.XamNumericRangeSlider.SupportsCommand(System.Windows.Input.ICommand)">
            <summary>
            Supportses the command.
            </summary>
            <param name="command">The command.</param>
            <returns>the command as base command class</returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.XamNumericSlider">
            <summary>
            A control that provides simple slider from double type.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamNumericSlider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Editors.XamNumericSlider"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamNumericSlider.#cctor">
            <summary>
            Static constructor for the <see cref="T:Infragistics.Controls.Editors.XamNumericSlider"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamNumericSlider.Value">
            <summary>
            Gets or sets the value.
            It is the current value of the ActiveThumb , respectively
            Thumb of the simple slider
            </summary>
            <value>The value.</value>        
        </member>
        <member name="P:Infragistics.Controls.Editors.XamNumericSlider.MaxValue">
            <summary>
            Gets or sets the maximum allowable value for this slider's range.
            </summary>
            <value>The max value.</value>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamNumericSlider.MinValue">
            <summary>
            Gets or sets the minimum allowable value for this slider's range.
            </summary>
            <value>The min value.</value>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamNumericSlider.DoubleToValue(System.Double)">
            <summary>
            Converts value double type to specific generic type.
            </summary>
            <param name="value">The value.</param>
            <returns>Value from generic type</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamNumericSlider.ValueToDouble(System.Double)">
            <summary>
            Converts value from specific generic type to double.
            </summary>
            <param name="value">The value.</param>
            <returns>Double value</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamNumericSlider.GetParameter(Infragistics.Controls.CommandSource)">
            <summary>
            Returns the object that defines the parameters necessary to execute the command.
            </summary>
            <param name="source">The CommandSource object which defines the command to be executed.</param>
            <returns>
            The object necessary for the command to complete.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamNumericSlider.SupportsCommand(System.Windows.Input.ICommand)">
            <summary>
            Returns if the object will support a given command type.
            </summary>
            <param name="command">The command to be validated.</param>
            <returns>
            True if the object recognizes the command as actionable against it.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamNumericSlider.OnThumbChanged(Infragistics.Controls.Editors.XamSliderThumb{System.Double})">
            <summary>
            Called when the value of Thumb property is changed.
            </summary>
            <param name="thumb">The thumb.</param>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamNumericSlider.TickMarks">
            <summary>
            Gets the collection of tick marks.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamNumericSlider.IsNaNValueSupported">
            <summary>
            Gets or sets whether a NaN value is supported.
            </summary>
            <c>true</c> if handling a NaN value is supported; otherwise, <c>false</c>.
        </member>
        <member name="T:Infragistics.Controls.Editors.XamRangeSlider`1">
            <summary>
            A control that provides generic slider with
            multiple thumbs (handles) behavior.
            </summary>
            <typeparam name="T">The generic type</typeparam>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamRangeSlider`1.ActiveThumb">
            <summary>
            Gets or sets the active thumb.
            It specified thumb from slider thumbs,
            that is active at the moment
            </summary>
            <value>The active thumb.</value>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamRangeSlider`1.IsSelectionRangeEnabledProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamRangeSlider`1.IsSelectionRangeEnabled"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamRangeSlider`1.IsSelectionRangeEnabled">
            <summary>
            Gets or sets a value indicating whether this instance is selection range enabled.
            When selection rabge is enabled draggung the track fill will drag also the closest thumb
            at equal distance
            </summary>
            <value>
            <c>true</c> if this instance is selection range enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamRangeSlider`1.Thumbs">
            <summary>
            Gets the thumbs - collection from <see cref="T:Infragistics.Controls.Editors.XamSliderThumb`1"/>
            instances.
            </summary>
            <value>The thumbs.</value>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamRangeSlider`1.OnTrackFillDragCompleted(Infragistics.Controls.Editors.XamSliderThumb{`0},Infragistics.Controls.Editors.XamSliderThumb{`0})">
            <summary>
            Method to call the TrackFillDragCompleted Event
            </summary>
            <param name="thumb"></param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamRangeSlider`1.OnTrackClick(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Overrides the <see cref="M:Infragistics.Controls.Editors.XamSliderBase`1.OnTrackClick(System.Windows.Input.MouseButtonEventArgs)"/>.
            When click over the slider track, makes sure that we are not IsSelectionRangeEnabled.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Infragistics.Controls.Editors.XamRangeSlider`1.TrackFillDragCompleted">
            <summary>
            Occurs when a TrackFill Drag has occurred.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.XamSimpleSliderBase`1">
            <summary>
            A control that provides generic simple slider behavior. 
            </summary>
            <typeparam name="T">Generic type</typeparam>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSimpleSliderBase`1.OnApplyTemplate">
            <summary>
            Called when control template is applied.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSimpleSliderBase`1.ThumbProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSimpleSliderBase`1.Thumb"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSimpleSliderBase`1.Thumb">
            <summary>
            Gets or sets the thumb.
            </summary>
            <value>The thumb.</value>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSimpleSliderBase`1.ValueProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSimpleSliderBase`1.Value"/> dependency property. 
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSimpleSliderBase`1.Value">
            <summary>
            Gets or sets the value.
            It is the current value of the ActiveThumb , respectively 
            Thumb of the simple slider
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSimpleSliderBase`1.OnThumbChanged(Infragistics.Controls.Editors.XamSliderThumb{`0})">
            <summary>
            Called when the value of Thumb property is changed.
            </summary>
            <param name="thumb">The thumb.</param>
        </member>
        <member name="T:Infragistics.Controls.Editors.XamSliderBase">
            <summary>
             An object that describes base class for different types of sliders
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Editors.XamSliderBase"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSliderBase.IncreaseButtonVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSliderBase.IncreaseButtonVisibility"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderBase.IncreaseButtonVisibility">
            <summary>
            Gets or sets the increase button visibility.
            It specifies the Visibility of the button in default template,
            that is used to increase with SmallChange value the value of the
            ActiveThumb
            </summary>
            <value>The increase button visibility.</value>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSliderBase.DecreaseButtonVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSliderBase.DecreaseButtonVisibility"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderBase.DecreaseButtonVisibility">
            <summary>
            Gets or sets the decrease button visibility.
            It specifies the Visibility of the button in default template,
            that is used to decrease with SmallChange value the value of the
            ActiveThumb
            </summary>
            <value>The decrease button visibility.</value>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSliderBase.EnableKeyboardNavigationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSliderBase.EnableKeyboardNavigation"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderBase.EnableKeyboardNavigation">
            <summary>
            Gets or sets a value indicating whether is enable keyboard navigation.
            </summary>
            <value>
            <c>true</c> if keyboard navigation is enaled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSliderBase.HorizontalTickMarksTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSliderBase.HorizontalTickMarksTemplate"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderBase.HorizontalTickMarksTemplate">
            <summary>
            Gets or sets the DataTemplate for horizontal <see cref="T:Infragistics.Controls.Editors.SliderTickMarks`1"/>.
            </summary>
            <value>The horizontal tick marks template.</value>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSliderBase.IsDirectionReversedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSliderBase.IsDirectionReversed"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderBase.IsDirectionReversed">
            <summary>
            Gets or sets a value indicating whether the direction
            form MinValue to MaxValue for this <see cref="T:Infragistics.Controls.Editors.XamSliderBase"/> instance is reversed.
            </summary>
            <value>
            <c>true</c> if this instance is direction reversed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSliderBase.IsMouseWheelEnabledProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSliderBase.IsMouseWheelEnabled"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderBase.IsMouseWheelEnabled">
            <summary>
            Gets or sets a value indicating whether this instance is mouse wheel enabled.
            </summary>
            <value>
            <c>true</c> if this instance is mouse wheel enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSliderBase.OrientationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSliderBase.Orientation"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderBase.Orientation">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Controls.Orientation"/> orientation.
            </summary>
            <value>The orientation.</value>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSliderBase.ThumbStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSliderBase.ThumbStyle"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderBase.ThumbStyle">
            <summary>
            Gets or sets the Style property for the <see cref="T:Infragistics.Controls.Editors.XamSliderBase"/>.
            </summary>
            <value>The thumb style.</value>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSliderBase.TrackFillBrushProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSliderBase.TrackFillBrush"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderBase.TrackFillBrush">
            <summary>
            Gets or sets the Brush of the all thumb's trackfills if
            there is not explict set another style to thumb's trackfill.
            </summary>
            <value>The track fill style.</value>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSliderBase.TrackFillStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSliderBase.TrackFillStyle"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderBase.TrackFillStyle">
            <summary>
            Gets or sets the Style of the all thumbs if
            there is not explict set another style to thumb.
            </summary>
            <value>The track fill style.</value>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSliderBase.TrackClickActionProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSliderBase.TrackClickAction"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderBase.TrackClickAction">
            <summary>
            Gets or sets the action when click over slider track.
            It is possible to have no action, to change the ActiveThumb
            value with value of the LargeChange property or move the
            ActiveThumb to the position of the mouse cursor
            </summary>
            <value>The <see cref="T:Infragistics.Controls.Editors.SliderTrackClickAction"/>
            track click action.</value>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSliderBase.VerticalTickMarksTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSliderBase.VerticalTickMarksTemplate"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderBase.VerticalTickMarksTemplate">
            <summary>
            Gets or sets the the DataTemplate for vertical <see cref="T:Infragistics.Controls.Editors.SliderTickMarks`1"/>.
            </summary>
            <value>The vertical tick marks template.</value>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderBase.HorizontalThumbsPanel">
            <summary>
            Gets or sets the horizontal panel for the slider thumbs.
            </summary>
            <value>The horizontal thumbs panel.</value>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderBase.HorizontalTrackFillsPanel">
            <summary>
            Gets or sets the horizontal panel for the slider trackfills.
            </summary>
            <value>The horizontal trackfills panel.</value>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderBase.HorizontalTickMarksContainer">
            <summary>
            Gets or sets the horizontal container for  <see cref="T:Infragistics.Controls.Editors.TickMarksPanel`1"/> .
            </summary>
            <value>The horizontal tick marks container.</value>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderBase.VerticalThumbsPanel">
            <summary>
            Gets or sets the vertical panel for the slider thumbs.
            </summary>
            <value>The vertical thumbs panel.</value>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderBase.VerticalTrackFillsPanel">
            <summary>
            Gets or sets the vertical panel for the slider trackfills.
            </summary>
            <value>The vertical trackfills panel.</value>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderBase.VerticalTickMarksContainer">
            <summary>
            Gets or sets the vertical container for  <see cref="T:Infragistics.Controls.Editors.TickMarksPanel`1"/> .
            </summary>
            <value>The vertical tick marksl container.</value>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase.OverlapThumb(Infragistics.Controls.Editors.XamSliderThumbBase,Infragistics.Controls.Editors.XamSliderThumbBase)">
            <summary>
            Take the "topThumb" and changes the ZIndex to be on top of "bottomThumb"
            </summary>
            <param name="topThumb">The thumb to be on top</param>
            <param name="bottomThumb">The thumb to be on bottom</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase.ArrangeThumbs">
            <summary>
            Arranges the thumbs inside the slider layout.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase.EnsureCurrentState">
            <summary>
            Ensures the state of the current <see cref="T:Infragistics.Controls.Editors.XamSliderBase"/> instance.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase.EnsureDecreaseButtonVisibility">
            <summary>
            Ensures the visibility of  decrease small change button,
            depending on <see cref="P:Infragistics.Controls.Editors.XamSliderBase.DecreaseButtonVisibility"/> property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase.EnsureIncreaseButtonVisibility">
            <summary>
            Ensures the visibility of  increase small change button,
            depending on <see cref="P:Infragistics.Controls.Editors.XamSliderBase.IncreaseButtonVisibility"/> property
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase.EnsureOrientation">
            <summary>
            Ensures the orientation of the slider.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase.EnsureSliderElements">
            <summary>
            Ensures the slider elements -
            Thumbs and ThickMarks position.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase.EnsureTickMarks">
            <summary>
            Ensures the tick marks generation.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase.OnHorizontalTickMarksTemplateChanged(System.Windows.DataTemplate)">
            <summary>
            Called when HorizontalTickMarksTemplate value changed].
            </summary>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase.OnThumbStyleChanged(System.Windows.Style)">
            <summary>
            Called when value of the ThumbStyle property is changed.
            </summary>
            <param name="style">The style.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase.OnTrackFillBrushChanged(System.Windows.Media.Brush)">
            <summary>
            Called when value of the TrackFillBrush property is changed.
            </summary>
            <param name="brush">The Brush.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase.OnTrackFillStyleChanged(System.Windows.Style)">
            <summary>
            Called when value of the TrackFillStyle property is changed.
            </summary>
            <param name="style">The style.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase.OnTrackClick(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Editors.XamSliderBase`1.TrackClick"/> event.
            When click over the slider track.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase.OnVerticalTickMarksTemplateChanged(System.Windows.DataTemplate)">
            <summary>
            Called when VerticalTickMarksTemplate value is changed.
            </summary>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase.ProcessChanges(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Change the value of the active thumb with specified Change value.
            </summary>
            <param name="isIncrease">if set to <c>true</c> value is increased.</param>
            <param name="isLargeChange">if set to <c>true</c> [is large change].</param>
            <param name="forceMoveOneTick">if set to <c>true</c> and Snap to Tick is True, the thumb will move to the next tick mark regardless of change size.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase.XamSliderBase_IsEnabledChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            If the IsEnabled State of our control changes, we need to update to the correct VisualState
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase.GetParameter(Infragistics.Controls.CommandSource)">
            <summary>
            Returns the object that defines the parameters necessary to execute the command.
            </summary>
            <param name="source">The CommandSource object which defines the command to be executed.</param>
            <returns>
            The object necessary for the command to complete.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase.SupportsCommand(System.Windows.Input.ICommand)">
            <summary>
            Returns if the object will support a given command type.
            </summary>
            <param name="command">The command to be validated.</param>
            <returns>
            True if the object recognizes the command as actionable against it.
            </returns>
        </member>
        <member name="E:Infragistics.Controls.Editors.XamSliderBase.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="T:Infragistics.Controls.Editors.XamSliderBaseCommandSource">
            <summary>
            The command source object for <see cref="T:Infragistics.Controls.Editors.XamSliderBase"/> object.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderBaseCommandSource.CommandType">
            <summary>
            Gets or sets the XamSliderBaseCommand which is to be executed by the command.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBaseCommandSource.ResolveCommand">
            <summary>
            Resolves the <see cref="T:System.Windows.Input.ICommand"/> that this <see cref="T:Infragistics.Controls.CommandSource"/> represents.
            </summary>
            <returns>The new instance of the resolved command</returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.XamSliderBase`1">
            <summary>
            A control that provides generic slider behavior.
            </summary>
            <typeparam name="T">Generic type</typeparam>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Editors.XamSliderBase`1"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.ArrangeThumbs">
            <summary>
            Arranges the thumbs inside the slider layout.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.ArrangeThumbs2">
            <summary>
            Arranges the thumbs inside the slider layout.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.ArrangeThumb(Infragistics.Controls.Editors.XamSliderThumb{`0})">
            <summary>
            Arranges the <see cref="T:Infragistics.Controls.Editors.XamSliderThumb`1"/> instance .
            </summary>
            <param name="thumb">The thumb.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.ArrangeThumb(Infragistics.Controls.Editors.XamSliderThumb{`0},System.Boolean)">
            <summary>
            Arranges the thumb.
            </summary>
            <param name="thumb">The thumb.</param>
            <param name="isFirstTime">arrange for first time.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.EnsureOrientation">
            <summary>
            Ensures the state and position of the
            <see cref="T:Infragistics.Controls.Editors.XamSliderBase`1"/> elements,
            depending on orientation of the slider.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.EnsureSliderElements">
            <summary>
            Ensures the slider elements -
            Thumbs and ThickMarks position.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.EnsureTickMarks">
            <summary>
            Ensures the tick marks generation.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.OnApplyTemplate">
            <summary>
            Called when control template is applied.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.OnCreateAutomationPeer">
            <summary>
            When implemented in a derived class, returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> implementations for the automation infrastructure.
            </summary>
            <returns>
            The class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> subclass to return.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.KeyDown"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseWheel"/> event occurs to provide handling for the event in a derived class without attaching a delegate.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Input.MouseWheelEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.OnHorizontalTickMarksTemplateChanged(System.Windows.DataTemplate)">
            <summary>
            Called when the value of the  HorizontalTickMarksTemplate property is changed.
            </summary>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.OnThumbStyleChanged(System.Windows.Style)">
            <summary>
            Called when value of the ThumbStyle property is changed.
            </summary>
            <param name="style">The style.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.OnTrackClick(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Raises the <see cref="E:Infragistics.Controls.Editors.XamSliderBase`1.TrackClick"/> event.
            When click over the slider track.
            Calculates the position of the active thumb when click over
            the slider track, depending on position of the mouse over the
            the track and value of the <see cref="P:Infragistics.Controls.Editors.XamSliderBase.TrackClickAction"/> property
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.OnTrackFillBrushChanged(System.Windows.Media.Brush)">
            <summary>
            Called when value of the TrackFillBrush property is changed.
            </summary>
            <param name="brush">The Brush.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.OnTrackFillStyleChanged(System.Windows.Style)">
            <summary>
            Called when value of the ThumbStyle property is changed.
            </summary>
            <param name="style">The style.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.OnVerticalTickMarksTemplateChanged(System.Windows.DataTemplate)">
            <summary>
            Called when the value of the VerticalTickMarksTemplate
            property is changed.
            </summary>
            <param name="newValue">The new value - DataTemplate.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.ProcessChanges(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Change the value of the active thumb with specified LargeChange or SmallChange value.
            </summary>
            <param name="isIncrease">if set to <c>true</c> value is increased.</param>
            <param name="isLargeChange">if set to <c>true</c> LargeChange is used.</param>
            <param name="forceMoveOneTick">if set to <c>true</c> and Snap to Tick is True, the thumb will move to the next tick mark regardless of change size.</param>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSliderBase`1.LargeChangeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSliderBase`1.LargeChange"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderBase`1.LargeChange">
            <summary>
            Gets or sets the value of the LargeChange property.
            </summary>
            <value>The large change.</value>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSliderBase`1.MaxValueProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSliderBase`1.MaxValue"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderBase`1.MaxValue">
            <summary>
            Gets or sets the maximum allowable value for this slider's range.
            </summary>
            <value>The max value.</value>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSliderBase`1.MinValueProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSliderBase`1.MinValue"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderBase`1.MinValue">
            <summary>
            Gets or sets the minimum allowable value for this slider's range.
            </summary>
            <value>The min value.</value>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSliderBase`1.SmallChangeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSliderBase`1.SmallChange"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderBase`1.SmallChange">
            <summary>
            Gets or sets the value of the SmallChange property.
            </summary>
            <value>The small change.</value>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderBase`1.TickMarks">
            <summary>
            Gets the collection of tick marks - <see cref="T:Infragistics.Controls.Editors.SliderTickMarks`1"/>
            instances.
            </summary>
            <value>The tick marks.</value>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSliderBase`1.IsNaNValueSupportedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSliderBase`1.IsNaNValueSupported"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderBase`1.IsNaNValueSupported">
            <summary>
            Gets or sets whether a NaN value is supported.
            </summary>
            <value>
            <c>true</c> if handling a NaN value is supported; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderBase`1.Thumbs">
            <summary>
            Gets the collection of thumbs - <see cref="T:Infragistics.Controls.Editors.XamSliderThumb`1"/>
            instances.
            </summary>
            <value>The thumbs.</value>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderBase`1.TickMarksPanel">
            <summary>
            Gets the tick marks panel that arranges the tick marks.
            </summary>
            <value>The tick marks panel.</value>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.NextLeftThumb(System.Int32)">
            <summary>
            Returns the first thumb to the left, or null, regardless of enabled, disable, etc.
            </summary>
            <param name="thumbIndex">The index of the thumb to look left from, not the index of the first thumb to the left!!</param>
            <returns>The first left thumb, or null</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.NextLeftInteractableThumb(System.Int32)">
            <summary>
            Returns the first thumb to the left that is interactable, or null
            </summary>
            <param name="thumbIndex">The index of the thumb to look left from, not the index of the first thumb to the left!!</param>
            <returns>The first interactable thumb to the left, or null</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.NextLeftInteractableThumb(System.Int32,Infragistics.Controls.Editors.SliderThumbInteractionMode)">
            <summary>
            Returns the first thumb to the left that has the interaction we are looking for, or null
            </summary>
            <param name="thumbIndex">The index of the thumb to look left from, not the index of the first thumb to the left!!</param>
            <param name="interactionMode">The desired interaction mode</param>
            <returns>The first interactable thumb of the specified mode, or null</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.NextRightThumb(System.Int32)">
            <summary>
            Returns the first thumb to the right, or null, regardless of enabled, disable, etc.
            </summary>
            <param name="thumbIndex">The index of the thumb to look right from, not the index of the first thumb to the right!!</param>
            <returns>The first right thumb, or null</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.NextRightInteractableThumb(System.Int32)">
            <summary>
            Returns the first thumb to the right that is interactable, or null
            </summary>
            <param name="thumbIndex">The index of the thumb to look right from, not the index of the first thumb to the right!!</param>
            <returns>The first interactable thumb to the right, or null</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.NextRightInteractableThumb(System.Int32,Infragistics.Controls.Editors.SliderThumbInteractionMode)">
            <summary>
            Returns the first thumb to the left that has the interaction we are looking for, or null
            </summary>
            <param name="thumbIndex">The index of the thumb to look left from, not the index of the first thumb to the left!!</param>
            <param name="interactionMode">The desired interaction mode</param>
            <returns>The first interactable thumb of the specified mode, or null</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.DriveThumbLeft(Infragistics.Controls.Editors.XamSliderThumb{`0},System.Double)">
            <summary>
            Takes the given thumb and drives it the left aiming at the value specified (previewValue)
            This function handles the interactions with other thumbs, and potentially can change the landing value of the thumb passed in.
            That's why the previewValue is a preview, and not the actual value of the thumb!
            NOTE: Any changes to the logic here should probably be done on DriveThumbRight as well, these two function should stay pretty in sync!
            </summary>
            <param name="thumb">The thumb to move</param>
            <param name="previewValue">The value to try and reach</param>
            <returns>The result of moving the thumb, this could be different that the value passed in if we hit a lock!</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.DriveThumbRight(Infragistics.Controls.Editors.XamSliderThumb{`0},System.Double)">
            <summary>
            Takes the given thumb and drives it the right aiming at the value specified (previewValue)
            This function handles the interactions with other thumbs, and potentially can change the landing value of the thumb passed in.
            That's why the previewValue is a preview, and not the actual value of the thumb!
            NOTE: Any changes to the logic here should probably be done on DriveThumbLeft as well, these two function should stay pretty in sync!
            </summary>
            <param name="thumb">The thumb to move</param>
            <param name="previewValue">The value to try and reach</param>
            <returns>The result of moving the thumb, this could be different that the value passed in if we hit a lock!</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.QuietlyMoveThumbTo(Infragistics.Controls.Editors.XamSliderThumb{`0},`0)">
            <summary>
            This private function moves a thumb to a given position and will interact with thumbs in it path.
            </summary>
            <param name="thumb">The thumb to move</param>
            <param name="previewValue">The value to aim for</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.QuietlyMoveThumbTo(Infragistics.Controls.Editors.XamSliderThumb{`0},`0,System.Boolean)">
            <summary>
            This private function moves a thumb to a given position and will interact with thumbs in it path.
            </summary>
            <param name="thumb">The thumb to move</param>
            <param name="previewValue">The value to aim for</param>
            <param name="provideInteractions">Attempts to the move the thumb respecting the interaction with other thumbs</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.MoveThumbTo(Infragistics.Controls.Editors.XamSliderThumb{`0},`0)">
            <summary>
            This is the method called by the Thumb to move it to a new value.
            This guy should be the ONLY method to move thumbs since he knows how to ensure proper interaction between them
            </summary>
            <param name="thumb">The instance of the thumb to move</param>
            <param name="previewValue">The value to try to move the thumb to</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.MoveThumbTo(Infragistics.Controls.Editors.XamSliderThumb{`0},`0,System.Boolean)">
            <summary>
            This is the method called by the Thumb to move it to a new value.
            This guy should be the ONLY method to move thumbs since he knows how to ensure proper interaction between them
            </summary>
            <param name="thumb">The instance of the thumb to move</param>
            <param name="previewValue">The value to try to move the thumb to</param>
            <param name="provideInteractions">Attempts to the move the thumb respecting the interaction with other thumbs</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.SortThumbs">
            <summary>
            Sorts thumbs by value, if the value is the same, will still know which one was originally left and originally right.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.CoerceMinMaxValue(System.Boolean)">
            <summary>
            Coerces the min max values when change one of them.
            </summary>
            <param name="isMinValueChanged">if set to <c>true</c> [is min value changed].</param>
            <returns>true if values are correct, otherwise false</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.DoubleToValue(System.Double)">
            <summary>
            Converts value double type to specific generic type.
            </summary>
            <param name="value">The value.</param>
            <returns>value from generic type</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.GetDelta">
            <summary>
            Gets the delta, used to coerse the min max values.
            </summary>
            <returns>delta as double </returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.GetLargeChangeValue">
            <summary>
            Gets the LargeChange value in double.
            </summary>
            <returns>value in double</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.GetLargeChangeValue(System.Double,System.Boolean)">
            <summary>
            Gets the LargeChange value in double, based off of a given starting point (but not including it, used for DateTime).
            </summary>
            <param name="baseValue">The starting point to add the large value to.</param>
            <param name="isIncreasing">Indicated whether the change is positive or negative.</param>
            <returns>value in double based of the starting point (but not including it, used for DateTime)</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.GetSmallChangeValue">
            <summary>
            Gets the SmallChange value in double.
            </summary>
            <returns>value in double</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.OnThumbValueChanged(`0,`0,Infragistics.Controls.Editors.XamSliderThumb{`0})">
            <summary>
            Called when the value af the any slide rthumb is changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
            <param name="thumb">The thumb.</param>
            <returns>true if event i cancelled</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.ValueToDouble(`0)">
            <summary>
            Converts value from specific generic type to double.
            </summary>
            <param name="value">The value.</param>
            <returns>Double value</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.ResolveThumbLocation(`0,System.Double)">
            <summary>
            Resolves the thumb location on the slider track.
            </summary>
            <param name="value">The value.</param>
            <param name="size">The size of the track.</param>
            <returns>Position of the thumb relative to track</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.NextTickMarkValue(System.Double,System.Boolean)">
            <summary>
            Will iterate through all of the tick marks starting at the startingValue to find the next tick-mark either left or right depending on the searchRight
            </summary>
            <param name="startingValue">The value to start the search from.</param>
            <param name="searchRight">True = search to the right, increasing.  False = search to the left, decreasing.</param>
            <returns>The value of the next tick-mark.</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderBase`1.OverlapThumb(Infragistics.Controls.Editors.XamSliderThumb{`0},Infragistics.Controls.Editors.XamSliderThumb{`0},System.Double)">
            <summary>
            Take the "topThumb" and changes the ZIndex to be on top of "bottomThumb"
            </summary>
            <param name="topThumb">The thumb to be on top</param>
            <param name="bottomThumb">The thumb to be on bottom</param>
        </member>
        <member name="E:Infragistics.Controls.Editors.XamSliderBase`1.ThumbValueChanged">
            <summary>
            Occurs when value of the any item from Thumbs collection is changed.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Editors.XamSliderBase`1.TrackClick">
            <summary>
            Occurs when there is mouse click over the track of the XamSlider.
            </summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.XamSliderDateTimeThumb">
            <summary>
            A control that provides XamSliderThumb from DateTime type. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderDateTimeThumb.#cctor">
            <summary>
            Initializes the <see cref="T:Infragistics.Controls.Editors.XamSliderDateTimeThumb"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderDateTimeThumb.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Editors.XamSliderDateTimeThumb"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderDateTimeThumb.GetDelta">
            <summary>
            Gets the delta, used to coerse the thumb interaction.
            </summary>
            <returns>delta as double</returns>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderDateTimeThumb.Value">
            <summary>
            Gets or sets the DateTime value of
            the Value property.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Infragistics.Controls.Editors.XamSliderNumericThumb">
            <summary>
            A control that provides XamSliderThumb from double type. 
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderNumericThumb.#cctor">
            <summary>
            Initializes the <see cref="T:Infragistics.Controls.Editors.XamSliderNumericThumb"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderNumericThumb.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Editors.XamSliderNumericThumb"/> class.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderNumericThumb.Value">
            <summary>
            Gets or sets the Double value of
            the Value property.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Infragistics.Controls.Editors.XamSliderThumbBase">
            <summary>
            An object that describes base class for the slider thumb
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderThumbBase.#cctor">
            <summary>
            Initializes the <see cref="T:Infragistics.Controls.Editors.XamSliderThumbBase"/> class.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderThumbBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Controls.Editors.XamSliderThumbBase"/> class.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Editors.XamSliderThumbBase.DragStarted">
            <summary>
            Occurs when mouse is start to drag the <see cref="T:Infragistics.Controls.Editors.XamSliderThumbBase"/> object.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Editors.XamSliderThumbBase.DragDelta">
            <summary>
            Occurs when mouse is dragging the <see cref="T:Infragistics.Controls.Editors.XamSliderThumbBase"/> object.
            </summary>
        </member>
        <member name="E:Infragistics.Controls.Editors.XamSliderThumbBase.DragCompleted">
            <summary>
            Occurs when mouse is complete to drag the <see cref="T:Infragistics.Controls.Editors.XamSliderThumbBase"/> object.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSliderThumbBase.InteractionModeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSliderThumbBase.InteractionMode"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderThumbBase.InteractionMode">
            <summary>
            Gets or sets the interaction mode
            of the <see cref="T:Infragistics.Controls.Editors.XamSliderThumbBase"/>.
            </summary>
            <value>The interaction mode.</value>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSliderThumbBase.IsActiveProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSliderThumbBase.IsActive"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderThumbBase.IsActive">
            <summary>
            Gets or sets a value indicating whether this instance
            is in active state.
            </summary>
            <value><c>true</c> if this instance is active; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderThumbBase.IsDragging">
            <summary>
            Gets or sets a value indicating whether this instance is dragging.
            </summary>
            <value>
            <c>true</c> if this instance is dragging; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderThumbBase.IsRestricted">
            <summary>
            Gets or sets a value indicating whether this instance is restricted
            with a thumb wirth InteractionMode.Lock.
            </summary>
            <value>
            <c>true</c> if this instance is restricted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderThumbBase.Owner">
            <summary>
            Gets or sets the <see cref="T:Infragistics.Controls.Editors.XamSliderBase"/>, that is owner
            of the thumb
            </summary>
            <value>The owner.</value>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderThumbBase.OverlapThumb">
            PK TFS 180731
            Gets or sets a value indicating whether a thumb should overlaps other thumbs or not.
            Used when the thumb we are dragging over is locked, so we could grab the dragged thumb 
            when there is overlapping.         
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderThumbBase.ThumbToolTip">
            <summary>
            Gets or sets the thumb default ToolTip.
            </summary>
            <value>The thumb tool tip.</value>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderThumbBase.IsOver">
            <summary>
            Gets / sets if the mouse is currently over the thumb.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderThumbBase.CancelDrag">
            <summary>
            Cancels the dragging.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSliderThumbBase.IsDragEnabledProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSliderThumbBase.IsDragEnabled"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderThumbBase.IsDragEnabled">
            <summary>
            Gets or sets a value indicating whether this instance is draggable or not.
            </summary>
            <value>
            <c>true</c> if this instance is drag enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSliderThumbBase.ToolTipTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSliderThumbBase.ToolTipTemplate"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderThumbBase.ToolTipTemplate">
            <summary>
            Gets or sets the ContentTemplate of the ToolTip .
            </summary>
            <value>The tool tip template.</value>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSliderThumbBase.ToolTipVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSliderThumbBase.ToolTipVisibility"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderThumbBase.ToolTipVisibility">
            <summary>
            Gets or sets the Visibility of the ToolTip .
            </summary>
            <value>The tool tip Visibility.</value>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderThumbBase.EnsureCurrentState">
            <summary>
            Ensures VisualStateManager current state when
            the owner of the control is in Horizontal or
            Vertical state
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderThumbBase.RaiseDragCompleted(System.Boolean)">
            <summary>
            Raises the DragCompleted event.
            </summary>
            <param name="canceled">if set to <c>true</c> [canceled].</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderThumbBase.OnDragCompleted(System.Double,System.Double,System.Boolean)">
            <summary>
            Called when DragCompleted event is raised.
            </summary>
            <param name="horizontalChange">The horizontal change.</param>
            <param name="verticalChange">The vertical change.</param>
            <param name="canceled">if set to <c>true</c> [cancelled].</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderThumbBase.OnDragDelta(System.Double,System.Double)">
            <summary>
            Called when DragDelta event is raised.
            </summary>
            <param name="horizontalChange">The horizontal change.</param>
            <param name="verticalChange">The verticsal change.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderThumbBase.OnDragStarted(System.Double,System.Double)">
            <summary>
            Called when DragStarted event is raised.
            </summary>
            <param name="horizontalOffset">The horizontal offset.</param>
            <param name="verticalOffset">The verticsal offset.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderThumbBase.OnIsActiveChanged(System.Boolean,System.Boolean)">
            <summary>
            Called when IsActive property value is changed.
            </summary>
            <param name="oldValue">if set to <c>true</c> The old value.</param>
            <param name="newValue">if set to <c>true</c> The new value.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderThumbBase.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderThumbBase.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.GotFocus"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderThumbBase.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.LostFocus"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderThumbBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseEnter"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderThumbBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderThumbBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderThumbBase.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseMove"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderThumbBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeave"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderThumbBase.XamSliderThumbBase_IsEnabledChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            If the IsEnabled State of our control changes, we need to update to the correct VisualState
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="E:Infragistics.Controls.Editors.XamSliderThumbBase.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderThumbBase.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="T:Infragistics.Controls.Editors.XamSliderThumb`1">
            <summary>
            An object that describes generic class for the slider thumb
            </summary>
            <typeparam name="T">generic type</typeparam>
        </member>
        <member name="E:Infragistics.Controls.Editors.XamSliderThumb`1.ValueChanged">
            <summary>
            Occurs when the value of the <see cref="T:Infragistics.Controls.Editors.XamSliderThumb`1"/> Value property is changed.
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSliderThumb`1.ValueProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSliderThumb`1.Value"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderThumb`1.Value">
            <summary>
            Gets or sets the generic value of
            the Value property.
            </summary>
            <value>The value.</value>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSliderThumb`1.IsSnapToTickEnabledProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSliderThumb`1.IsSnapToTickEnabled"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderThumb`1.IsSnapToTickEnabled">
            <summary>
            Gets or sets a value indicating whether this thumb instance is snap to tick enabled.
            </summary>
            <value>
            <c>true</c> if this instance is snap to tick enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSliderThumb`1.IsTrackFillVisibleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSliderThumb`1.IsTrackFillVisible"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderThumb`1.IsTrackFillVisible">
            <summary>
            Gets or sets a value indicating whether TrackFill of the thumb is visible.
            </summary>
            <value>
            <c>true</c> if this instance is TrackFill visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSliderThumb`1.TrackFillBrushProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSliderThumb`1.TrackFillBrush"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderThumb`1.TrackFillBrush">
            <summary>
            Gets or sets the Brush, used for background of
            the <see cref="P:Infragistics.Controls.Editors.XamSliderThumb`1.TrackFill"/> instance,
            assigned to the <see cref="T:Infragistics.Controls.Editors.XamSliderThumb`1"/>.
            </summary>
            <value>The track fill brush.</value>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamSliderThumb`1.TrackFillStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Controls.Editors.XamSliderThumb`1.TrackFillStyle"/> dependency property.
            </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamSliderThumb`1.TrackFillStyle">
            <summary>
            Gets or sets the Style, used for background of
            the <see cref="P:Infragistics.Controls.Editors.XamSliderThumb`1.TrackFill"/> instance,
            assigned to the <see cref="T:Infragistics.Controls.Editors.XamSliderThumb`1"/>.
            </summary>
            <value>The track fill brush.</value>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderThumb`1.EnsureCurrentState">
            <summary>
            Ensures VisualStateManager current state when
            the owner of the control is in Horizontal or
            Vertical state
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderThumb`1.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderThumb`1.OnCreateAutomationPeer">
            <summary>
            When implemented in a derived class, returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> implementations for the automation infrastructure.
            </summary>
            <returns>
            The class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> subclass to return.
            </returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderThumb`1.OnDragDelta(System.Double,System.Double)">
            <summary>
            Called when DragDelta event is raised.
            </summary>
            <param name="horizontalChange">The horizontal change.</param>
            <param name="verticalChange">The verticsal change.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderThumb`1.OnDragStarted(System.Double,System.Double)">
            <summary>
            Called when DragStarted event is raised.
            </summary>
            <param name="horizontalOffset">The horizontal offset.</param>
            <param name="verticalOffset">The verticsal offset.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderThumb`1.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Raises the <see cref="M:Infragistics.Controls.Editors.XamSliderThumb`1.OnGotFocus(System.Windows.RoutedEventArgs)"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderThumb`1.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderThumb`1.QuietlySetValue(`0)">
            <summary>
            Changes the value of Value, but sets a ONE TIME usage flag to prevent it from invoking the callback handler
            This is dangerous and ugly, and should only be used by the slider.
            </summary>
            <param name="value">The value to set</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderThumb`1.GetDelta">
            <summary>
            Gets the delta, used to coerse the thumb interaction.
            </summary>
            <returns>delta as double </returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderThumb`1.InitDrag">
            <summary>
            Inits parameters when start to drag the thumb.
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderThumb`1.UpdateThumbPosition">
            <summary>
            Updates the thumb position.
            when MinValue or MaxValue of the slider is changed
            </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderThumb`1.IsThumbValid">
            <summary>
            Checks to see if a thumb meets specific criteria to be considered valid, for right now, just enabled!
            </summary>
            <param name="thumb">The thumb to check</param>
            <returns>True or False</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderThumb`1.IsThumbValidForInteraction">
            <summary>
            Checks to see if the thumb is a Valid Interactable thumb... this means, it's Valid (see above), and NOT free!
            </summary>
            <param name="thumb">The thumb to look at</param>
            <returns>True or False</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderThumb`1.OnValueChanged(`0,`0)">
            <summary>
            Called when value of the ValueChanged event is raised.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderThumb`1.CoerceSnapToTickMarks(System.Double)">
            <summary>
            Iterates through all of the tick marks in all tick mark collections to find the closest tick mark to the 
            position of new value.
            </summary>
            <param name="newValue">The value to find the nearest tick mark to</param>
            <returns>The value of the nearest tickmark (if IsSnapToTickEnabled = true, otherwise just passes through the value)</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamSliderThumb`1.GetThumbRect(Infragistics.Controls.Editors.XamSliderThumb{`0})">
            <summary>
            Get the position of the thumb inside containing Canvas
            </summary>
        </member>
    </members>
</doc>
